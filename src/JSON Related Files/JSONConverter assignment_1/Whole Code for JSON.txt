 public class Address
 {
     public string Street { get; set; }
     public string City { get; set; }
     public string Country { get; set; }
 }

 public class AdmissionTest
 {
     public DateTime StartDateTime { get; set; }
     public DateTime EndDateTime { get; set; }
     public double TestFees { get; set; }
 }

public class ArrayNormal
{
    public int[] array { get; set; }
    public string[] array2 { get; set; }
}

public class Course
{
    public string Title { get; set; }
    public Instructor Teacher { get; set; }
    public List<Topic> Topics { get; set; }
    public double Fees { get; set; }
    public List<AdmissionTest> Tests { get; set; }
}

 public class Instructor
 {
     public string Name { get; set; }
     public string Email { get; set; }
     public Address PresentAddress { get; set; }
     public Address PermanentAddress { get; set; }
     public List<Phone> PhoneNumbers { get; set; }
 }

 public class Jsonformatter
 {
     public static string Convert(object item)    
     {
         if (item == null)
         {
             return "{}";                               // Return an {} brackets if null input
         }

         StringBuilder json = new StringBuilder();   
         json.Append("{");                              //Initial { starting bracket    

         PropertyInfo[] properties = item.GetType().GetProperties();

         foreach (PropertyInfo prop in properties)
         {
             json.Append($"\"{prop.Name}\":");          //----------------------Start

             object value = prop.GetValue(item);
             if (value == null)
             {
                 json.Append("null, ");
             }

             //Testing For primitive, string and Date time (type)
             else if(prop.PropertyType.IsPrimitive || prop.PropertyType == typeof(string) || prop.PropertyType == typeof(DateTime))
             {
                 json.Append($"\"{value}\", ");
             }

             //Checking Specific for Array type
             else if (prop.PropertyType.IsArray)
             {
                 Array array = (Array)value;
                 json.Append("[");
                 for (int i = 0; i < array.Length; i++)
                 {
                     json.Append($"\"{array.GetValue(i)}\"");
                     if (i < array.Length - 1)
                     {
                         json.Append(", ");
                     }
                 }
                 json.Append("], ");
             }

             //Handling the cellectibles, List,
             //If collectible then pass value to enumerable variable
             //This part dosent work for normal array, I dont know why
             else if (value is IEnumerable enumerable)
             {
                 json.Append("[");                        //Starting the structure of array with [ bracket
                 foreach (var element in enumerable)
                 {
                     json.Append(Convert(element) + ","); //If the value is complex then another round of recursion
                 }
                 // Remove the last comma and space
                 if (json[json.Length - 2] == ',')
                 {
                     json.Length -= 2;
                 }
                 json.Append("], ");
             }
             else
             {
                 json.Append(Convert(value) + ", ");     //Else continues to recursion
             }
         }

         // Remove the last comma and space
         if (json.Length > 1)
         {
             json.Length -= 2;
         }

         json.Append("}");

         return json.ToString();
     }
 }

 public class Phone
 {
     public string Number { get; set; }
     public string Extension { get; set; }
     public string CountryCode { get; set; }
 }

public class Session
{
    public int DurationInHour { get; set; }
    public string LearningObjective { get; set; }
}

public class Topic
{
    public string Title { get; set; }
    public string Description { get; set; }
    public List<Session> Sessions { get; set; }
}



//============================================================


//Console.WriteLine("Hello, World!");

////StringBuilder sb = new StringBuilder("My name is methos");
////Console.WriteLine(sb[3]);

//Course course = new Course()
//{
//    Title = "ASP.NET",
//    Fees = 30000,
//    Teacher = new Instructor
//    {
//       // Name = "Jalal Uddin",
//        Email = "jalaluddin@example.com"
//    }
//};

//string json = Jsonformatter.Convert(course);
//Console.WriteLine(json);

//List<Course> list = new List<Course>();
//var p = list.GetType();



////=========================================================================================================

//Course course = new Course
//{
//    Title = "Asp.net",
//    Fees = 30000,
//    Teacher = new Instructor
//    {
//        Name = "Jalaluddin",
//        Email = "jalaluddin@example.com"
//    },
//    Topics = new List<Topic>
//            {
//                new Topic
//                {
//                    Title = "Introduction to ASP.NET",
//                    Description = "Learn the basics of ASP.NET framework",
//                    Sessions = new List<Session>
//                    {
//                        new Session { DurationInHour = 2, LearningObjective = "Understand ASP.NET fundamentals" },
//                        new Session { DurationInHour = 3, LearningObjective = "Build a simple ASP.NET application" }
//                    }
//                },
//                new Topic
//                {
//                    Title = "Advanced ASP.NET",
//                    Description = "Deep dive into ASP.NET features",
//                    Sessions = new List<Session>
//                    {
//                        new Session { DurationInHour = 2, LearningObjective = "Learn about ASP.NET MVC" },
//                        new Session { DurationInHour = 3, LearningObjective = "Implement authentication and authorization" }
//                    }
//                }
//            }
//};

Course course2 = new Course
{
    Title = "C#",
    Teacher = new Instructor
    {
        Name = "Jalal Uddin",
        Email = "csharp@gmail.com",
    },
    Topics = new List<Topic>
    {
        new Topic
        {
            Title = "Loops",
            Description = "For, Foreach, while, do",
            Sessions = new List<Session>
            {
                new Session{ DurationInHour = 2, LearningObjective = "Understand Loops" },
                new Session{ DurationInHour = 3, LearningObjective = "Understand flow"}
            }
        },
        new Topic
        {
            Title = "Strings",
            Description = "string builder , string",
            Sessions = new List<Session>
            {
                new Session{ DurationInHour = 2, LearningObjective = "string builder " },
                new Session{ DurationInHour = 3, LearningObjective = "Understand string"}
            }
        }
    }
};


string json = Jsonformatter.Convert(course2);
Console.WriteLine(json);
