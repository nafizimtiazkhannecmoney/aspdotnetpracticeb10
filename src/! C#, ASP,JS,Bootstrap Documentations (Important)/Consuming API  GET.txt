 ctrl k s for wrap
 ### Make A new Project in The Solution //ASP.NET Core Web App(Model-View-Controller)// Project Name: NZWalks.UI (Create it as is no need to change anything)

 1### We Need To run Both projects together to talk and consume the API
	*Solution>>Properties>>Startup Project>>Multiple Startup Projects>>Make Both Project Action>>Start (Change The Release To Debug)
	*Comment Out the Authorize Attribute Just for now

 2### Now to consume API we need to make a new Controller for Regions, RegionsController (MVC Controller Empty)

 3### To use HttpClient we need to inject HttpClientFactory inside the Program.cs
-----------------------------------------------------------------------------------------------------------------------------------------
Program.cs
-----------------------------------------------------------------------------------------------------------------------------------------
builder.Services.AddHttpClient(); // Injecting HttpClient

var app = builder.Build();
-----------------------------------------------------------------------------------------------------------------------------------------
 
 ### Now We can inject IHttpClientFactory inside the Controller so we can create a new Client  
 4### Make DTO to capture the Json object (RegionDTO)


 5### This is RegionsController Code
-----------------------------------------------------------------------------------------------------------------------------------------
RegionsController.cs
-----------------------------------------------------------------------------------------------------------------------------------------
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using NZWalks.UI.Models.DTO;

namespace NZWalks.UI.Controllers
{
    public class RegionsController : Controller
    {
        private readonly IHttpClientFactory httpClientFactory;

        public RegionsController(IHttpClientFactory httpClientFactory)
        {
            this.httpClientFactory = httpClientFactory;
        }
        public async Task<IActionResult> Index()
        {
            List<RegionDTO> response = new List<RegionDTO>();
            try
            {
                // Get All Regions from API
                var client = httpClientFactory.CreateClient();

                var httpResponseMessage = await client.GetAsync("https://localhost:7142/api/regions");

                httpResponseMessage.EnsureSuccessStatusCode();

                response.AddRange(await httpResponseMessage.Content.ReadFromJsonAsync<IEnumerable<RegionDTO>>());
            }
            catch (Exception ex)
            {
                // Log the exception with error level and include the exception details.
                //logger.LogError(ex, "An error occurred while fetching regions in Index action.");
            }

            return View(response);
        }
    }
}
-----------------------------------------------------------------------------------------------------------------------------------------
 
 6### This is Regions Index Code
-----------------------------------------------------------------------------------------------------------------------------------------
Index.cshtml
-----------------------------------------------------------------------------------------------------------------------------------------
@model IEnumerable<NZWalks.UI.Models.DTO.RegionDTO>

<h1 class="mt-3">Regions</h1>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Code</th> 
        </tr>
    </thead>
    <tbody>
        @foreach (var region in Model)
        {
            <tr>
                <td>@region.Id</td>
                <td>@region.Name</td>
                <td>@region.Code</td>
            </tr>
        }
    </tbody>
</table>
-----------------------------------------------------------------------------------------------------------------------------------------
	 


































































