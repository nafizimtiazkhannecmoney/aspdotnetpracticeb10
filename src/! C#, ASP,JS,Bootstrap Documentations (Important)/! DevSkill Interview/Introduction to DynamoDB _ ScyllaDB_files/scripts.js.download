/*
 * jQuery MD5 Plugin 1.2.1
 * https://github.com/blueimp/jQuery-MD5
 *
 * Copyright 2010, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * http://creativecommons.org/licenses/MIT/
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

 /*jslint bitwise: true */
 /*global unescape, jQuery */

 (function ($) {
    'use strict';
    if( jQuery('.accordion-to-select').length > 0 ) {
        accordion_to_select();
    }
     function accordion_to_select(){
         jQuery.each(jQuery('.accordion-to-select'), function(key, value){
             var select_id = 'select-'+key;
             jQuery(value).prepend('<div class="select-wrapper"><select id="'+select_id+'"></select></div>');
             var accordions = value;
             var holder = $(value).find('.elementor-accordion-item');
             var hash = window.location.hash.substr(1);

             var titles = $(holder).find('.elementor-tab-title');
             $.each(titles, function(key, title){
                 var is_selected = (hash == jQuery(title).text().toLowerCase().trim()) ? 'selected' : '';
                 var section_id = jQuery(title).attr('id').replace('elementor-tab-title-','');
                 $('#'+select_id).append('<option ' + is_selected + ' value="'+section_id+'" tabindex="'+section_id+'" data-key="'+key+'">'+jQuery(title).text()+'</option>');
             });

             $('#'+select_id).on('change', function(){
                 var selected = (this.value);
                 var selected_ord = ( jQuery( '#' + select_id + ' option[value='+selected+']').data('key'));
                 $('.elementor-tab-content').hide();
                 $('#elementor-tab-content-'+selected).show();
                 if( 0 == selected_ord){
                     jQuery('.first-option-show').show();
                 }else{
                     jQuery('.first-option-show').hide();
                 }
             });
         })
     }
    /*
    * Add integers, wrapping at 2^32. This uses 16-bit operations internally
    * to work around bugs in some JS interpreters.
    */
    function safe_add(x, y) {
        var lsw = (x & 0xFFFF) + (y & 0xFFFF),
        msw = (x >> 16) + (y >> 16) + (lsw >> 16);
        return (msw << 16) | (lsw & 0xFFFF);
    }

    /*
    * Bitwise rotate a 32-bit number to the left.
    */
    function bit_rol(num, cnt) {
        return (num << cnt) | (num >>> (32 - cnt));
    }

    /*
    * These functions implement the four basic operations the algorithm uses.
    */
    function md5_cmn(q, a, b, x, s, t) {
        return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
    }
    function md5_ff(a, b, c, d, x, s, t) {
        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
    }
    function md5_gg(a, b, c, d, x, s, t) {
        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
    }
    function md5_hh(a, b, c, d, x, s, t) {
        return md5_cmn(b ^ c ^ d, a, b, x, s, t);
    }
    function md5_ii(a, b, c, d, x, s, t) {
        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
    }

    /*
    * Calculate the MD5 of an array of little-endian words, and a bit length.
    */
    function binl_md5(x, len) {
        /* append padding */
        x[len >> 5] |= 0x80 << ((len) % 32);
        x[(((len + 64) >>> 9) << 4) + 14] = len;

        var i, olda, oldb, oldc, oldd,
        a =  1732584193,
        b = -271733879,
        c = -1732584194,
        d =  271733878;

        for (i = 0; i < x.length; i += 16) {
            olda = a;
            oldb = b;
            oldc = c;
            oldd = d;

            a = md5_ff(a, b, c, d, x[i],       7, -680876936);
            d = md5_ff(d, a, b, c, x[i +  1], 12, -389564586);
            c = md5_ff(c, d, a, b, x[i +  2], 17,  606105819);
            b = md5_ff(b, c, d, a, x[i +  3], 22, -1044525330);
            a = md5_ff(a, b, c, d, x[i +  4],  7, -176418897);
            d = md5_ff(d, a, b, c, x[i +  5], 12,  1200080426);
            c = md5_ff(c, d, a, b, x[i +  6], 17, -1473231341);
            b = md5_ff(b, c, d, a, x[i +  7], 22, -45705983);
            a = md5_ff(a, b, c, d, x[i +  8],  7,  1770035416);
            d = md5_ff(d, a, b, c, x[i +  9], 12, -1958414417);
            c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
            b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
            a = md5_ff(a, b, c, d, x[i + 12],  7,  1804603682);
            d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
            c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
            b = md5_ff(b, c, d, a, x[i + 15], 22,  1236535329);

            a = md5_gg(a, b, c, d, x[i +  1],  5, -165796510);
            d = md5_gg(d, a, b, c, x[i +  6],  9, -1069501632);
            c = md5_gg(c, d, a, b, x[i + 11], 14,  643717713);
            b = md5_gg(b, c, d, a, x[i],      20, -373897302);
            a = md5_gg(a, b, c, d, x[i +  5],  5, -701558691);
            d = md5_gg(d, a, b, c, x[i + 10],  9,  38016083);
            c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
            b = md5_gg(b, c, d, a, x[i +  4], 20, -405537848);
            a = md5_gg(a, b, c, d, x[i +  9],  5,  568446438);
            d = md5_gg(d, a, b, c, x[i + 14],  9, -1019803690);
            c = md5_gg(c, d, a, b, x[i +  3], 14, -187363961);
            b = md5_gg(b, c, d, a, x[i +  8], 20,  1163531501);
            a = md5_gg(a, b, c, d, x[i + 13],  5, -1444681467);
            d = md5_gg(d, a, b, c, x[i +  2],  9, -51403784);
            c = md5_gg(c, d, a, b, x[i +  7], 14,  1735328473);
            b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);

            a = md5_hh(a, b, c, d, x[i +  5],  4, -378558);
            d = md5_hh(d, a, b, c, x[i +  8], 11, -2022574463);
            c = md5_hh(c, d, a, b, x[i + 11], 16,  1839030562);
            b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
            a = md5_hh(a, b, c, d, x[i +  1],  4, -1530992060);
            d = md5_hh(d, a, b, c, x[i +  4], 11,  1272893353);
            c = md5_hh(c, d, a, b, x[i +  7], 16, -155497632);
            b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
            a = md5_hh(a, b, c, d, x[i + 13],  4,  681279174);
            d = md5_hh(d, a, b, c, x[i],      11, -358537222);
            c = md5_hh(c, d, a, b, x[i +  3], 16, -722521979);
            b = md5_hh(b, c, d, a, x[i +  6], 23,  76029189);
            a = md5_hh(a, b, c, d, x[i +  9],  4, -640364487);
            d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
            c = md5_hh(c, d, a, b, x[i + 15], 16,  530742520);
            b = md5_hh(b, c, d, a, x[i +  2], 23, -995338651);

            a = md5_ii(a, b, c, d, x[i],       6, -198630844);
            d = md5_ii(d, a, b, c, x[i +  7], 10,  1126891415);
            c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
            b = md5_ii(b, c, d, a, x[i +  5], 21, -57434055);
            a = md5_ii(a, b, c, d, x[i + 12],  6,  1700485571);
            d = md5_ii(d, a, b, c, x[i +  3], 10, -1894986606);
            c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
            b = md5_ii(b, c, d, a, x[i +  1], 21, -2054922799);
            a = md5_ii(a, b, c, d, x[i +  8],  6,  1873313359);
            d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
            c = md5_ii(c, d, a, b, x[i +  6], 15, -1560198380);
            b = md5_ii(b, c, d, a, x[i + 13], 21,  1309151649);
            a = md5_ii(a, b, c, d, x[i +  4],  6, -145523070);
            d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
            c = md5_ii(c, d, a, b, x[i +  2], 15,  718787259);
            b = md5_ii(b, c, d, a, x[i +  9], 21, -343485551);

            a = safe_add(a, olda);
            b = safe_add(b, oldb);
            c = safe_add(c, oldc);
            d = safe_add(d, oldd);
        }
        return [a, b, c, d];
    }

    /*
    * Convert an array of little-endian words to a string
    */
    function binl2rstr(input) {
        var i,
        output = '';
        for (i = 0; i < input.length * 32; i += 8) {
            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);
        }
        return output;
    }

    /*
    * Convert a raw string to an array of little-endian words
    * Characters >255 have their high-byte silently ignored.
    */
    function rstr2binl(input) {
        var i,
        output = [];
        output[(input.length >> 2) - 1] = undefined;
        for (i = 0; i < output.length; i += 1) {
            output[i] = 0;
        }
        for (i = 0; i < input.length * 8; i += 8) {
            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);
        }
        return output;
    }

    /*
    * Calculate the MD5 of a raw string
    */
    function rstr_md5(s) {
        return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));
    }

    /*
    * Calculate the HMAC-MD5, of a key and some data (raw strings)
    */
    function rstr_hmac_md5(key, data) {
        var i,
        bkey = rstr2binl(key),
        ipad = [],
        opad = [],
        hash;
        ipad[15] = opad[15] = undefined;
        if (bkey.length > 16) {
            bkey = binl_md5(bkey, key.length * 8);
        }
        for (i = 0; i < 16; i += 1) {
            ipad[i] = bkey[i] ^ 0x36363636;
            opad[i] = bkey[i] ^ 0x5C5C5C5C;
        }
        hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);
        return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));
    }

    /*
    * Convert a raw string to a hex string
    */
    function rstr2hex(input) {
        var hex_tab = '0123456789abcdef',
        output = '',
        x,
        i;
        for (i = 0; i < input.length; i += 1) {
            x = input.charCodeAt(i);
            output += hex_tab.charAt((x >>> 4) & 0x0F) +
            hex_tab.charAt(x & 0x0F);
        }
        return output;
    }

    /*
    * Encode a string as utf-8
    */
    function str2rstr_utf8(input) {
        return unescape(encodeURIComponent(input));
    }

    /*
    * Take string arguments and return either raw or hex encoded strings
    */
    function raw_md5(s) {
        return rstr_md5(str2rstr_utf8(s));
    }
    function hex_md5(s) {
        return rstr2hex(raw_md5(s));
    }
    function raw_hmac_md5(k, d) {
        return rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d));
    }
    function hex_hmac_md5(k, d) {
        return rstr2hex(raw_hmac_md5(k, d));
    }

    $.md5 = function (string, key, raw) {
        if (!key) {
            if (!raw) {
                return hex_md5(string);
            } else {
                return raw_md5(string);
            }
        }
        if (!raw) {
            return hex_hmac_md5(key, string);
        } else {
            return raw_hmac_md5(key, string);
        }
    };
}(typeof jQuery === 'function' ? jQuery : this));

/*
* jquery-match-height 0.7.2 by @liabru
* http://brm.io/jquery-match-height/
* License MIT
*/
!function(t){"use strict";"function"==typeof define&&define.amd?define(["jquery"],t):"undefined"!=typeof module&&module.exports?module.exports=t(require("jquery")):t(jQuery)}(function(t){var e=-1,o=-1,n=function(t){return parseFloat(t)||0},a=function(e){var o=1,a=t(e),i=null,r=[];return a.each(function(){var e=t(this),a=e.offset().top-n(e.css("margin-top")),s=r.length>0?r[r.length-1]:null;null===s?r.push(e):Math.floor(Math.abs(i-a))<=o?r[r.length-1]=s.add(e):r.push(e),i=a}),r},i=function(e){var o={
    byRow:!0,property:"height",target:null,remove:!1};return"object"==typeof e?t.extend(o,e):("boolean"==typeof e?o.byRow=e:"remove"===e&&(o.remove=!0),o)},r=t.fn.matchHeight=function(e){var o=i(e);if(o.remove){var n=this;return this.css(o.property,""),t.each(r._groups,function(t,e){e.elements=e.elements.not(n)}),this}return this.length<=1&&!o.target?this:(r._groups.push({elements:this,options:o}),r._apply(this,o),this)};r.version="0.7.2",r._groups=[],r._throttle=80,r._maintainScroll=!1,r._beforeUpdate=null,
    r._afterUpdate=null,r._rows=a,r._parse=n,r._parseOptions=i,r._apply=function(e,o){var s=i(o),h=t(e),l=[h],c=t(window).scrollTop(),p=t("html").outerHeight(!0),u=h.parents().filter(":hidden");return u.each(function(){var e=t(this);e.data("style-cache",e.attr("style"))}),u.css("display","block"),s.byRow&&!s.target&&(h.each(function(){var e=t(this),o=e.css("display");"inline-block"!==o&&"flex"!==o&&"inline-flex"!==o&&(o="block"),e.data("style-cache",e.attr("style")),e.css({display:o,"padding-top":"0",
        "padding-bottom":"0","margin-top":"0","margin-bottom":"0","border-top-width":"0","border-bottom-width":"0",height:"100px",overflow:"hidden"})}),l=a(h),h.each(function(){var e=t(this);e.attr("style",e.data("style-cache")||"")})),t.each(l,function(e,o){var a=t(o),i=0;if(s.target)i=s.target.outerHeight(!1);else{if(s.byRow&&a.length<=1)return void a.css(s.property,"");a.each(function(){var e=t(this),o=e.attr("style"),n=e.css("display");"inline-block"!==n&&"flex"!==n&&"inline-flex"!==n&&(n="block");var a={
        display:n};a[s.property]="",e.css(a),e.outerHeight(!1)>i&&(i=e.outerHeight(!1)),o?e.attr("style",o):e.css("display","")})}a.each(function(){var e=t(this),o=0;s.target&&e.is(s.target)||("border-box"!==e.css("box-sizing")&&(o+=n(e.css("border-top-width"))+n(e.css("border-bottom-width")),o+=n(e.css("padding-top"))+n(e.css("padding-bottom"))),e.css(s.property,i-o+"px"))})}),u.each(function(){var e=t(this);e.attr("style",e.data("style-cache")||null)}),r._maintainScroll&&t(window).scrollTop(c/p*t("html").outerHeight(!0)),
        this},r._applyDataApi=function(){var e={};t("[data-match-height], [data-mh]").each(function(){var o=t(this),n=o.attr("data-mh")||o.attr("data-match-height");n in e?e[n]=e[n].add(o):e[n]=o}),t.each(e,function(){this.matchHeight(!0)})};var s=function(e){r._beforeUpdate&&r._beforeUpdate(e,r._groups),t.each(r._groups,function(){r._apply(this.elements,this.options)}),r._afterUpdate&&r._afterUpdate(e,r._groups)};r._update=function(n,a){if(a&&"resize"===a.type){var i=t(window).width();if(i===e)return;e=i;
        }n?o===-1&&(o=setTimeout(function(){s(a),o=-1},r._throttle)):s(a)},t(r._applyDataApi);var h=t.fn.on?"on":"bind";t(window)[h]("load",function(t){r._update(!1,t)}),t(window)[h]("resize orientationchange",function(t){r._update(!0,t)})});


/*!
 * clipboard.js v1.7.1
 * https://zenorocha.github.io/clipboard.js
 *
 * Licensed MIT © Zeno Rocha
 */
 (function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Clipboard = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
    var DOCUMENT_NODE_TYPE = 9;

/**
 * A polyfill for Element.matches()
 */
 if (typeof Element !== 'undefined' && !Element.prototype.matches) {
    var proto = Element.prototype;

    proto.matches = proto.matchesSelector ||
    proto.mozMatchesSelector ||
    proto.msMatchesSelector ||
    proto.oMatchesSelector ||
    proto.webkitMatchesSelector;
}

/**
 * Finds the closest parent that matches a selector.
 *
 * @param {Element} element
 * @param {String} selector
 * @return {Function}
 */
 function closest (element, selector) {
    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {
        if (typeof element.matches === 'function' &&
            element.matches(selector)) {
          return element;
  }
  element = element.parentNode;
}
}

module.exports = closest;

},{}],2:[function(require,module,exports){
    var closest = require('./closest');

/**
 * Delegates event to a selector.
 *
 * @param {Element} element
 * @param {String} selector
 * @param {String} type
 * @param {Function} callback
 * @param {Boolean} useCapture
 * @return {Object}
 */
 function delegate(element, selector, type, callback, useCapture) {
    var listenerFn = listener.apply(this, arguments);

    element.addEventListener(type, listenerFn, useCapture);

    return {
        destroy: function() {
            element.removeEventListener(type, listenerFn, useCapture);
        }
    }
}

/**
 * Finds closest match and invokes callback.
 *
 * @param {Element} element
 * @param {String} selector
 * @param {String} type
 * @param {Function} callback
 * @return {Function}
 */
 function listener(element, selector, type, callback) {
    return function(e) {
        e.delegateTarget = closest(e.target, selector);

        if (e.delegateTarget) {
            callback.call(element, e);
        }
    }
}

module.exports = delegate;

},{"./closest":1}],3:[function(require,module,exports){
/**
 * Check if argument is a HTML element.
 *
 * @param {Object} value
 * @return {Boolean}
 */
 exports.node = function(value) {
    return value !== undefined
    && value instanceof HTMLElement
    && value.nodeType === 1;
};

/**
 * Check if argument is a list of HTML elements.
 *
 * @param {Object} value
 * @return {Boolean}
 */
 exports.nodeList = function(value) {
    var type = Object.prototype.toString.call(value);

    return value !== undefined
    && (type === '[object NodeList]' || type === '[object HTMLCollection]')
    && ('length' in value)
    && (value.length === 0 || exports.node(value[0]));
};

/**
 * Check if argument is a string.
 *
 * @param {Object} value
 * @return {Boolean}
 */
 exports.string = function(value) {
    return typeof value === 'string'
    || value instanceof String;
};

/**
 * Check if argument is a function.
 *
 * @param {Object} value
 * @return {Boolean}
 */
 exports.fn = function(value) {
    var type = Object.prototype.toString.call(value);

    return type === '[object Function]';
};

},{}],4:[function(require,module,exports){
    var is = require('./is');
    var delegate = require('delegate');

/**
 * Validates all params and calls the right
 * listener function based on its target type.
 *
 * @param {String|HTMLElement|HTMLCollection|NodeList} target
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
 function listen(target, type, callback) {
    if (!target && !type && !callback) {
        throw new Error('Missing required arguments');
    }

    if (!is.string(type)) {
        throw new TypeError('Second argument must be a String');
    }

    if (!is.fn(callback)) {
        throw new TypeError('Third argument must be a Function');
    }

    if (is.node(target)) {
        return listenNode(target, type, callback);
    }
    else if (is.nodeList(target)) {
        return listenNodeList(target, type, callback);
    }
    else if (is.string(target)) {
        return listenSelector(target, type, callback);
    }
    else {
        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');
    }
}

/**
 * Adds an event listener to a HTML element
 * and returns a remove listener function.
 *
 * @param {HTMLElement} node
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
 function listenNode(node, type, callback) {
    node.addEventListener(type, callback);

    return {
        destroy: function() {
            node.removeEventListener(type, callback);
        }
    }
}

/**
 * Add an event listener to a list of HTML elements
 * and returns a remove listener function.
 *
 * @param {NodeList|HTMLCollection} nodeList
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
 function listenNodeList(nodeList, type, callback) {
    Array.prototype.forEach.call(nodeList, function(node) {
        node.addEventListener(type, callback);
    });

    return {
        destroy: function() {
            Array.prototype.forEach.call(nodeList, function(node) {
                node.removeEventListener(type, callback);
            });
        }
    }
}

/**
 * Add an event listener to a selector
 * and returns a remove listener function.
 *
 * @param {String} selector
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
 function listenSelector(selector, type, callback) {
    return delegate(document.body, selector, type, callback);
}

module.exports = listen;

},{"./is":3,"delegate":2}],5:[function(require,module,exports){
    function select(element) {
        var selectedText;

        if (element.nodeName === 'SELECT') {
            element.focus();

            selectedText = element.value;
        }
        else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {
            var isReadOnly = element.hasAttribute('readonly');

            if (!isReadOnly) {
                element.setAttribute('readonly', '');
            }

            element.select();
            element.setSelectionRange(0, element.value.length);

            if (!isReadOnly) {
                element.removeAttribute('readonly');
            }

            selectedText = element.value;
        }
        else {
            if (element.hasAttribute('contenteditable')) {
                element.focus();
            }

            var selection = window.getSelection();
            var range = document.createRange();

            range.selectNodeContents(element);
            selection.removeAllRanges();
            selection.addRange(range);

            selectedText = selection.toString();
        }

        return selectedText;
    }

    module.exports = select;

},{}],6:[function(require,module,exports){
    function E () {
  // Keep this empty so it's easier to inherit from
  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)
}

E.prototype = {
  on: function (name, callback, ctx) {
    var e = this.e || (this.e = {});

    (e[name] || (e[name] = [])).push({
      fn: callback,
      ctx: ctx
  });

    return this;
},

once: function (name, callback, ctx) {
    var self = this;
    function listener () {
      self.off(name, listener);
      callback.apply(ctx, arguments);
  };

  listener._ = callback
  return this.on(name, listener, ctx);
},

emit: function (name) {
    var data = [].slice.call(arguments, 1);
    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();
    var i = 0;
    var len = evtArr.length;

    for (i; i < len; i++) {
      evtArr[i].fn.apply(evtArr[i].ctx, data);
  }

  return this;
},

off: function (name, callback) {
    var e = this.e || (this.e = {});
    var evts = e[name];
    var liveEvents = [];

    if (evts && callback) {
      for (var i = 0, len = evts.length; i < len; i++) {
        if (evts[i].fn !== callback && evts[i].fn._ !== callback)
          liveEvents.push(evts[i]);
  }
}

    // Remove event from queue to prevent memory leak
    // Suggested by https://github.com/lazd
    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910

    (liveEvents.length)
    ? e[name] = liveEvents
    : delete e[name];

    return this;
}
};

module.exports = E;

},{}],7:[function(require,module,exports){
    (function (global, factory) {
        if (typeof define === "function" && define.amd) {
            define(['module', 'select'], factory);
        } else if (typeof exports !== "undefined") {
            factory(module, require('select'));
        } else {
            var mod = {
                exports: {}
            };
            factory(mod, global.select);
            global.clipboardAction = mod.exports;
        }
    })(this, function (module, _select) {
        'use strict';

        var _select2 = _interopRequireDefault(_select);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }

            return function (Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();

        var ClipboardAction = function () {
        /**
         * @param {Object} options
         */
         function ClipboardAction(options) {
            _classCallCheck(this, ClipboardAction);

            this.resolveOptions(options);
            this.initSelection();
        }

        /**
         * Defines base properties passed from constructor.
         * @param {Object} options
         */


         _createClass(ClipboardAction, [{
            key: 'resolveOptions',
            value: function resolveOptions() {
                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                this.action = options.action;
                this.container = options.container;
                this.emitter = options.emitter;
                this.target = options.target;
                this.text = options.text;
                this.trigger = options.trigger;

                this.selectedText = '';
            }
        }, {
            key: 'initSelection',
            value: function initSelection() {
                if (this.text) {
                    this.selectFake();
                } else if (this.target) {
                    this.selectTarget();
                }
            }
        }, {
            key: 'selectFake',
            value: function selectFake() {
                var _this = this;

                var isRTL = document.documentElement.getAttribute('dir') == 'rtl';

                this.removeFake();

                this.fakeHandlerCallback = function () {
                    return _this.removeFake();
                };
                this.fakeHandler = this.container.addEventListener('click', this.fakeHandlerCallback) || true;

                this.fakeElem = document.createElement('textarea');
                // Prevent zooming on iOS
                this.fakeElem.style.fontSize = '12pt';
                // Reset box model
                this.fakeElem.style.border = '0';
                this.fakeElem.style.padding = '0';
                this.fakeElem.style.margin = '0';
                // Move element out of screen horizontally
                this.fakeElem.style.position = 'absolute';
                this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';
                // Move element to the same position vertically
                var yPosition = window.pageYOffset || document.documentElement.scrollTop;
                this.fakeElem.style.top = yPosition + 'px';

                this.fakeElem.setAttribute('readonly', '');
                this.fakeElem.value = this.text;

                this.container.appendChild(this.fakeElem);

                this.selectedText = (0, _select2.default)(this.fakeElem);
                this.copyText();
            }
        }, {
            key: 'removeFake',
            value: function removeFake() {
                if (this.fakeHandler) {
                    this.container.removeEventListener('click', this.fakeHandlerCallback);
                    this.fakeHandler = null;
                    this.fakeHandlerCallback = null;
                }

                if (this.fakeElem) {
                    this.container.removeChild(this.fakeElem);
                    this.fakeElem = null;
                }
            }
        }, {
            key: 'selectTarget',
            value: function selectTarget() {
                this.selectedText = (0, _select2.default)(this.target);
                this.copyText();
            }
        }, {
            key: 'copyText',
            value: function copyText() {
                var succeeded = void 0;

                try {
                    succeeded = document.execCommand(this.action);
                } catch (err) {
                    succeeded = false;
                }

                this.handleResult(succeeded);
            }
        }, {
            key: 'handleResult',
            value: function handleResult(succeeded) {
                this.emitter.emit(succeeded ? 'success' : 'error', {
                    action: this.action,
                    text: this.selectedText,
                    trigger: this.trigger,
                    clearSelection: this.clearSelection.bind(this)
                });
            }
        }, {
            key: 'clearSelection',
            value: function clearSelection() {
                if (this.trigger) {
                    this.trigger.focus();
                }

                window.getSelection().removeAllRanges();
            }
        }, {
            key: 'destroy',
            value: function destroy() {
                this.removeFake();
            }
        }, {
            key: 'action',
            set: function set() {
                var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'copy';

                this._action = action;

                if (this._action !== 'copy' && this._action !== 'cut') {
                    throw new Error('Invalid "action" value, use either "copy" or "cut"');
                }
            },
            get: function get() {
                return this._action;
            }
        }, {
            key: 'target',
            set: function set(target) {
                if (target !== undefined) {
                    if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && target.nodeType === 1) {
                        if (this.action === 'copy' && target.hasAttribute('disabled')) {
                            throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                        }

                        if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {
                            throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');
                        }

                        this._target = target;
                    } else {
                        throw new Error('Invalid "target" value, use a valid Element');
                    }
                }
            },
            get: function get() {
                return this._target;
            }
        }]);

return ClipboardAction;
}();

module.exports = ClipboardAction;
});

},{"select":5}],8:[function(require,module,exports){
    (function (global, factory) {
        if (typeof define === "function" && define.amd) {
            define(['module', './clipboard-action', 'tiny-emitter', 'good-listener'], factory);
        } else if (typeof exports !== "undefined") {
            factory(module, require('./clipboard-action'), require('tiny-emitter'), require('good-listener'));
        } else {
            var mod = {
                exports: {}
            };
            factory(mod, global.clipboardAction, global.tinyEmitter, global.goodListener);
            global.clipboard = mod.exports;
        }
    })(this, function (module, _clipboardAction, _tinyEmitter, _goodListener) {
        'use strict';

        var _clipboardAction2 = _interopRequireDefault(_clipboardAction);

        var _tinyEmitter2 = _interopRequireDefault(_tinyEmitter);

        var _goodListener2 = _interopRequireDefault(_goodListener);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }

        var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
            return typeof obj;
        } : function (obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }

            return function (Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();

        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
        }

        function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
                throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }

        var Clipboard = function (_Emitter) {
            _inherits(Clipboard, _Emitter);

        /**
         * @param {String|HTMLElement|HTMLCollection|NodeList} trigger
         * @param {Object} options
         */
         function Clipboard(trigger, options) {
            _classCallCheck(this, Clipboard);

            var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this));

            _this.resolveOptions(options);
            _this.listenClick(trigger);
            return _this;
        }

        /**
         * Defines if attributes would be resolved using internal setter functions
         * or custom functions that were passed in the constructor.
         * @param {Object} options
         */


         _createClass(Clipboard, [{
            key: 'resolveOptions',
            value: function resolveOptions() {
                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                this.action = typeof options.action === 'function' ? options.action : this.defaultAction;
                this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;
                this.text = typeof options.text === 'function' ? options.text : this.defaultText;
                this.container = _typeof(options.container) === 'object' ? options.container : document.body;
            }
        }, {
            key: 'listenClick',
            value: function listenClick(trigger) {
                var _this2 = this;

                this.listener = (0, _goodListener2.default)(trigger, 'click', function (e) {
                    return _this2.onClick(e);
                });
            }
        }, {
            key: 'onClick',
            value: function onClick(e) {
                var trigger = e.delegateTarget || e.currentTarget;

                if (this.clipboardAction) {
                    this.clipboardAction = null;
                }

                this.clipboardAction = new _clipboardAction2.default({
                    action: this.action(trigger),
                    target: this.target(trigger),
                    text: this.text(trigger),
                    container: this.container,
                    trigger: trigger,
                    emitter: this
                });
            }
        }, {
            key: 'defaultAction',
            value: function defaultAction(trigger) {
                return getAttributeValue('action', trigger);
            }
        }, {
            key: 'defaultTarget',
            value: function defaultTarget(trigger) {
                var selector = getAttributeValue('target', trigger);

                if (selector) {
                    return document.querySelector(selector);
                }
            }
        }, {
            key: 'defaultText',
            value: function defaultText(trigger) {
                return getAttributeValue('text', trigger);
            }
        }, {
            key: 'destroy',
            value: function destroy() {
                this.listener.destroy();

                if (this.clipboardAction) {
                    this.clipboardAction.destroy();
                    this.clipboardAction = null;
                }
            }
        }], [{
            key: 'isSupported',
            value: function isSupported() {
                var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];

                var actions = typeof action === 'string' ? [action] : action;
                var support = !!document.queryCommandSupported;

                actions.forEach(function (action) {
                    support = support && !!document.queryCommandSupported(action);
                });

                return support;
            }
        }]);

         return Clipboard;
     }(_tinyEmitter2.default);

    /**
     * Helper function to retrieve attribute value.
     * @param {String} suffix
     * @param {Element} element
     */
     function getAttributeValue(suffix, element) {
        var attribute = 'data-clipboard-' + suffix;

        if (!element.hasAttribute(attribute)) {
            return;
        }

        return element.getAttribute(attribute);
    }

    module.exports = Clipboard;
});

},{"./clipboard-action":7,"good-listener":4,"tiny-emitter":6}]},{},[8])(8)
});

function getAllUrlParams(url) {

    // get query string from url (optional) or window
    var queryString = url ? url.split('?')[1] : window.location.search.slice(1);

    // we'll store the parameters here
    var obj = {};

    // if query string exists
    if (queryString) {

        // stuff after # is not part of query string, so get rid of it
        queryString = queryString.split('#')[0];

        // split our query string into its component parts
        var arr = queryString.split('&');

        for (var i = 0; i < arr.length; i++) {
            // separate the keys and the values
            var a = arr[i].split('=');

            // in case params look like: list[]=thing1&list[]=thing2
            var paramNum = undefined;
            var paramName = a[0].replace(/\[\d*\]/, function(v) {
                paramNum = v.slice(1, -1);
                return '';
            });

            // set parameter value (use 'true' if empty)
            var paramValue = typeof(a[1]) === 'undefined' ? true : a[1];

            // (optional) keep case consistent
            paramName = paramName.toLowerCase();
            paramValue = paramValue.toLowerCase();

            // if parameter name already exists
            if (obj[paramName]) {
                // convert value to array (if still string)
                if (typeof obj[paramName] === 'string') {
                    obj[paramName] = [obj[paramName]];
                }
                // if no array index number specified...
                if (typeof paramNum === 'undefined') {
                    // put the value on the end of the array
                    obj[paramName].push(paramValue);
                }
                // if array index number specified...
                else {
                    // put the value at that index number
                    obj[paramName][paramNum] = paramValue;
                }
            }
            // if param name doesn't exist yet, set it
            else {
                obj[paramName] = paramValue;
            }
        }
    }

    return obj;
}


function sendEvent(ev) {
    if (typeof(ga) == 'function') {
        ga('send', 'event', ev);
    }
}

function launchAMI() {
    sendEvent('launchAMI');
}


jQuery(function($) {


  $('#zendesk_field_priority option[value="urgent"]').text('P1 – 2 hours response time');
  $('#zendesk_field_priority option[value="high"]').text('P2 – 4 hours response time');
  $('#zendesk_field_priority option[value="normal"]').text('P3 – 1 business day response time');
  $('#zendesk_field_priority option[value="low"]').text('P4 – 2 business day response time');




    // The function actually applying the offset
    function offsetAnchor() {
      if (location.hash.length !== 0) {
        window.scrollTo(window.scrollX, window.scrollY - 200);
    }
}

// Captures click events of all <a> elements with href starting with #
$(document).on('click', '.sfm-menu li', function(event) {
    if ($(window).width() >= 1200) {
        console.log('clicked on anchor');
  // Click events are captured before hashchanges. Timeout
  // causes offsetAnchor to be called after the page jump.
  window.setTimeout(function() {
    offsetAnchor();
}, 0);
}
if (!isIE9) e.preventDefault();
});

if ($(window).width() >= 1200) {
// Set the offset when entering page with hash present in the url
window.setTimeout(offsetAnchor, 0);
}

/*
    nameLabel = $('#zendesk_field_zen_name .zrf_field_title').text();
    $('input[name=zen_name').attr('placeholder',nameLabel);
    emailLabel = $('#zendesk_field_zen_email .zrf_field_title').text();
    $('input[name=zen_email').attr('placeholder',emailLabel);
    severityLabel = $('#zendesk_field_33804465 .zrf_field_title').text();
    $('select[name=33804465').attr('placeholder',severityLabel);
    subjectLabel = $('#zendesk_field_zen_subject .zrf_field_title').text();
    $('input[name=zen_subject').attr('placeholder',subjectLabel);
    descLabel = $('#zendesk_field_zen_desc .zrf_field_title').text();
    $('textarea[name=zen_desc').attr('placeholder',descLabel);
    */

    var clipboard = new Clipboard('.btn');
    clipboard.on('success', function(e) {
        console.log(e);
    });
    clipboard.on('error', function(e) {
        console.log(e);
    });


    $('.ami-link').click(function(){
        launchAMI();
    });

    if ( $( '.summit-header-main' ).length ) {
        var $window = $(window),
        $stickyEl = $('.summit-header-main'),
        elTop = $stickyEl.offset().top;

        $(window).on('scroll touchmove', function () {
            $('body').toggleClass('sticky', $window.scrollTop() > elTop);
        });
    }


    if ( $( '.header-main' ).length ) {
        var $window = $(window),
        $stickyEl = $('.header-main'),
        elTop = $stickyEl.offset().top;

        $(window).on('scroll touchmove', function () {
            $stickyEl.toggleClass('sticky', $window.scrollTop() > elTop);
        });
    }

    if ($('body').hasClass('show-banner')) {
        if ( $( '.header-main' ).length ) {
            var $window = $(window),
                $stickyEl = $('.header-main'),
                $stickyBanner = $('.download-page-banner-wrap'),
                elTopBannerHeight = $stickyBanner.outerHeight();

            $(window).on('scroll touchmove', function () {
                $stickyEl.toggleClass('sticky', $window.scrollTop() > elTopBannerHeight);
            });
        }
    }

    if ( $( '.download-page-banner-wrap' ).length ) {
        var $window = $(window),
        $stickyEl = $('.header-main'),
        $stickyBanner = $('.download-page-banner-wrap');

        $(window).on('scroll touchmove', function () {
            //Toggle 'sticky' class if scroll is greater than or less than 0
            $stickyBanner.toggleClass('sticky', $window.scrollTop() > 0);
            $stickyEl.toggleClass('sticky', $window.scrollTop() > 0);
            //Toggle CSS top and position if scroll is greater than or less than 0
            if( $window.scrollTop() > 0) {
                if ( $stickyBanner == null || !$stickyBanner.is( ':visible' ) ) {
                    elTopBannerHeight = 0;
                } else {
                    elTopBannerHeight = $stickyBanner.outerHeight();
                }

                $stickyEl.css({'top': elTopBannerHeight, 'position' : 'fixed'});
            } else {
                $stickyEl.css({'top': 'unset', 'position' : 'initial'});
            }

        });
    }

    // Summit Agenda
    if ( $('body').hasClass('page-agenda') ) {
        var tabs;
        var tabsContainer;
        var headerHeight;
        var tabsTop;
        function setVariables(){
            tabs = $('.sz-tabs');
            tabsContainer = $('.sz-tab-container');
            headerHeight = $('.elementor-location-header .elementor-top-section').outerHeight();
            tabsTop = tabs.offset().top;
        }
        // Check if Sessionize Tabs exist (aka Sessionize Agenda has loaded) and set variables
        var checkingInterval = setInterval(function(){
            if(document.querySelector(".sz-tabs")){
                clearInterval(checkingInterval);
                setVariables();
            }
        }, 500);

        $(window).on('scroll touchmove', function () {
            if ( tabs ) {
                var windowScroll = $(this).scrollTop();
                if ( tabsTop < windowScroll + headerHeight ){
                    tabs.addClass('sticky');
                    tabs.css('top', headerHeight - 1);
                    tabsContainer.addClass('sticky');
                } else {
                    tabs.removeClass('sticky');
                    tabs.css('top', 'unset');
                    tabsContainer.removeClass('sticky');
                }
            }
        }); // END $(document).scroll(function()
    } // END if ( $('body').hasClass('page-agenda') )

    // Add classes to customer blocks to allow clearing at different screen sizes

    $('.wrapping-section.two-up-on-tablet .elementor-column:even').addClass('clear-left');
    $('.wrapping-section.logos-with-text .elementor-column:even').addClass('clear-left');
    $('.wrapping-section.logos-only .elementor-column:even').addClass('clear-left');
    $('.wrapping-section.platform-blocks .elementor-column:even').addClass('clear-left');
    $('.wrapping-section.four-up-on-tablet').each(function(){
        $(this).find('.elementor-column .elementor-column').filter(function(index) {
            return (index + 4) % 4 == 0;
        }).addClass('clear-left');
    })

    $('.benchmark-link-1').addClass('current');

    $('.benchmark-link').click(function(){
        whichImage = $(this).attr('class').match(/\bbenchmark-link-(\d+)\b/)[1];
        $('.benchmark-image').hide();
        $('.benchmark-image-' + whichImage).fadeIn();
        $('.benchmark-link').removeClass('current');
        $(this).addClass('current');
    });
    $('.home-benefits .elementor-widget-inline-svg').matchHeight();
    $('.logo-blocks .elementor-widget-image').matchHeight();
    $('.resource-center-blocks .elementor-widget-text-editor .elementor-widget-container').matchHeight({byRow: false});
    //$('.logo-blocks').not('.logo-only').find('.elementor-column').matchHeight();

    $('.logo-blocks .elementor-column').has('.elementor-widget-button').addClass('has-link');
    $('.platform-blocks .elementor-column').matchHeight();
    $('.icon-blocks .elementor-widget-inline-svg').matchHeight();
    $('.under-hood .under-hood-header').matchHeight();
    $('.feature-blocks .elementor-column').matchHeight({
        byRow: false
    });



    widthToCalculate = $(window).width();

    arrangeCompanyProfiles(widthToCalculate);

    $( window ).resize(function() {
        widthToCalculate = $(window).width();
        arrangeCompanyProfiles(widthToCalculate);
    });


    function arrangeCompanyProfiles(widthToCalculate) {

        $('.wrapping-section.company-profiles .elementor-column').removeClass('clear-left');
        //console.log($(window).width());
        if (widthToCalculate >= 480 && widthToCalculate < 600) {

         $('.wrapping-section.company-profiles.team .elementor-column:even').addClass('clear-left');
         //console.log('480-600');
     }
     else if (widthToCalculate >= 600 && widthToCalculate < 768){

         $('.wrapping-section.company-profiles.team').each(function(){
            $(this).find('.elementor-column').filter(function(index) {
                return (index + 3) % 3 == 0;
            }).addClass('clear-left');
            //console.log('600-768');
        });
     }
     else if (widthToCalculate >= 768 && widthToCalculate < 960){

         $('.wrapping-section.company-profiles.team').find('.elementor-column').filter(function(index) {
            return (index + 4) % 4 == 0;
        }).addClass('clear-left');
         //console.log('768-960');

     }
     else if (widthToCalculate >= 960 && widthToCalculate < 1024){

        $('.wrapping-section.company-profiles.team').find('.elementor-column').filter(function(index) {
            return (index + 6) % 6 == 0;
        }).addClass('clear-left');
        //console.log('960-1024');
    }

    if (widthToCalculate >= 480 && widthToCalculate < 600) {

     $('.wrapping-section.company-profiles.board .elementor-column:even').addClass('clear-left');
 }
 else if (widthToCalculate >= 600 && widthToCalculate < 768){

     $('.wrapping-section.company-profiles.board').each(function(){
        $(this).find('.elementor-column').filter(function(index) {
            return (index + 3) % 3 == 0;
        }).addClass('clear-left');
    });
 }
 else if (widthToCalculate >= 768 && widthToCalculate < 960){

     $('.wrapping-section.company-profiles.board').find('.elementor-column').filter(function(index) {
        return (index + 4) % 4 == 0;
    }).addClass('clear-left');

 }
 else if (widthToCalculate >= 960 && widthToCalculate < 1024){

     $('.wrapping-section.company-profiles.board').find('.elementor-column').filter(function(index) {
        return (index + 6) % 6 == 0;
    }).addClass('clear-left');

 }
}

function viewport() {
    var e = window, a = 'inner';
    if (!('innerWidth' in window )) {
        a = 'client';
        e = document.documentElement || document.body;
    }
    return { width : e[ a+'Width' ] , height : e[ a+'Height' ] };
}

setupRollovers();

function setupRollovers() {
        // do not believe "touch" test on Google Chrome
        $(".company-profiles .elementor-column").not('.elementor-editor-active .elementor-column').not('.scylla-summit .elementor-column').each(function(){
            $(this).hover(function(){
                $(this).css('height',$(this).height());
                var tW = $(this).width();
                $(this).addClass("show-bio");
                $(this).find('.elementor-column-wrap').width(tW + 90);
            }, function() {
                $(this).removeClass("show-bio");
                $(this).find('.elementor-column-wrap').css('width', 'auto');
                $(this).css('height','auto');
            })
        });

/*
                $(".scylla-summit .elementor-column").not('.elementor-editor-active .elementor-column').each(function(){
            $(this).hover(function(){
                $(this).css('height',$(this).height());
                var tW = $(this).width();
                $(this).addClass("show-bio");
                $(this).find('.elementor-column-wrap').width(tW + 190);
                 console.log('hover3');
            }, function() {
                $(this).removeClass("show-bio");
                $(this).find('.elementor-column-wrap').css('width', 'auto');
                $(this).css('height','auto');
                 console.log('hover4');
            })
        });
        */
    }



        //**********************************************************
    // If there are less than 10 news items on the news page then
    // hide the "load more" button.
    //**********************************************************


    if ($(".news-item-entry").length <= 10) {
        $('.news-item-load-more').remove();
    }

    if ($(".blog-post-entry").length <= 10) {
        $('.blog-post-load-more').remove();
    }

  if ($(".press-release-entry").length <= 10) {
    $('.press-release-load-more').remove();
  }

    //**********************************************************
    // Show news items in groups of 10 until there are no more
    // to show.
    //**********************************************************

  $('.news-item-entry').hide();
  news_size_entries = $('.news-item-entry').size();
  news_x = 10;
  $('.news-item-entry:lt(' + news_x + ')').show();
  $('.news-item-load-more').click(function (e) {
    e.preventDefault();
    news_x = (news_x + 10 <= news_size_entries) ? news_x + 10 : news_size_entries;
    $('.news-item-entry:lt(' + news_x + ')').delay(1000).show(0, function () {
      $('.news-item-load-more').removeClass('active');
      if ($('.news-item-entry:visible').length == $('.news-item-entry').length) {
        $('.news-item-load-more').parent().remove();
      }
    });
    $(this).addClass('active');
  });

  $('.blog-post-entry').hide();
  blog_size_entries = $('.blog-post-entry').size();
  blog_x = 10;
  $('.blog-post-entry:lt(' + blog_x + ')').show();
  $('.blog-post-load-more').click(function (e) {
    e.preventDefault();
    blog_x = (blog_x + 10 <= blog_size_entries) ? blog_x + 10 : blog_size_entries;
    $('.blog-post-entry:lt(' + blog_x + ')').delay(1000).show(0, function () {
      $('.blog-post-load-more').removeClass('active');
      if ($('.blog-post-entry:visible').length == $('.blog-post-entry').length) {
        $('.blog-post-load-more').parent().remove();
      }
    });
    $(this).addClass('active');
  });

  $('.press-release-entry').hide();
  press_size_entries = $('.press-release-entry').size();
  press_x = 10;
  $('.press-release-entry:lt(' + press_x + ')').show();
  $('.press-release-load-more').click(function (e) {
    e.preventDefault();
    press_x = (press_x + 10 <= press_size_entries) ? press_x + 10 : press_size_entries;
    $('.press-release-entry:lt(' + press_x + ')').delay(1000).show(0, function () {
      $('.press-release-load-more').removeClass('active');
      if ($('.press-release-entry:visible').length == $('.press-release-entry').length) {
        $('.press-release-load-more').parent().remove();
      }
    });
    $(this).addClass('active');
  });

});

function sendEvent(ev) {
    if (typeof(ga) == 'function') {
        ga('send', 'event', ev);
    }
}

function setCookie(name, value, days) {
    var date = new Date();
    date.setTime(date.getTime()+(days*24*60*60*1000));
    var expires = "; expires="+date.toGMTString();
    document.cookie = name+"="+value+expires+";domain=.scylladb.com; path=/";
    return value;
}

var isMobile = false;
// device detection
if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)
  || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0,4))) {
  isMobile = true;
}

jQuery(document).ready(function($) {
    // clear search field after hide
    $('.search-holder').on('blur', '.er_search_input_dummy', function() {
        this.value = '';
    });
    // clear search result after click on result item
    $('.search-holder').on('click', '.er-search-result-box', function() {
            setTimeout(function(){
                $('.search-holder').find('.er-suggestions').html('')
            }, 100);
        });

    if (!$('body').find('.release-notes-boxes').length) {
        // add Elementor tab name to url
        var tabs = $(".elementor-tab-title"),
            // mobileTabs = document.querySelectorAll('.elementor-tab-mobile-title')
            tabsContent = $(".elementor-tab-content");

        tabsContent.each(function (i, el) {
            var dataTab = $(tabs[i]).text().replace(/\s+/g, '').toLowerCase();
            el.setAttribute("data-tab", dataTab);
            tabs[i].setAttribute("data-tab", dataTab);
            // mobileTabs[i].setAttribute("data-tab", dataTab);
     });
    //Elementor Accordion Open Close Customization
    var $dsTabTitle = $('.datastax-accordions .elementor-tab-title');
    var $dsTabContent = $('.datastax-accordions .elementor-tab-content');
    setTimeout(function () {
        if ($('.datastax-accordions .elementor-tab-title.elementor-active')) {
            $dsTabTitle.removeClass('elementor-active');
            $dsTabContent.removeClass('elementor-active').hide();
        }
    }, 1000);
    if (!$('body').find('.release-notes-boxes').length) {
        //Elementor Accordion Open Close Customization for multiple accordions on one page
        var $tabTitle = $('.elementor-tab-title');
        var $tabContent = $('.elementor-tab-content');
        $tabContent.removeClass('elementor-active');
        $tabTitle.removeClass('elementor-active');
        $('.elementor-tab-title, .elementor-tab-title a, .elementor-tab-title span').click(function () {
            $tabContent.removeClass('elementor-active');
            $tabTitle.removeClass('elementor-active');
        });

        setTimeout(function () {
            var current = window.location.href;
            var current = current.split('#');
            if (current.length > 1) {
                jQuery('.elementor-tab-title').removeClass('elementor-active');
                jQuery('.elementor-tab-title[data-tab="' + current[1] + '"]').addClass('elementor-active');
                jQuery('.elementor-tab-content').hide();
                jQuery('.elementor-tab-content[data-tab="' + current[1] + '"]').show();
            } else {
                var dataTab = $(tabs[0]).text().replace(/\s+/g, '').toLowerCase();
                jQuery('.elementor-tab-title[data-tab="' + dataTab + '"]').addClass('elementor-active');
                jQuery('.elementor-tab-content[data-tab="' + dataTab + '"]').show();
            }

            jQuery('.mobile-accordion .elementor-tab-title').removeClass('elementor-active');
            jQuery('.mobile-accordion .elementor-tab-content').css('display', 'none');
        }, 1);
    }

  if (isMobile) {
    jQuery('.elementor-tab-title').click(function () {
      setTimeout(function () {
        $('html, body').animate({
          scrollTop: $('.elementor-accordion').offset().top
        }, 1000);
        //$(".elementor-accordion").get(0).scrollIntoView();
      }, 1);
    });
  }

  if (!$('body').find('.release-notes-boxes, .info-accordion').length) {
      jQuery('.elementor-tab-title[data-tab]').click(function () {
          var current_location = window.location.href;
          current_location = current_location.split('#');
          window.location = current_location[0] + '#' + jQuery(this).attr('data-tab');
          jQuery('.elementor-tab-content').hide();
          jQuery('.elementor-tab-content[data-tab="' + jQuery(this).attr('data-tab') + '"]').show();
      });
  }

  if ($('body').find('.release-notes-boxes').length) {
      $(document).click(function(e) {
          var $tabTitles = $(".release-notes-boxes .elementor-tab-title");

          // handle click Outside toggle block
          if (!$tabTitles.is(e.target) && $tabTitles.has(e.target).length === 0) {
              $tabTitles.each(function(index, element) {
                  $(element).removeClass('elementor-active');
                  $(element).next().slideUp();
              })
          }

          // handle click Inside toggle blockА
          $tabTitles.click(function(e) {
              var $currentTabTitle = $(this);

              $tabTitles.each(function(index, element) {
                  $(element).not($currentTabTitle).removeClass('elementor-active');
                  $(element).not($currentTabTitle).next().slideUp();
              })

              e.stopPropagation();
          });
      });
  }

    jQuery('.custom-tab-opener a').click(function(e){
      var dataTab = jQuery(this).attr('href').split('#')[1];
      jQuery('.elementor-tab-content').hide();
      jQuery('.elementor-tab-title').removeClass('elementor-active');
      jQuery('.elementor-tab-title[data-tab="'+dataTab+'"]').addClass('elementor-active');
      jQuery('.elementor-tab-content[data-tab="'+dataTab+'"]').show();
    });

    jQuery( ".getting-started-step pre code" ).before( "<div class='copy-clipboard'><div class='copy-clipboard__text' data-eventcategory='mac-homebrew-button'>copy</div><svg data-eventcategory='mac-homebrew-button' id='copy-icon' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12'><title>icon/buttons/copy</title><g id='Mask'><path id='path-1_1_' class='st0' d='M4.9 4.9v6h6v-6h-6zM3.8 3.8H12V12H3.8V3.8zM2.7 7.1v1.1H.1S0 5.5 0 0h8.2v2.7H7.1V1.1h-6v6h1.6z' /></g></svg><svg id='copy-check' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 10'><style>.st1{fill:#54B30E;}</style><path id='path-1_2_' class='st1' d='M3.8 9.1c-.3 0-.5-.1-.6-.2L.3 6C0 5.7-.1 5.2.2 4.8c.3-.4.9-.4 1.3-.1L3.8 7 10.6.2c.3-.3.9-.4 1.2 0 .3.3.3.9 0 1.2L4.4 8.9c-.2.1-.4.2-.6.2z' /></svg></div>" );

    getStartSection = $(".elementor-section.getting-started-step");

    getStartSection.each(function (i, el) {
        var idName = $(el).attr('id');
        var copyBtn = $(el).find(".copy-clipboard__text");
        if(idName != undefined){
            $(copyBtn).attr("id", "btn-"+ idName);
        }
    });
    function createCookie(name,value,days) {
        if (days) {
            var date = new Date();
            date.setTime(date.getTime()+(days*24*60*60*1000));
            var expires = "; expires="+date.toGMTString();
        }
        else var expires = "";
        document.cookie = name+"="+value+expires+"; path=/";
    }

    function readCookie(name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');
        for(var i=0;i < ca.length;i++) {
            var c = ca[i];
            while (c.charAt(0)==' ') c = c.substring(1,c.length);
            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
        }
        return null;
    }
    $('#sign-up form').submit(function(){
        var subscribed = readCookie('mc_subscribed');
        if(!subscribed){
            createCookie('mc_subscribed','1',7);
        }
    });
    $('#mc_embed_signup form').submit(function(){
        var subscribed = readCookie('mc_subscribed');
        if(!subscribed){
            createCookie('mc_subscribed','1',7);
        }
    });

    $('.er_search_input_dummy').on('click focusin', function() {
        console.log('msg');
        this.value = '';
    });

    // copy to clipboard

    // Instructions
      var clipboard = new Clipboard('.dc__instructions .copy-clipboard', {
        target: function(trigger) {
          // revert any previously copied snippets
          jQuery('.copy-clipboard--copied').removeClass('copy-clipboard--copied')
            .find('.dc__instructions .copy-clipboard__text').text('copy');
          return jQuery(trigger).next('code')[0];
        },
        text: function(trigger) {
          var text = jQuery(trigger).next('code').text();
          text = text.replace(/\\\n(?=.)|(^[\r\n]+|[\r\n]+$)/g, '');
          text = text.split(' ');
          if(text[0] === '$') {
            text.splice(0, 1);
          }
          if($(text).parent(".onboard-tab-content")) {
            if(text[0] === '1') {
                text.splice(0, 1);
              }
          }
            text = text.join(' ');
          return text;
        }
      });

      clipboard.on('success', function(e) {
        jQuery(e.trigger).addClass('copy-clipboard--copied');
        jQuery(e.trigger).find('.copy-clipboard__text').text('copied');
      });

    // Download Item Link
    var clipboard_dwnld_item = new Clipboard('.dc__item-download-link.copy-clipboard', {
        target: function(trigger) {
            // revert any previously copied snippets
            jQuery('.copy-clipboard--copied').removeClass('copy-clipboard--copied');
        },
        text: function(trigger) {
            var text = jQuery(trigger).data('url');
            text = text.replace(/\\\n(?=.)|(^[\r\n]+|[\r\n]+$)/g, '');
            return text;
        }
    });

    clipboard_dwnld_item.on('success', function(e) {
        jQuery(e.trigger).addClass('copy-clipboard--copied');
        jQuery(e.trigger).find('.fa-copy').removeClass( 'fa-copy' ).addClass( 'fa-check' );

        setTimeout(function(){
            jQuery(e.trigger).removeClass('copy-clipboard--copied');
            jQuery(e.trigger).find('.fa-check').removeClass( 'fa-check' ).addClass( 'fa-copy' );
        }, 1500);
    });

    var skipped = readCookie('mc_skipped');
    if (!skipped) {
        $('.sign-up-modal').delay(3000).show(0).animate({right: "60px"}, 500);
    }

    $(".sign-up-modal .close").click(function () {
        $(this).parents(".sign-up-modal").hide();
        var skipped = readCookie('mc_skipped');
        if (!skipped) {
            createCookie('mc_skipped', '1', 1);
        }
    });

    ajaxMailChimpForm($("#mc-ajax-subscribe"), $("#mc-ajax-result"));
    ajaxMailChimpForm($("#mc-embedded-subscribe-form"), $("#mc-ajax-result"));
    
    // $(document).on('submit', '#mc-ajax-subscribe', function(e) {
    //     console.log('submitting mc-ajax-subscribe');
    //     e.preventDefault(); // Prevent the default form submission
    //     var $form = $(this);
    //     var $resultElement = $("#mc-ajax-result"); // Assuming this is a static element that exists on page load
    //     ajaxMailChimpForm($form, $resultElement);
    // });
    // $(document).on('submit', '#mc-embedded-subscribe-form', function(e) {
    //     console.log('submitting new function');
    //     e.preventDefault(); // Prevent the default form submission
    //     var $form = $(this);
    //     var $resultElement = $("#mc-ajax-result"); // Assuming this is a static element that exists on page load
    //     ajaxMailChimpForm($form, $resultElement);
    // });

    $(window).on('elementor/frontend/init', function() {
        // General form submission handling
        // $( document ).on( 'elementor/popup/show', () => {
        //     console.log('elementor/popup/show');
        // });
        $(document).on('submit', '#mc-ajax-subscribe, #mc-embedded-subscribe-form', function(e) {
            console.log('submitting new function');
            e.preventDefault(); // Prevent the default form submission

            var $form = $(this);
            // Check if the form is within an Elementor popup
            var isWithinPopup = $form.closest('.elementor-popup-modal').length > 0;
            var $resultElement;

            if (isWithinPopup) {
                // If within a popup, find the result element within the same popup
                $resultElement = $form.closest('.elementor-popup-modal').find("#mc-ajax-result");
            } else {
                // If not within a popup, use the default result element
                $resultElement = $("#mc-ajax-result");
            }

            ajaxMailChimpForm($form, $resultElement);
        });
    });
    
    // Turn the given MailChimp form into an ajax version of it.
    // If resultElement is given, the subscribe result is set as html to
    // that element.
    function ajaxMailChimpForm($form, $resultElement){
        // Ensure we're not binding multiple times
        console.log("ajaxMailChimpForm called with result element:", $resultElement.length > 0 ? "Found" : "Not Found");
        console.log("Form selected:", $resultElement.length);
        $form.off('submit').on('submit', function(e) {
            console.log('submit function called');
            e.preventDefault();
            if (!isValidEmail($form)) {
                console.log('if');
                var error =  "A valid email address must be provided.";
                $resultElement.html(error).fadeIn();
                $resultElement.css("color", "red");
            } else {
                console.log('else');
                $resultElement.css("color", "black");
                $resultElement.html("Subscribing...");
                submitSubscribeForm($form, $resultElement);
            }
        });
    }
    // Validate the email address in the form
    function isValidEmail($form) {
        console.log('isValidEmail');
        var email = $form.find("input[type='email']").val();
        return (/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(email));
    }
    // Submit the form with an ajax/jsonp request.
    function submitSubscribeForm($form, $resultElement) {
        console.log('submitting');
        $.ajax({
            type: "GET",
            url: $form.attr("action"),
            data: $form.serialize(),
            cache: false,
            dataType: "jsonp",
            jsonp: "c", // trigger MailChimp to return a JSONP response
            contentType: "application/json; charset=utf-8",
            error: function(error){
                // According to jquery docs, this is never called for cross-domain JSONP requests
            },
            success: function(data){
                var subscribed = readCookie('mc_subscribed');
                if (data.result != "success") {
                    $form.hide();
                    $('.hide-on-subscribe').hide();
                   var message = data.msg || "Sorry. Unable to subscribe. Please try again later.";
                    $resultElement.css("color", "red");
                    if (data.msg && data.msg.indexOf("already subscribed") >= 0) {
                        message = "You're already subscribed. Thank you.";
                        $resultElement.css("color", "green");
                        if(!subscribed){
                            createCookie('mc_subscribed','1',7);
                        }
                    }
                    $resultElement.html(message).fadeIn();
                    $(".sign-up-modal").delay(3000).fadeOut();
                } else {
                    $form.hide();
                    $('.hide-on-subscribe').hide();
                    $resultElement.css("color", "green");
                    $resultElement.html("Thank you!").fadeIn();
                    if(!subscribed){
                        createCookie('mc_subscribed','1',7);
                    }
                    $(".sign-up-modal").delay(3000).fadeOut();
                }
            }
        });
    }
    var subscribed = readCookie('mc_subscribed');
    if(subscribed){
        $('.sign-up-modal').remove();
    }

    $('.notice-download .close').click(function () {
       $('.notice-download').remove();
    });

    $('.header-summit .dropbtn-menu').on('click', function (e) {
      $('body').toggleClass('menu-opened');
    });
    $('.header-summit .main-links a').on('click', function (e) {
      $('body').removeClass('menu-opened');
    });

    if($('.post-content').length){
        var postBottomPosition = $('.post-content').offset().top + $('.post-content').outerHeight(true);
        var windowHeight = $(window).height();
        $(window).scroll(function () {
            if (jQuery(window).scrollTop() >= postBottomPosition - windowHeight/2 - 100) {
                jQuery('.post-share-inline .elementor-grid, .post-share-inline .heateor_sss_sharing_container').css("opacity", '0');
            } else {
                jQuery('.post-share-inline .elementor-grid, .post-share-inline .heateor_sss_sharing_container').css("opacity", '1');
            }
        });
    }

    if($('.tooltip-icon').length){
        $('.tooltip-icon').parent().css("width", 'auto');
        $('.tooltip-icon').parent().parent().css("justify-content", 'center');
    }

    if($('.header-promo-banner').length){
        setTimeout(function () {
          $('.header-promo-banner').addClass('show');
        }, 1500);

        $('.header-promo-banner-close').on('click', function(){
            $('.header-promo-banner').remove();
        });
    }


    //add custom select
    if ( $('.dc__form-select').length ) {
        $('.dc__form-select').select2({
            minimumResultsForSearch: -1
        }).on('select2:open',function(){
            $('.select2-dropdown--above').attr('id','fix');
            $('#fix').removeClass('select2-dropdown--above');
            $('#fix').addClass('select2-dropdown--below');
        });
    }

    function galleryInfoBlockHolder() {
        img_url = $('.elementor-lightbox-item.swiper-slide-active').find('img').attr('src');
        var $el = $('.elementor-slideshow__description');
        $('.elementor-slideshow__title').hide();

        if(!$('body').find('.roadmap-tabs-container').length) {
            ajaxGetGalleryInfo(img_url, $el);
        }
    }

    function ajaxGetGalleryInfo($url , $el) {
        jQuery.post( ajaxurl, {
            action: 'get_gallery_info',
            img_url: $url
        }, function(response) {
            if(response.length) {
                var data = JSON.parse(response);
                var html = " " +
                    "<div class=\"about-speaker\">\n" +
                    "            <div class=\"about-speaker-title\">\n" +
                    "                <strong class=\"name\">"+data.name+"</strong>\n" +
                    "                <strong class=\"company-name\">"+data.company+"</strong>\n" +
                    "                <span class=\"position\">"+data.position+"</span>\n" +
                    "            </div>\n" +
                    "            <div class=\"about-speaker-content\">\n" +
                    "<p>"+data.info+"</p>"+
                    "                <div class=\"agenda-info\">\n" +
                    "                    <strong class=\"agenda-info-title\">"+data.title+"</strong>\n" +
                    "                    <span class=\"agenda-info-topic\">"+data.topic+"</span>\n" +
                    "                    <span class=\"agenda-info-date\">"+data.date+"</span>\n";

                if( data.url ) {
                    html +=  "<a href=\""+data.url+"\" class=\"agenda-info-button\">View full agenda</a>\n";
                }

                html +=
                    "                </div>\n" +
                    "            </div>\n" +
                    "        </div>";

                $el[0].innerHTML = html;
            }
        });
    }

    if($(this).find('.section-speakers-gallery').length) {
        var swiperSlide = $(this);
        swiperSlide.on('touchmove');
        swiperSlide.on('touchend', function(){
            console.log( 'swiperSlide on touchend' );
            galleryInfoBlockHolder();
            swiperSlide.off('touchmove')
        })

        swiperSlide.on('mouseup' , function(){
            console.log( 'swiperSlide on mouseup' );
            setTimeout(function(){
                galleryInfoBlockHolder();
            },1000);
        })
    }

    // add controls to slide videos
  $('.swiper-slide').on('click', function(){
      slidesLink = $('.elementor-lightbox iframe');
      if($('.elementor-lightbox iframe').length) {
          slidesLink[0].src = slidesLink[0].src.replace('&controls=0', '&controls=1');
      }
  });

  $('.elementor-lightbox .elementor-swiper-button').on('click', function () {
      galleryInfoBlockHolder();

   // wait for iframe loading
    setTimeout(function () {
      slidesLink = $('.swiper-slide-active iframe');
      slidesLink[0].src = slidesLink[0].src.replace('&controls=0', '&controls=1');
    }, 1000);
  });

  setTimeout(function () {
      $('.promo-sticker').css('background', 'url(/wp-content/themes/scylladb/img/get-stickers.png) right 50px top 10px no-repeat');
    }, 1900);


    }});

$(document).ready(function(){
    if(location.href.includes('?') && $('.page-id-22779')){
        setTimeout(function() {
            if($('.select2-selection--single .select2-selection__rendered').attr('title') == 'AWS'){
                //console.log('test');
                //$('#dc__open-source-form .dc__form-field:nth-child(3) .select2').css({'display': 'none'});
            }
        }, 3000);
    }
    if($("#partner-stories").length){
        if(location.href.includes('?')){
            if($('#partner-stories article').length) {

            } else {
                $('#partner-stories').append( '<div class="cpt-ajax-no-result">No result found, please reduce filters.</div>' );
            }
            setTimeout(function() {
                if ($(window).width() >= 1025) {
                    $('html,body').animate({scrollTop: $("#partner-stories").offset().top - 350}, 2000);
                }else{
                    $('html,body').animate({scrollTop: $("#partner-stories").offset().top - 500}, 2000);
                }

            }, 500);
        }
    }

});
$(document).ready(function () {
    if(window.location.hash === '#server'){
        window.location.hash = '#core';
    }
    if(window.location.hash === '#drivers'){
        window.location.hash = '#developers';
    }

    const current_url = window.location.href;
    if(current_url.includes('/co/')){
        window.location.hash = "#open-position";
    }
});

/*
// Faux Terminal
function fauxTerm(config) {
    var term = config.el || document.getElementById('terminal_body');

    var termBuffer = config.initialMessage || '';
    var lineBuffer = config.initialLine || '';
    var cwd = config.cwd || "~/";
    var tags = config.tags || ['red', 'blue', 'white', 'bold'];
    var processCommand = config.cmd || false;
    var maxBufferLength = config.maxBufferLength || 8192;
    var commandHistory = [];
    var currentCommandIndex = -1;
    var maxCommandHistory = config.maxCommandHistory || 100;
    var autoFocus = config.autoFocus || false;
    var coreCmds = {
        "clear": clear,
        "grow-biz-data": growBizData,
    };


      var fauxInput = document.createElement('textarea');
      fauxInput.className = "faux-input";
      document.body.appendChild(fauxInput);


      function getLeader() {
        return cwd + "$ ";
      }


      function renderTerm() {
        var bell = '<span class="bell"></span>';
        var ob = termBuffer + getLeader() + lineBuffer;
        if ( term ) {
            term.innerHTML = ob;
            term.innerHTML += bell;
            term.scrollTop = term.scrollHeight;
        }
      }

      function writeToBuffer(str) {
        termBuffer += str;

        //Stop the buffer getting massive.
        if ( termBuffer.length > maxBufferLength ) {
          var diff = termBuffer.length - maxBufferLength;
          termBuffer = termBuffer.substr(diff);
        }

      }

      function renderStdOut(str) {
        var i = 0, max = tags.length;
        for ( i; i<max; i++ ) {
          var start = new RegExp('{' + tags[i] + '}', 'g');
          var end = new RegExp('{/' + tags[i] + '}', 'g');
          str = str.replace(start, '<span class="' + tags[i] + '">');
          str = str.replace(end, '</span>');
        }
        return str;
      }

      function clear(argv, argc) {
        termBuffer = "";
        return "";
      }

      function growBizData(argv, argc){
        var argument = argv[ argc - 1 ];

        const asciiArt = {
            throughput: `<pre>
            ^7YPB#&@@@@&#BPJ!:
        .!YB&@@@@@@@@@@@@@@@@&BY~
      :J#@@@@@@@@@@G7?G@@@@@@@@@@#J.
    .J&@@@@@@@@@@@@^  ^@@@@@@@@@@@@&?
   ^B@@@@@J~^!B@@@@^  ^@@@@B!^~Y@@@@@G:
  ^&@@@@@B    7@@@@^  ^@@@@7    B@@@@@#^
 :#@@@@@@@BJJ5&@@@@^  ^@@@@&5JJB@@@@@@@B.
 5@@@@@@@@@@@@@@@@@^  ^@@@@@@@@@@B5?~^::
 &@@@@G?!?B@@@@@@@@^  ^@@@@@@@B?: .~?Y5PP5J7^.
 @@@@@:   :@@@@@@@@^  ^@@@@@B!  ?G&@@@@@@@@@@#5~
 &@@@@G?!?G@@@@@@@&:  :&@@@P. 7#@@@@@@@@@#YP@@@@P:
 5@@@@@@@@@@@@@@#7.    :?&G  J@@@@@@@@&5!  5@@@@@#:
 :#@@@@@@@@@@@@@~        ~~ ~@@@@@@&P!.  :G@@@@@@@G
  ~&@@@@@@@@@@@@:        .. J@@@@@P:     :~^7@@@@@@
   ^B@@@@@@@@@@@B~      ~B^ 7@@@@@&##?    ^JB@@@@@#
    .J&@@@@@@@@@@@BPYYPB@@Y  G@@@@@@J  ^JB@@@@@@@@!
      :J#@@@@@@@@@@@@@@@@@@7 .P@@@@B~?G@@@@@@@@@&!
        .!YB&@@@@@@@@@@@@@@@Y. !G&@@@@@@@@@@@@#J:
            ^7YPB#&@@@@&#BPJ7.   ^?PB&@@@&#GY!.

</pre><pre class="ascii-comment">
*** 10x-Higher-Throughput ***
>>> Takes advantage of low-level Linux/C++ and modern async I/O methods to maximize IOPS.
</pre>`,
            highlyscalable: `<pre>
  ~YB&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&BY^
.5@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@5.
G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@G
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@B7^^^^^^^^^^^^^!P@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@B                 Y@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@#^               .P@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@&5J????????????5#@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@#J!!!!!!!!!!!!!!!!!!!!!!!!Y#@@@@@@@@@@@
@@@@@@@@@@#.                          .#@@@@@@@@@@
@@@@@@@@@@B.                          .#@@@@@@@@@@
@@@@@@@@@@@#J!!!!!!!!!!!!!!!!!!!!!!!!J#@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@&PJ?????5&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@#^        :B@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@B          P@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@G7^^^^^^7P@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@G
.P@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@5.
  ~YB&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&BY~

</pre><pre class="ascii-comment">
*** Highly Scalable ***
>>> Automatically shards per core across multiple nodes and datacenters, ensuring linear scalability.
</pre>`,
            consistency:
              `<pre>
              .J#@@@@@@@@@#Y.
              J@@@@@@@@@@@@@5
              Y@@@@@@@@@@@@@G
              Y@@@@@@@@@@@@@P
              Y@@@@@@@@@@@@@G
              ?@@@@@@@@@@@@@Y
               7PBBBBBBBBBP?

           :7JY7:
      .~YB&@@@@@?         ~7????????!:
      7P&@@@@@@@@@@5      :B@@@@@@@@@@@&7
     ?@@@@@@@@@@@@@@G.    ?@@@@@@@@@@@@@B
     7@@@@@@@@@@@@@@@B:   ?@@@@@@@@@@@@@B
     !&@@@@@@@@@@@@@@^   ?@@@@@@@@@@@@@B
       ^#@@@@@@@@@@#5~    ?@@@@@@@@@@@@@B
        :G@@@@@&P?^       :B@@@@@@@@@@@&?
         !JYJ~.            ~7????????!:

:JGBBBBBBBBB5^    ^YGBBBBBBBBGY:    ^5BBBBBBBBBGJ:
#@@@@@@@@@@@@@^  :#@@@@@@@@@@@@#.  ^@@@@@@@@@@@@@#
@@@@@@@@@@@@@@!  ^@@@@@@@@@@@@@@^  !@@@@@@@@@@@@@@
@@@@@@@@@@@@@@!  ^@@@@@@@@@@@@@@^  !@@@@@@@@@@@@@@
@@@@@@@@@@@@@@!  ^@@@@@@@@@@@@@@^  !@@@@@@@@@@@@@@
&@@@@@@@@@@@@@~  :&@@@@@@@@@@@@&:  ~@@@@@@@@@@@@@&
~G&@@@@@@@@@B7    !B&@@@@@@@@&G!    7B@@@@@@@@@&P~

</pre><pre class="ascii-comment">
*** Low and Consistent Latency ***
>>> Provides near-millisecond average latency and predictably low-single-digit P99 response times.
</pre>`,
            availability: `<pre>
  !&@#Y~.                                .~Y#@&~
  ^P#@@@#J        :~?5GBBBGP5?~.        Y#@@@#5:
    .~YBBJ      7P&@@@&#B#@@@@@&P!      Y#BJ~.
              ~B@@@G7^...^#@@@@@@@B~
             ?@@@G^ :JG#&&@@@@@@@@@@7
 .:::::.    ^@@@G  J@@@@@@@@@@@@@@@@@^    .:::::.
G@@@@@@@J   J@@@! ^@@@@@@@@@@@@@@@@@@J   J@@@@@@@G
?5PPPPP5~   J@@@B5#@@@@@@@@@@@@@@@@@@J   ~5PPPPP5?
            J@@@@@@@@@@@@@@@@@@@@@@@@J
            J@@@@@@@@@@@@@@@@@@@@@@@@J
            J@@@@@@@@@@@@@@@@@@@@@@@@J
            J@@@@@@@@@@@@@@@@@@@@@@@@J
            ^????????????????????????^
        ^77777777777777777777777777777777^
       7@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@7
       J@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@J
       ^B@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B^

</pre><pre class="ascii-comment">
*** Always-On Availability ***
>>> Automatic failover and replication across multiple nodes and data-centers makes for reliable fault tolerance.
</pre>`,

optimumtco: `<pre>
                       P@@P
                    :!Y@@@@Y!:
                   J&@@@@@@@@&:
                  ~@@@@J!!7YY7
                  :B@@@#G5J!:
                   .7P#@@@@@@B!
                   .~^:^~75@@@@:
                  ^&@@&BGGB@@@B.
                  .?PB&@@@@&BY:
                      :&@@&^
                       ^JJ^


          .~?5GBBBBBBBBBBBBBBBBG?          ~YGBGY:
        ^Y#@@@@@@@@@@@@@@@@@@@@@@~      ^JB@@@@@@&
:~~~~~7G@@@@@@@@@@@@@@&GGGGGGGGP7    :?B@@@@@@@@@5
&@@@@@@@@@@@@@@@@@@@@@?           :7G@@@@@@@@@G?:
@@@@@@@@@@@@@@@@@@@@@@&###########&@@@@@@@@BJ^
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BJ^
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@BY~
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&BY~.

</pre><pre class="ascii-comment">
*** Optimum TCO ***
>>> Efficient utility of your hardware means you get the most of your big data infrastructure investment.
</pre>`,

autotuning: `<pre>
                      ?@?             :JB&@&G7.
       :5?          .!@@&!.         :Y#@@@@@@@B?.
       G@@?      :5B&@@@@@&B5^    ^5&@@@@#P&@@@@#7
      5@@@@!     .~7JB@@@GJ7~.  ~P@@@@@#?. ~#@@@@&
.:~?5B@@@@@&GY7^:    .B@G     !G@@@@@B7  :J#@@@@&?
P&@@@@@@@@@@@@@@#7    :J:   !G@@@@@G!  :Y&@@@@&Y:
.^!?5B@@@@@&GY7~:        .7B@@@@@P~  ^5@@@@@#J:
      5@@@@!           .?#@@@@@@@Y:~P@@@@@B?.
      .G@@?          :Y&@@@@@@@@@@&@@@@@B7
       :5?         ^5&@@@@@@@@@@@@@@@@G!
                 ~P@@@@@@@@@@@@@@@@@P~
               ~P@@@@@@@@@@@@@@@@&5^
             !G@@@@@@@@@@@@@@@@&Y:      JY.
          .7B@@@@@@@@@@@@@@@@#J:       J@@P
        .?#@@@@@@@@@@@@@@@@#?.        !@@@@Y
      :J&@@@@@@@@@@@@@@@@B7.     :~7YG&@@@@@B5?~:.
    ^Y&@@@@@@@@@@@@@@@@G!       7#@@@@@@@@@@@@@@&P
   J@@@@@@@@@@@@@@@@@P~          :~7YG&@@@@@B5?!:.
  :@@@@@@@@@@@@@@@&5^                 !@@@@Y
   ?&@@@@@@@@@@@&Y:                    J@@G
    :J#@@@@@@@#J:                       ?Y.
      .JB@@&B?.

</pre><pre class="ascii-comment">
*** Auto Tuning ***
>>> Fully automated setup needs zero manual configuration, and uses dynamic tuning to maintain optimal performance.
</pre>`,

community: `<pre>
      .JB@@&B?.      ?G&@@&G7      .JB&@@BJ.
     .B@@@@@@@P    .P@@@@@@@@P.    G@@@@@@@G.
     .&@@@@@@@#.   ^@@@@@@@@@@^   .#@@@@@@@&.
      ~G&@@@&P^     5@@@@@@@@5     ^P&@@@&P^
        .^^^.        ~YGBBGY~        .^^^.
    .^7?JJJJJ?7~:       ..       :~7?JJJJJ?7^.
  ~5#@@@@@@@@@@@J.^?PB######BP?^:5@@@@@@@@@@@#5^
 Y@@@@@@@@@@@@B^~G@@@@@@@@@@@@@@G!!#@@@@@@@@@@@@Y
5@@@5B@@@@@@@B.J@@@&@@@@@@@@@@&@@@J:B@@@@@@@B5@@@5
@@@# G@@@@@@@~~@@@G!@@@@@@@@@@!G@@@~~@@@@@@@G.&@@@
#@@@~G@@@@@@@.?@@@J^@@@@@@@@@@^J@@@?.@@@@@@@G!@@@#
~&@@&&@@@@@@@?:&@@#J@@@@@@@@@@J#@@&.?@@@@@@@&&@@#~
 :5&@@@@@@@@@@7~#@@@@@@@@@@@@@@@@#^7@@@@@@@@@@&5:
   :7#@@@@@@@@@5:?B@@@@@@@@@@@@B?:5@@@@@@@@@#7:
     G@@@@@@@@@@^  7@@@@@@@@@@7  ^@@@@@@@@@@G
     ^5GGGGGGGP7   ~@@@@@@@@@@~   7PGGGGGGGY^
                   .5&@@@@@@&5.

</pre><pre class="ascii-comment">
*** Community Backed ***
>>> Open source database since day one. ScyllaDB is backed by a growing community of contributors.
</pre>`,

        }

        // Handle command arguments here
        if ( argument == '10x-higher-throughput' ) {
            lineBuffer += asciiArt.throughput;
        } else if ( argument == 'highly-scalable' ) {
            lineBuffer += asciiArt.highlyscalable;
        } else if ( argument == 'low-&-consistent-latency' ) {
            lineBuffer += asciiArt.consistency;
        } else if ( argument == 'unlimited' ) {
            lineBuffer += asciiArt.unlimited;
        } else if ( argument == 'always-on-availability' ) {
            lineBuffer += asciiArt.availability;
        } else if ( argument == 'optimum-tco' ) {
            lineBuffer += asciiArt.optimumtco;
        } else if ( argument == 'auto-tuning' ) {
            lineBuffer += asciiArt.autotuning;
        } else if ( argument == 'community-backed' ) {
            lineBuffer += asciiArt.community;
        } else {
            lineBuffer += 'Argument "' + argument + '" not recognized.<br>';
        }

        return lineBuffer;
      }

      function isCoreCommand(line) {
        if ( coreCmds.hasOwnProperty(line) ) {
          return true;
        }
        return false;
      }

      function coreCommand(argv, argc) {

        var cmd = argv[0];
        return coreCmds[cmd](argv, argc);

      }

      function processLine() {

        //Dispatch command
        var stdout, line = lineBuffer, argv = line.split(" "), argc = argv.length;

        var cmd = argv[0];

        lineBuffer += "<br>";
        writeToBuffer( getLeader() + lineBuffer );
        lineBuffer = "";

        //If it's not a blank line.
        if ( cmd !== "" ) {

          //If the command is not registered by the core.
          if ( !isCoreCommand(cmd) ) {

            //User registered command
            if ( processCommand ) {
              stdout = processCommand(argv,argc);
            } else {
              stdout = "{white}{bold}" + cmd + "{/bold}{/white}: command not found<br>";
            }
          } else {
            //Execute a core command
            stdout = coreCommand(argv,argc);
          }

          //If an actual command happened.
          if ( stdout === false ) {
            stdout = "{white}{bold}" + cmd + "{/bold}{/white}: command not found<br>";
          }

          stdout = renderStdOut(stdout);
          writeToBuffer(stdout);

          addLineToHistory(line);

        }
        lineBuffer = "";
        renderTerm();
      }

      function addLineToHistory(line) {
        commandHistory.unshift( line );
        currentCommandIndex = -1;
        if ( commandHistory.length > maxCommandHistory ) {
          console.log('reducing command history size');
          console.log(commandHistory.length);
          var diff = commandHistory.length - maxCommandHistory;
          commandHistory.splice(commandHistory.length -1, diff);
          console.log(commandHistory.length);
        }
      }

      function isInputKey(keyCode) {
        var inputKeyMap = [32,190,192,189,187,220,221,219,222,186,188,191];
        if ( inputKeyMap.indexOf(keyCode) > -1 ) {
          return true;
        }
        return false;
      }

      function toggleCommandHistory(direction) {

        var max = commandHistory.length -1;
        var newIndex = currentCommandIndex + direction;

        if ( newIndex < -1 ) newIndex = -1;
        if ( newIndex >= commandHistory.length) newIndex = commandHistory.length -1;

        if ( newIndex !== currentCommandIndex ) {
          currentCommandIndex = newIndex;
        }

        if ( newIndex > -1 ) {
          //Change line to something from history.
          lineBuffer = commandHistory[newIndex];
        } else {
          //Blank line...
          lineBuffer = "";
        }


      }

      var ctrlDown = false;
      var ctrl = 17;
      var command = 91;

      document.body.addEventListener("keyup", function (ev) {
          if (ev.key == 'Meta' || ev.key == 'Command') ctrlDown = false;
      });

      function acceptInput(e) {
        e.preventDefault();
        e.stopPropagation();

        fauxInput.value = "";

        if (e.key == 'Meta' || e.key == 'Command') ctrlDown = true;

        // If key pressed is V and if ctrl is true.
        if (e.key == 'v' && ctrlDown ) {
            lineBuffer += 'grow-biz-data -with ' + $( '#terminal-command' ).val();
        } else if ( e.keyCode >= 48 && e.keyCode <= 90 || isInputKey(e.keyCode) || e.key == '-' ) {
          if (! e.ctrlKey ) {
            //Character input
            lineBuffer += e.key;
          } else {
            //Hot key input? I.e Ctrl+C
          }
        } else if ( e.keyCode === 13 ) {
          processLine();
        } else if ( e.keyCode === 9 ) {
          lineBuffer += "\t";
        } else if ( e.keyCode === 38 ) {
          toggleCommandHistory(1);
        } else if ( e.keyCode === 40 ) {
          toggleCommandHistory(-1);
        }
        else if ( e.key === "Backspace" ) {
          lineBuffer = lineBuffer.substr(0, lineBuffer.length -1);
        }

        renderTerm();
      }

    // Run functionionality
    var termItemRunEls = document.querySelectorAll('.terminal-item .run');
    [...termItemRunEls].forEach((termItemCopy) => {
        termItemCopy.addEventListener('click', (e) => {
            var target = e.target || e.srcElement;

        var targetParentTitle = target.closest('.terminal-item').querySelector('h3').textContent.toLowerCase();

        lineBuffer += 'grow-biz-data -with ' + targetParentTitle.replace( /\s+/g, '-' );

        renderTerm();
        processLine();
        });
      });

    $('.terminal-item .run')
        .on( 'click', function(event) {
            var $target = $( '#terminal_body' );
            // Does a scroll target exist?
            if ($target.length) {
                $('html, body').animate({
                    scrollTop: $target.offset().top - 250
                }, 500, function() {
                    // Callback after animation
                    // Must change focus!
                    $target.trigger( 'focus' );
                    if ($target.is(":focus")) { // Checking if the target was focused
                        return false;
                    } else {
                        $target.attr('tabindex','-1'); // Adding tabindex for elements not focusable
                        $target.trigger( 'focus' ); // Set focus again
                    };
                });
            }
        });

      // Copy functionionality
    var termItemCopyEls = document.querySelectorAll('.terminal-item .copy');
    [...termItemCopyEls].forEach((termItemCopy) => {
        termItemCopy.addEventListener('click', (e) => {
            var target = e.target || e.srcElement;

        var control = $('#terminal-command');
        var targetParentTitle = target.closest('.terminal-item').querySelector('h3').textContent.toLowerCase();
        control.val(targetParentTitle.replace( ' ', '-' ));
        control.select();
        document.execCommand('copy');
        });
      });

      //Paste Button Click to paste clipboard content
      if ( term ) {
        term.addEventListener('contextmenu', function(e) {
            e.preventDefault();
            var target = e.target;
            var pasteButton = target.nextElementSibling;
            var terminalTextArea = target.getBoundingClientRect();
            pasteButton.classList.toggle("active");
            pasteButton.style.top = e.clientY - terminalTextArea.top + 'px';
            pasteButton.style.left = e.clientX - terminalTextArea.left + 'px';
            return false;
        }, false);
        term.nextElementSibling.addEventListener('click', function(e){
            var target = e.target;
            target.classList.toggle("active");
            lineBuffer += 'grow-biz-data -with ' + $( '#terminal-command' ).val();
            renderTerm();
        });
    }

    //Paste Key Command
    if ( term ) {
        document.body.addEventListener("keydown", function (ev) {
            if ( ctrlDown && !$(".search-form .search-field").length) {
                ev.preventDefault();
                ev.stopPropagation();
            }

            if (ev.key == 'Meta' || ev.key == 'Command') ctrlDown = true;
            // console.log( ev.key, 'Down', ctrlDown );

            // If key pressed is V and if ctrl is true.
            if (ev.key == 'v' && ctrlDown ) {
                lineBuffer += $( '#terminal-command' ).val();
                renderTerm();
            }
        }, false);
    // }

    // if ( term ) {
        term.addEventListener('click', function(e){
            fauxInput.focus({preventScroll: true,});
            term.classList.add('term-focus');
        });
        fauxInput.addEventListener('keydown', acceptInput);
        fauxInput.addEventListener('blur', function(e){
            term.classList.remove('term-focus');
        });
        renderTerm();
        }
    }*/

    /* var myTerm = new fauxTerm({
        el: document.getElementById("terminal_body"),
        cwd: "guest@scylladb/",
        initialMessage: "<p class='init-msg'></p>",

        // tags: ['red', 'blue', 'white', 'bold'],
        // maxBufferLength: 10000,
        // maxCommandHistory: 500,
        // cmd: function(argv, argc) {
        //   console.log(argv);
        //   return false;
        // }
      }); */

/*
// Terminal Instructions with Typewriter Effect
var i = 0;
var fauxTerm = document.querySelector('.terminal')
var txt = 'Copy or Run an item on the left for output...';
if (window.innerWidth <= 768) txt = 'Run item above for output...';
var initMsg = document.querySelector('.init-msg');
var speed = 100;

function typeWriter() {
  if (i < txt.length) {
    initMsg.innerHTML += txt.charAt(i);
    i++;
    setTimeout(typeWriter, speed);
  }
}

// If In View
function isInViewport(el) {
    const rect = el.getBoundingClientRect();
    return (
        Math.round(window.innerHeight - rect.top) >= 0
    );
}

const terminal = document.querySelector('.terminal');
if (terminal) {
document.addEventListener('scroll', function () {
    if (isInViewport(terminal)){
        if( initMsg.innerHTML ){
        } else {
            typeWriter();
        }
    }
}, {
    passive: true
});
} */


// $(document).ready(function(){
//     $.ajax
//     ({
//         crossDomain: true,
//         type: "GET",
//         url: "https://scylladb.com.staging.tenrec.com/wp-json/wp/v2/pages/53574",
//         async: false,
//         data: '{}',
//         success: function (data){
//             console.log(data);
//             let style_attr = '';
//             let background_type = data.acf.custom_background_type;
//             let  bg_color = data.acf.custom_banner_color;
//             style_attr = 'style="cursor:pointer;background:' + bg_color + '"';
//             let custom_banner_link = data.acf.custom_banner_link;
//             let custom_banner_text = data.acf.custom_banner_text;
//             let output = ``;
//             output += ` <div class="promo-banner__holder" ` + style_attr + ` onclick="window.open('` + custom_banner_link + `','_blank');" >`;
//             output += `<div class="download-page-banner is-short" style="max-width: 1120px; margin: 0 auto;justify-content: center; align-items: center;  padding: 15px 15px;">`;
//             output += ` <div class="download-page-banner--info" style="color:#fff; font-size: 16px; text-align:center;"> ` + custom_banner_text + `  </div>`;
//             output += `</div>`;
//             output += `</div>`;
//             $(document).find('.page-home-2').append(output);
//         }
//     });
// });
$.fn.shuffleChildren = function() {
    $.each(this.get(), function(index, el) {
        var $el = $(el);
        var $find = $el.children();

        $find.sort(function() {
            return 0.5 - Math.random();
        });

        $el.empty();
        $find.appendTo($el);
    });
};
setTimeout(function() {
    $(".home-users .elementor-row").shuffleChildren();
    $('.home-users .elementor-row .elementor-column').slice(3).hide();

}, 400);

$( ".dc__tab" ).on( "click touchstart", function() {
    setTimeout(function() {
        if($('.dc__tab-tools').hasClass('dc__tab_active')){
            $(".sub-menu .is_tools").addClass('is_active');
        }else{
            $(".sub-menu .is_tools").removeClass('is_active');
        }
        if($('.dc__tab-developers').hasClass('dc__tab_active')){
            $(".sub-menu .is_drivers").addClass('is_active');
        }else{
            $(".sub-menu .is_drivers").removeClass('is_active');
        }
    }, 100);
});
// $( ".product-item" ).on( "click touchstart", function() {
//     $( ".product-item" ).removeClass('is_active');
//     $(this).addClass('is_active');
// });
if ($(window).width() > 1025) {
    $( ".is_tools, .is_drivers" ).on( "click touchstart", function() {
        $('#menu-item-23360 > .sub-menu').fadeOut('fast');
        setTimeout(function() {
            $("#menu-item-23360 > .sub-menu").css({'display':''});
        }, 800);

    });
    $( "#menu-item-55235, #menu-item-55361" ).on( "click touchstart", function() {
        $('#menu-item-23377 > .sub-menu, #menu-item-23378 > .sub-menu').fadeOut('fast');
        setTimeout(function() {
            $("#menu-item-23377 > .sub-menu, #menu-item-23378 > .sub-menu").css({'display':''});
        }, 800);

    });
}else{
    $( ".is_tools, .is_drivers, #menu-item-55235, #menu-item-55361" ).on( "click touch", function() {
        setTimeout(function() {
            $('.elementor-location-header .elementor-text-editor a').trigger( "click" );
        }, 400);
    });
}

if (window.location.href.indexOf("tools") > -1) {
    $(".sub-menu .is_tools").addClass('is_active');
}

if (window.location.href.indexOf("?platform") > -1) {
    $(".menu-item-products").addClass('current-menu-ancestor');
}

if (window.location.href.indexOf("developers") > -1 ) {
    $(".sub-menu .is_drivers").addClass('is_active');
}
if (window.location.href.indexOf("company/") > -1) {
    $("#menu-item-55235, #menu-item-55361").removeClass('current-menu-item');
}
if (window.location.href.indexOf("#team") > -1) {
    $("#menu-item-55234, #menu-item-28437").removeClass('current-menu-item');
    $("#menu-item-55235, #menu-item-55361").addClass('current-menu-item');
}
if (window.location.href.indexOf("?use-case=1553") > -1) {
    $("#menu-item-54266, #menu-item-55313").removeClass('current-menu-item');
}
if (window.location.href.indexOf("?use-case=1552") > -1) {
    $("#menu-item-54266, #menu-item-55313").removeClass('current-menu-item');
}

if (window.location.href.indexOf("?use-case=1550") > -1) {
    $("#menu-item-54266, #menu-item-55313").removeClass('current-menu-item');
}
if (window.location.href.indexOf("/pricing/") > -1) {
    $("#menu-item-23360").removeClass('current-menu-ancestor');
}
if (window.location.href.indexOf("/users/") > -1) {
    $("#menu-item-55004").removeClass('current-menu-item');
    $("#menu-item-55294").removeClass('current-menu-item');
    $("#menu-item-23360").removeClass('current-menu-ancestor');
}


//Summit Hover Box Effect
// let btn = document.querySelectorAll('.scylla-summit-img-box');

// btn.forEach(boxHoverFunc);

// function boxHoverFunc(box) {
//     box.addEventListener('mousemove', e => {
//     let rect = e.target.getBoundingClientRect();
//     let x = e.clientX - rect.left;
//     let y = e.clientY - rect.top;
//     box.style.setProperty('--x', x + 'px');
//     box.style.setProperty('--y', y + 'px');
//     })
// };


$(document).ready(function() {
    $('.agenda-day-block.schedule').hover (function() {
        if ($('.agenda-day-block.schedule .planet-mckenna').hasClass('hover')){
            $('.agenda-day-block.schedule .planet-mckenna').removeClass('hover');
        }
        $(this).find('.planet-mckenna').addClass('hover');
    });    

    // let marqueeWidth = 0;
    // let itemWidth;
    // setTimeout(function(){
    //     $('.marquee-item').each(function(){
    //         itemWidth = $(this).width();
    //         $(this).attr('val', itemWidth);
    //         marqueeWidth += itemWidth;
    //         console.log('itemWidth inside ' + itemWidth);
    //         console.log('marqueeWidth inside ' + marqueeWidth);
    //     });
    //     $('.marquee-wrap').css('width', marqueeWidth);
    //     // $('.marquee-wrap').before('<style>@keyframes moveMarquee { 0% { transform: translateX(0);}100% {transform: translateX(-' + marqueeWidth +'px)}<style>');    
    // }, 1000)

    const $navbarLiItems = $('.product-sticky-nav .elementor-icon-list-items li');
    const $navbarItems = $('.product-sticky-nav .elementor-icon-list-items a');
    const $activeMark = $('.active-blob');
    const $sections = $('.product-info-section');

    // Set the active mark position and width
    function setActiveMark() {
        const $activeItem = $('.product-sticky-nav .elementor-icon-list-items a.active');
        if ($activeItem.length) {
            const offset = $activeItem.parent().position();
            $activeMark.css({
                top: offset.top + 11,
            });
        }
    }

    // Click event for navbar items
    $navbarItems.on('click', function(e) {
        e.preventDefault(); // Prevent default anchor click behavior

        $navbarLiItems.removeClass('active');
        $navbarItems.removeClass('active');
        $(this).addClass('active');
        $(this).parent().addClass('active');
        setActiveMark();
    });

    // Update active section on scroll
    $(window).on('scroll', function() {
        $sections.each(function() {
            const sectionTop = $(this).offset().top;
            const sectionHeight = $(this).outerHeight();
            const sectionId = $(this).attr('id');

            if ($(window).scrollTop() >= sectionTop - 350 && $(window).scrollTop() < sectionTop + sectionHeight) {
                $navbarLiItems.removeClass('active');
                $navbarItems.removeClass('active');
                $navbarItems.filter(`[href="#${sectionId}"]`).addClass('active');
                $navbarItems.filter(`[href="#${sectionId}"]`).parent().addClass('active');
                setActiveMark();
            }
        });
    });

    // Initialize the active mark position on page load
    setActiveMark();
});

// Mouse Move parallax
(function() {
    $("<div class='active-blob'></div>").insertAfter(".product-sticky-nav .elementor-widget-container .elementor-icon-list-items");
    // Add event listener
    document.addEventListener("mousemove", parallax);
    const elems = document.querySelectorAll(".scylla-summit-img-box .parallax"); // Fixed: added '.' to select by class

    // Magic happens here
    function parallax(e) {
        let _w = window.innerWidth / 2;
        let _h = window.innerHeight / 2;
        let _mouseX = e.clientX;
        let _mouseY = e.clientY;
        
        let _depth1 = `${20 - (_mouseX - _w) * 0.08}% ${50 - (_mouseY - _h) * 0.16}%`;
        let _depth2 = `${20 - (_mouseX - _w) * 0.16}% ${50 - (_mouseY - _h) * 0.32}%`;
        let _depth3 = `${20 - (_mouseX - _w) * 0.32}% ${50 - (_mouseY - _h) * 0.64}%`;
        
        let x = `${_depth3}, ${_depth2}, ${_depth1}`;
        
        elems.forEach((elem) => {
            elem.style.backgroundPosition = x; // Apply the background position to each element
        });
    }
})();


