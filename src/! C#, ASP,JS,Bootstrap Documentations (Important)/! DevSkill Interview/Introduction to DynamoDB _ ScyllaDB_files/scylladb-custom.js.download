/**
 * custom js functions for ScyllaDB.com
 *
 */

jQuery(function () {
  /*
   *
   * Users page functionality
   *
   */
  var isMobile = false; //initiate as false
  if (/Mobi|Android/i.test(navigator.userAgent)) {
    isMobile = true;
  }
  // https://stackoverflow.com/questions/3514784/what-is-the-best-way-to-detect-a-mobile-device-in-jquery
  // https://stackoverflow.com/questions/40532204/media-query-for-devices-supporting-hover

  if (isMobile) {
    /* toggle text-editor on click on mobile */
    jQuery(".logo-blocks .elementor-widget-wrap").click(function () {
      //  alert('chevron clicked');
      if (jQuery(this).css("overflow") == "visible") {
        //alert('overflow is visible');
        jQuery(this).css("z-index", "auto");
        jQuery(this).css("overflow", "hidden");
        jQuery(this).find(".elementor-widget-text-editor").css("top", "0");
        jQuery(this)
          .parent()
          .parent()
          .find(".elementor-image")
          .removeClass("chevronup");
      } else {
        //alert('overflow is not visible');
        jQuery(this).css("z-index", "3");
        jQuery(this).css("overflow", "visible");
        jQuery(this).find(".elementor-widget-text-editor").css("top", "100%");
        jQuery(this)
          .parent()
          .parent()
          .find(".elementor-image")
          .addClass("chevronup");
      }
    });

    $(".tooltip-icon").on("click", function (e) {
      if ($(this).parent().find(".tooltip-text").hasClass("show")) {
        $(this).parent().find(".tooltip-text").removeClass("show");
        $(this).removeClass("active");
      } else {
        $(".tooltip-text").removeClass("show");
        $(".tooltip-icon").removeClass("active");
        $(this).addClass("active");
        $(this).parent().find(".tooltip-text").addClass("show");
      }
    });

    $(".ui-tabs-mobile-opener").on("click", function (e) {
      if ($(this).parent().find(".ui-tabs-nav").hasClass("show")) {
        $(this).parent().find(".ui-tabs-nav").removeClass("show");
        $(this).removeClass("active");
      } else {
        $(".ui-tabs-nav").removeClass("show");
        $(".ui-tabs-mobile-opener").removeClass("active");
        $(this).addClass("active");
        $(this).parent().find(".ui-tabs-nav").addClass("show");
      }
    });

    $(".ui-tabs-nav a").on("click", function () {
      if ($(this).parent().parent().hasClass("show")) {
        $(this).parent().parent().removeClass("show");
      }
    });
  } else {
    /* toggle text-editor on hover on desktop */
    jQuery(".logo-blocks .elementor-widget-wrap")
      .mouseenter(function () {
        //alert('overflow is not visible');
        jQuery(this).css("z-index", "3");
        jQuery(this).css("overflow", "visible");
        jQuery(this).find(".elementor-widget-text-editor").css("top", "100%");
        jQuery(this)
          .parent()
          .parent()
          .find(".elementor-image")
          .addClass("chevronremove");
      })
      .mouseleave(function () {
        //alert('overflow is visible');
        jQuery(this).css("z-index", "auto");
        jQuery(this).css("overflow", "hidden");
        jQuery(this).find(".elementor-widget-text-editor").css("top", "0");
        jQuery(this)
          .parent()
          .parent()
          .find(".elementor-image")
          .removeClass("chevronremove");
      });
  }

  /*
   *
   * Top menu mouseover functionality
   *
   */

  jQuery(".card").on("click", function () {
    if (
      jQuery(this).hasClass("flipped-on-hover") ||
      jQuery(this).parents("flip-on-hover").length > 0
    ) {
      return;
    } else {
      jQuery(this).toggleClass("flipped");
    }
  });

  if ($(".accordion-table-item-label").length) {
    $(".accordion-table-item-label").on("click", function (e) {
      setTimeout(() => {
        $("body, html").animate(
          {
            scrollTop: $(this).offset().top - 150,
          },
          500
        );
      }, 500);
    });
  }

  // Pricing page tooltips
  $(".pricing-tooltip-icon").on("click", function (e) {
    if ($(this).parent().find(".pricing-tooltip-content").hasClass("show")) {
      $(this).parent().find(".pricing-tooltip-content").removeClass("show");
      $(this).removeClass("active");
    } else {
      $(".pricing-tooltip-content").removeClass("show");
      $(".pricing-tooltip-icon").removeClass("active");
      $(this).addClass("active");
      $(this).parent().find(".pricing-tooltip-content").addClass("show");
    }
  });
  $(document).on("click touch", function (event) {
    if (!$(event.target).parents().addBack().is(".pricing-tooltip")) {
      $(".pricing-tooltip-content").removeClass("show");
    }
  });
  jQuery(".flip-on-hover")
    .on("mouseenter", function () {
      el = jQuery(this).find(".card");
      if (el.hasClass("flipped flipped-on-hover") == false) {
        setTimeout(function () {
          jQuery(".card").each(function () {
            jQuery(this).removeClass("flipped flipped-on-hover");
          });
          el.addClass("flipped flipped-on-hover");
        }, 500);
      }
    })
    .on("mouseleave", function () {
      if (el.hasClass("flipped flipped-on-hover") == true) {
        setTimeout(function () {
          el.removeClass("flipped flipped-on-hover");
        }, 500);
      }
      clearTimeout(timer);
    });
  // jQuery(".flip-on-hover").hover( function () {
  //   el = jQuery(this).find(".card");
  //   window.setTimeout(function(){
  //     el.toggleClass("flipped flipped-on-hover");
  //   }, 800);
  // });

  // Timeline Carousel
  var $timelineAboutSection = $(".timeline-about-section .about-blocks");
  if ($timelineAboutSection.length) {
    $timelineAboutSection.slick({
      infinite: false,
      centerMode: false,
      arrows: true,
      adaptiveHeight: false,
      slidesToShow: 3.5,
      slidesToScroll: 1,
      variableWidth: true,
      responsive: [
        {
          breakpoint: 1540,
          settings: {
            slidesToShow: 2.5,
          },
        },
        {
          breakpoint: 960,
          settings: {
            slidesToShow: 2.5,
          },
        },
        {
          breakpoint: 768,
          settings: {
            slidesToShow: 1,
          },
        },
      ],
    });
  }

  // Detect browser info (name, version, OS)
  (function (window, undefined) {
    "use strict";
    var LIBVERSION = "0.7.20",
      EMPTY = "",
      UNKNOWN = "?",
      FUNC_TYPE = "function",
      UNDEF_TYPE = "undefined",
      OBJ_TYPE = "object",
      STR_TYPE = "string",
      MAJOR = "major",
      MODEL = "model",
      NAME = "name",
      TYPE = "type",
      VENDOR = "vendor",
      VERSION = "version",
      ARCHITECTURE = "architecture",
      CONSOLE = "console",
      MOBILE = "mobile",
      TABLET = "tablet",
      SMARTTV = "smarttv",
      WEARABLE = "wearable",
      EMBEDDED = "embedded";
    var util = {
      extend: function (regexes, extensions) {
        var mergedRegexes = {};
        for (var i in regexes) {
          if (extensions[i] && extensions[i].length % 2 === 0) {
            mergedRegexes[i] = extensions[i].concat(regexes[i]);
          } else {
            mergedRegexes[i] = regexes[i];
          }
        }
        return mergedRegexes;
      },
      has: function (str1, str2) {
        if (typeof str1 === "string") {
          return str2.toLowerCase().indexOf(str1.toLowerCase()) !== -1;
        } else {
          return false;
        }
      },
      lowerize: function (str) {
        return str.toLowerCase();
      },
      major: function (version) {
        return typeof version === STR_TYPE
          ? version.replace(/[^\d\.]/g, "").split(".")[0]
          : undefined;
      },
      trim: function (str) {
        return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
      },
    };
    var mapper = {
      rgx: function (ua, arrays) {
        var i = 0,
          j,
          k,
          p,
          q,
          matches,
          match;
        while (i < arrays.length && !matches) {
          var regex = arrays[i],
            props = arrays[i + 1];
          j = k = 0;
          while (j < regex.length && !matches) {
            matches = regex[j++].exec(ua);
            if (!!matches) {
              for (p = 0; p < props.length; p++) {
                match = matches[++k];
                q = props[p];
                if (typeof q === OBJ_TYPE && q.length > 0) {
                  if (q.length == 2) {
                    if (typeof q[1] == FUNC_TYPE) {
                      this[q[0]] = q[1].call(this, match);
                    } else {
                      this[q[0]] = q[1];
                    }
                  } else if (q.length == 3) {
                    if (
                      typeof q[1] === FUNC_TYPE &&
                      !(q[1].exec && q[1].test)
                    ) {
                      this[q[0]] = match
                        ? q[1].call(this, match, q[2])
                        : undefined;
                    } else {
                      this[q[0]] = match
                        ? match.replace(q[1], q[2])
                        : undefined;
                    }
                  } else if (q.length == 4) {
                    this[q[0]] = match
                      ? q[3].call(this, match.replace(q[1], q[2]))
                      : undefined;
                  }
                } else {
                  this[q] = match ? match : undefined;
                }
              }
            }
          }
          i += 2;
        }
      },
      str: function (str, map) {
        for (var i in map) {
          if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {
            for (var j = 0; j < map[i].length; j++) {
              if (util.has(map[i][j], str)) {
                return i === UNKNOWN ? undefined : i;
              }
            }
          } else if (util.has(map[i], str)) {
            return i === UNKNOWN ? undefined : i;
          }
        }
        return str;
      },
    };
    var maps = {
      browser: {
        oldsafari: {
          version: {
            "1.0": "/8",
            1.2: "/1",
            1.3: "/3",
            "2.0": "/412",
            "2.0.2": "/416",
            "2.0.3": "/417",
            "2.0.4": "/419",
            "?": "/",
          },
        },
      },
      device: {
        amazon: { model: { "Fire Phone": ["SD", "KF"] } },
        sprint: {
          model: { "Evo Shift 4G": "7373KT" },
          vendor: { HTC: "APA", Sprint: "Sprint" },
        },
      },
      os: {
        windows: {
          version: {
            ME: "4.90",
            "NT 3.11": "NT3.51",
            "NT 4.0": "NT4.0",
            2e3: "NT 5.0",
            XP: ["NT 5.1", "NT 5.2"],
            Vista: "NT 6.0",
            7: "NT 6.1",
            8: "NT 6.2",
            8.1: "NT 6.3",
            10: ["NT 6.4", "NT 10.0"],
            RT: "ARM",
          },
        },
      },
    };
    var regexes = {
      browser: [
        [
          /(opera\smini)\/([\w\.-]+)/i,
          /(opera\s[mobiletab]+).+version\/([\w\.-]+)/i,
          /(opera).+version\/([\w\.]+)/i,
          /(opera)[\/\s]+([\w\.]+)/i,
        ],
        [NAME, VERSION],
        [/(opios)[\/\s]+([\w\.]+)/i],
        [[NAME, "Opera Mini"], VERSION],
        [/\s(opr)\/([\w\.]+)/i],
        [[NAME, "Opera"], VERSION],
        [
          /(kindle)\/([\w\.]+)/i,
          /(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]*)/i,
          /(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i,
          /(?:ms|\()(ie)\s([\w\.]+)/i,
          /(rekonq)\/([\w\.]*)/i,
          /(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\/([\w\.-]+)/i,
        ],
        [NAME, VERSION],
        [/(konqueror)\/([\w\.]+)/i],
        [[NAME, "Konqueror"], VERSION],
        [/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i],
        [[NAME, "IE"], VERSION],
        [/(edge|edgios|edga|edg)\/((\d+)?[\w\.]+)/i],
        [[NAME, "Edge"], VERSION],
        [/(yabrowser)\/([\w\.]+)/i],
        [[NAME, "Yandex"], VERSION],
        [/(puffin)\/([\w\.]+)/i],
        [[NAME, "Puffin"], VERSION],
        [/(focus)\/([\w\.]+)/i],
        [[NAME, "Firefox Focus"], VERSION],
        [/(opt)\/([\w\.]+)/i],
        [[NAME, "Opera Touch"], VERSION],
        [/((?:[\s\/])uc?\s?browser|(?:juc.+)ucweb)[\/\s]?([\w\.]+)/i],
        [[NAME, "UCBrowser"], VERSION],
        [/(comodo_dragon)\/([\w\.]+)/i],
        [[NAME, /_/g, " "], VERSION],
        [/(windowswechat qbcore)\/([\w\.]+)/i],
        [[NAME, "WeChat(Win) Desktop"], VERSION],
        [/(micromessenger)\/([\w\.]+)/i],
        [[NAME, "WeChat"], VERSION],
        [/(brave)\/([\w\.]+)/i],
        [[NAME, "Brave"], VERSION],
        [/(qqbrowserlite)\/([\w\.]+)/i],
        [NAME, VERSION],
        [/(QQ)\/([\d\.]+)/i],
        [NAME, VERSION],
        [/m?(qqbrowser)[\/\s]?([\w\.]+)/i],
        [NAME, VERSION],
        [/(BIDUBrowser)[\/\s]?([\w\.]+)/i],
        [NAME, VERSION],
        [/(2345Explorer)[\/\s]?([\w\.]+)/i],
        [NAME, VERSION],
        [/(MetaSr)[\/\s]?([\w\.]+)/i],
        [NAME],
        [/(LBBROWSER)/i],
        [NAME],
        [/xiaomi\/miuibrowser\/([\w\.]+)/i],
        [VERSION, [NAME, "MIUI Browser"]],
        [/;fbav\/([\w\.]+);/i],
        [VERSION, [NAME, "Facebook"]],
        [/safari\s(line)\/([\w\.]+)/i, /android.+(line)\/([\w\.]+)\/iab/i],
        [NAME, VERSION],
        [/headlesschrome(?:\/([\w\.]+)|\s)/i],
        [VERSION, [NAME, "Chrome Headless"]],
        [/\swv\).+(chrome)\/([\w\.]+)/i],
        [[NAME, /(.+)/, "$1 WebView"], VERSION],
        [/((?:oculus|samsung)browser)\/([\w\.]+)/i],
        [[NAME, /(.+(?:g|us))(.+)/, "$1 $2"], VERSION],
        [/android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*/i],
        [VERSION, [NAME, "Android Browser"]],
        [/(sailfishbrowser)\/([\w\.]+)/i],
        [[NAME, "Sailfish Browser"], VERSION],
        [/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i],
        [NAME, VERSION],
        [/(dolfin)\/([\w\.]+)/i],
        [[NAME, "Dolphin"], VERSION],
        [/((?:android.+)crmo|crios)\/([\w\.]+)/i],
        [[NAME, "Chrome"], VERSION],
        [/(coast)\/([\w\.]+)/i],
        [[NAME, "Opera Coast"], VERSION],
        [/fxios\/([\w\.-]+)/i],
        [VERSION, [NAME, "Firefox"]],
        [/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i],
        [VERSION, [NAME, "Mobile Safari"]],
        [/version\/([\w\.]+).+?(mobile\s?safari|safari)/i],
        [VERSION, NAME],
        [/webkit.+?(gsa)\/([\w\.]+).+?(mobile\s?safari|safari)(\/[\w\.]+)/i],
        [[NAME, "GSA"], VERSION],
        [/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i],
        [NAME, [VERSION, mapper.str, maps.browser.oldsafari.version]],
        [/(webkit|khtml)\/([\w\.]+)/i],
        [NAME, VERSION],
        [/(navigator|netscape)\/([\w\.-]+)/i],
        [[NAME, "Netscape"], VERSION],
        [
          /(swiftfox)/i,
          /(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i,
          /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([\w\.-]+)$/i,
          /(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i,
          /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i,
          /(links)\s\(([\w\.]+)/i,
          /(gobrowser)\/?([\w\.]*)/i,
          /(ice\s?browser)\/v?([\w\._]+)/i,
          /(mosaic)[\/\s]([\w\.]+)/i,
        ],
        [NAME, VERSION],
      ],
      cpu: [
        [/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i],
        [[ARCHITECTURE, "amd64"]],
        [/(ia32(?=;))/i],
        [[ARCHITECTURE, util.lowerize]],
        [/((?:i[346]|x)86)[;\)]/i],
        [[ARCHITECTURE, "ia32"]],
        [/windows\s(ce|mobile);\sppc;/i],
        [[ARCHITECTURE, "arm"]],
        [/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i],
        [[ARCHITECTURE, /ower/, "", util.lowerize]],
        [/(sun4\w)[;\)]/i],
        [[ARCHITECTURE, "sparc"]],
        [
          /((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+[;l]))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i,
        ],
        [[ARCHITECTURE, util.lowerize]],
      ],
      device: [
        [/\((ipad|playbook);[\w\s\),;-]+(rim|apple)/i],
        [MODEL, VENDOR, [TYPE, TABLET]],
        [/applecoremedia\/[\w\.]+ \((ipad)/],
        [MODEL, [VENDOR, "Apple"], [TYPE, TABLET]],
        [/(apple\s{0,1}tv)/i],
        [
          [MODEL, "Apple TV"],
          [VENDOR, "Apple"],
        ],
        [
          /(archos)\s(gamepad2?)/i,
          /(hp).+(touchpad)/i,
          /(hp).+(tablet)/i,
          /(kindle)\/([\w\.]+)/i,
          /\s(nook)[\w\s]+build\/(\w+)/i,
          /(dell)\s(strea[kpr\s\d]*[\dko])/i,
        ],
        [VENDOR, MODEL, [TYPE, TABLET]],
        [/(kf[A-z]+)\sbuild\/.+silk\//i],
        [MODEL, [VENDOR, "Amazon"], [TYPE, TABLET]],
        [/(sd|kf)[0349hijorstuw]+\sbuild\/.+silk\//i],
        [
          [MODEL, mapper.str, maps.device.amazon.model],
          [VENDOR, "Amazon"],
          [TYPE, MOBILE],
        ],
        [/android.+aft([bms])\sbuild/i],
        [MODEL, [VENDOR, "Amazon"], [TYPE, SMARTTV]],
        [/\((ip[honed|\s\w*]+);.+(apple)/i],
        [MODEL, VENDOR, [TYPE, MOBILE]],
        [/\((ip[honed|\s\w*]+);/i],
        [MODEL, [VENDOR, "Apple"], [TYPE, MOBILE]],
        [
          /(blackberry)[\s-]?(\w+)/i,
          /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\s_-]?([\w-]*)/i,
          /(hp)\s([\w\s]+\w)/i,
          /(asus)-?(\w+)/i,
        ],
        [VENDOR, MODEL, [TYPE, MOBILE]],
        [/\(bb10;\s(\w+)/i],
        [MODEL, [VENDOR, "BlackBerry"], [TYPE, MOBILE]],
        [
          /android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone|p00c)/i,
        ],
        [MODEL, [VENDOR, "Asus"], [TYPE, TABLET]],
        [/(sony)\s(tablet\s[ps])\sbuild\//i, /(sony)?(?:sgp.+)\sbuild\//i],
        [
          [VENDOR, "Sony"],
          [MODEL, "Xperia Tablet"],
          [TYPE, TABLET],
        ],
        [
          /android.+\s([c-g]\d{4}|so[-l]\w+)(?=\sbuild\/|\).+chrome\/(?![1-6]{0,1}\d\.))/i,
        ],
        [MODEL, [VENDOR, "Sony"], [TYPE, MOBILE]],
        [/\s(ouya)\s/i, /(nintendo)\s([wids3u]+)/i],
        [VENDOR, MODEL, [TYPE, CONSOLE]],
        [/android.+;\s(shield)\sbuild/i],
        [MODEL, [VENDOR, "Nvidia"], [TYPE, CONSOLE]],
        [/(playstation\s[34portablevi]+)/i],
        [MODEL, [VENDOR, "Sony"], [TYPE, CONSOLE]],
        [/(sprint\s(\w+))/i],
        [
          [VENDOR, mapper.str, maps.device.sprint.vendor],
          [MODEL, mapper.str, maps.device.sprint.model],
          [TYPE, MOBILE],
        ],
        [
          /(htc)[;_\s-]+([\w\s]+(?=\)|\sbuild)|\w+)/i,
          /(zte)-(\w*)/i,
          /(alcatel|geeksphone|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]*)/i,
        ],
        [VENDOR, [MODEL, /_/g, " "], [TYPE, MOBILE]],
        [/(nexus\s9)/i],
        [MODEL, [VENDOR, "HTC"], [TYPE, TABLET]],
        [/d\/huawei([\w\s-]+)[;\)]/i, /(nexus\s6p)/i],
        [MODEL, [VENDOR, "Huawei"], [TYPE, MOBILE]],
        [/(microsoft);\s(lumia[\s\w]+)/i],
        [VENDOR, MODEL, [TYPE, MOBILE]],
        [/[\s\(;](xbox(?:\sone)?)[\s\);]/i],
        [MODEL, [VENDOR, "Microsoft"], [TYPE, CONSOLE]],
        [/(kin\.[onetw]{3})/i],
        [
          [MODEL, /\./g, " "],
          [VENDOR, "Microsoft"],
          [TYPE, MOBILE],
        ],
        [
          /\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?:?(\s4g)?)[\w\s]+build\//i,
          /mot[\s-]?(\w*)/i,
          /(XT\d{3,4}) build\//i,
          /(nexus\s6)/i,
        ],
        [MODEL, [VENDOR, "Motorola"], [TYPE, MOBILE]],
        [/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i],
        [MODEL, [VENDOR, "Motorola"], [TYPE, TABLET]],
        [/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i],
        [
          [VENDOR, util.trim],
          [MODEL, util.trim],
          [TYPE, SMARTTV],
        ],
        [/hbbtv.+maple;(\d+)/i],
        [
          [MODEL, /^/, "SmartTV"],
          [VENDOR, "Samsung"],
          [TYPE, SMARTTV],
        ],
        [/\(dtv[\);].+(aquos)/i],
        [MODEL, [VENDOR, "Sharp"], [TYPE, SMARTTV]],
        [
          /android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))/i,
          /((SM-T\w+))/i,
        ],
        [[VENDOR, "Samsung"], MODEL, [TYPE, TABLET]],
        [/smart-tv.+(samsung)/i],
        [VENDOR, [TYPE, SMARTTV], MODEL],
        [
          /((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))/i,
          /(sam[sung]*)[\s-]*(\w+-?[\w-]*)/i,
          /sec-((sgh\w+))/i,
        ],
        [[VENDOR, "Samsung"], MODEL, [TYPE, MOBILE]],
        [/sie-(\w*)/i],
        [MODEL, [VENDOR, "Siemens"], [TYPE, MOBILE]],
        [/(maemo|nokia).*(n900|lumia\s\d+)/i, /(nokia)[\s_-]?([\w-]*)/i],
        [[VENDOR, "Nokia"], MODEL, [TYPE, MOBILE]],
        [/android[x\d\.\s;]+\s([ab][1-7]\-?[0178a]\d\d?)/i],
        [MODEL, [VENDOR, "Acer"], [TYPE, TABLET]],
        [/android.+([vl]k\-?\d{3})\s+build/i],
        [MODEL, [VENDOR, "LG"], [TYPE, TABLET]],
        [/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i],
        [[VENDOR, "LG"], MODEL, [TYPE, TABLET]],
        [/(lg) netcast\.tv/i],
        [VENDOR, MODEL, [TYPE, SMARTTV]],
        [
          /(nexus\s[45])/i,
          /lg[e;\s\/-]+(\w*)/i,
          /android.+lg(\-?[\d\w]+)\s+build/i,
        ],
        [MODEL, [VENDOR, "LG"], [TYPE, MOBILE]],
        [/(lenovo)\s?(s(?:5000|6000)(?:[\w-]+)|tab(?:[\s\w]+))/i],
        [VENDOR, MODEL, [TYPE, TABLET]],
        [/android.+(ideatab[a-z0-9\-\s]+)/i],
        [MODEL, [VENDOR, "Lenovo"], [TYPE, TABLET]],
        [/(lenovo)[_\s-]?([\w-]+)/i],
        [VENDOR, MODEL, [TYPE, MOBILE]],
        [/linux;.+((jolla));/i],
        [VENDOR, MODEL, [TYPE, MOBILE]],
        [/((pebble))app\/[\d\.]+\s/i],
        [VENDOR, MODEL, [TYPE, WEARABLE]],
        [/android.+;\s(oppo)\s?([\w\s]+)\sbuild/i],
        [VENDOR, MODEL, [TYPE, MOBILE]],
        [/crkey/i],
        [
          [MODEL, "Chromecast"],
          [VENDOR, "Google"],
        ],
        [/android.+;\s(glass)\s\d/i],
        [MODEL, [VENDOR, "Google"], [TYPE, WEARABLE]],
        [/android.+;\s(pixel c)[\s)]/i],
        [MODEL, [VENDOR, "Google"], [TYPE, TABLET]],
        [/android.+;\s(pixel( [23])?( xl)?)[\s)]/i],
        [MODEL, [VENDOR, "Google"], [TYPE, MOBILE]],
        [
          /android.+;\s(\w+)\s+build\/hm\1/i,
          /android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i,
          /android.+(mi[\s\-_]*(?:a\d|one|one[\s_]plus|note lte)?[\s_]*(?:\d?\w?)[\s_]*(?:plus)?)\s+build/i,
          /android.+(redmi[\s\-_]*(?:note)?(?:[\s_]*[\w\s]+))\s+build/i,
        ],
        [
          [MODEL, /_/g, " "],
          [VENDOR, "Xiaomi"],
          [TYPE, MOBILE],
        ],
        [/android.+(mi[\s\-_]*(?:pad)(?:[\s_]*[\w\s]+))\s+build/i],
        [
          [MODEL, /_/g, " "],
          [VENDOR, "Xiaomi"],
          [TYPE, TABLET],
        ],
        [/android.+;\s(m[1-5]\snote)\sbuild/i],
        [MODEL, [VENDOR, "Meizu"], [TYPE, MOBILE]],
        [/(mz)-([\w-]{2,})/i],
        [[VENDOR, "Meizu"], MODEL, [TYPE, MOBILE]],
        [/android.+a000(1)\s+build/i, /android.+oneplus\s(a\d{4})\s+build/i],
        [MODEL, [VENDOR, "OnePlus"], [TYPE, MOBILE]],
        [/android.+[;\/]\s*(RCT[\d\w]+)\s+build/i],
        [MODEL, [VENDOR, "RCA"], [TYPE, TABLET]],
        [/android.+[;\/\s]+(Venue[\d\s]{2,7})\s+build/i],
        [MODEL, [VENDOR, "Dell"], [TYPE, TABLET]],
        [/android.+[;\/]\s*(Q[T|M][\d\w]+)\s+build/i],
        [MODEL, [VENDOR, "Verizon"], [TYPE, TABLET]],
        [/android.+[;\/]\s+(Barnes[&\s]+Noble\s+|BN[RT])(V?.*)\s+build/i],
        [[VENDOR, "Barnes & Noble"], MODEL, [TYPE, TABLET]],
        [/android.+[;\/]\s+(TM\d{3}.*\b)\s+build/i],
        [MODEL, [VENDOR, "NuVision"], [TYPE, TABLET]],
        [/android.+;\s(k88)\sbuild/i],
        [MODEL, [VENDOR, "ZTE"], [TYPE, TABLET]],
        [/android.+[;\/]\s*(gen\d{3})\s+build.*49h/i],
        [MODEL, [VENDOR, "Swiss"], [TYPE, MOBILE]],
        [/android.+[;\/]\s*(zur\d{3})\s+build/i],
        [MODEL, [VENDOR, "Swiss"], [TYPE, TABLET]],
        [/android.+[;\/]\s*((Zeki)?TB.*\b)\s+build/i],
        [MODEL, [VENDOR, "Zeki"], [TYPE, TABLET]],
        [
          /(android).+[;\/]\s+([YR]\d{2})\s+build/i,
          /android.+[;\/]\s+(Dragon[\-\s]+Touch\s+|DT)(\w{5})\sbuild/i,
        ],
        [[VENDOR, "Dragon Touch"], MODEL, [TYPE, TABLET]],
        [/android.+[;\/]\s*(NS-?\w{0,9})\sbuild/i],
        [MODEL, [VENDOR, "Insignia"], [TYPE, TABLET]],
        [/android.+[;\/]\s*((NX|Next)-?\w{0,9})\s+build/i],
        [MODEL, [VENDOR, "NextBook"], [TYPE, TABLET]],
        [
          /android.+[;\/]\s*(Xtreme\_)?(V(1[045]|2[015]|30|40|60|7[05]|90))\s+build/i,
        ],
        [[VENDOR, "Voice"], MODEL, [TYPE, MOBILE]],
        [/android.+[;\/]\s*(LVTEL\-)?(V1[12])\s+build/i],
        [[VENDOR, "LvTel"], MODEL, [TYPE, MOBILE]],
        [/android.+;\s(PH-1)\s/i],
        [MODEL, [VENDOR, "Essential"], [TYPE, MOBILE]],
        [/android.+[;\/]\s*(V(100MD|700NA|7011|917G).*\b)\s+build/i],
        [MODEL, [VENDOR, "Envizen"], [TYPE, TABLET]],
        [/android.+[;\/]\s*(Le[\s\-]+Pan)[\s\-]+(\w{1,9})\s+build/i],
        [VENDOR, MODEL, [TYPE, TABLET]],
        [/android.+[;\/]\s*(Trio[\s\-]*.*)\s+build/i],
        [MODEL, [VENDOR, "MachSpeed"], [TYPE, TABLET]],
        [/android.+[;\/]\s*(Trinity)[\-\s]*(T\d{3})\s+build/i],
        [VENDOR, MODEL, [TYPE, TABLET]],
        [/android.+[;\/]\s*TU_(1491)\s+build/i],
        [MODEL, [VENDOR, "Rotor"], [TYPE, TABLET]],
        [/android.+(KS(.+))\s+build/i],
        [MODEL, [VENDOR, "Amazon"], [TYPE, TABLET]],
        [/android.+(Gigaset)[\s\-]+(Q\w{1,9})\s+build/i],
        [VENDOR, MODEL, [TYPE, TABLET]],
        [/\s(tablet|tab)[;\/]/i, /\s(mobile)(?:[;\/]|\ssafari)/i],
        [[TYPE, util.lowerize], VENDOR, MODEL],
        [/[\s\/\(](smart-?tv)[;\)]/i],
        [[TYPE, SMARTTV]],
        [/(android[\w\.\s\-]{0,9});.+build/i],
        [MODEL, [VENDOR, "Generic"]],
      ],
      engine: [
        [/windows.+\sedge\/([\w\.]+)/i],
        [VERSION, [NAME, "EdgeHTML"]],
        [/webkit\/537\.36.+chrome\/(?!27)/i],
        [[NAME, "Blink"]],
        [
          /(presto)\/([\w\.]+)/i,
          /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i,
          /(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i,
          /(icab)[\/\s]([23]\.[\d\.]+)/i,
        ],
        [NAME, VERSION],
        [/rv\:([\w\.]{1,9}).+(gecko)/i],
        [VERSION, NAME],
      ],
      os: [
        [/microsoft\s(windows)\s(vista|xp)/i],
        [NAME, VERSION],
        [
          /(windows)\snt\s6\.2;\s(arm)/i,
          /(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s\w]*)/i,
          /(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i,
        ],
        [NAME, [VERSION, mapper.str, maps.os.windows.version]],
        [/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i],
        [
          [NAME, "Windows"],
          [VERSION, mapper.str, maps.os.windows.version],
        ],
        [/\((bb)(10);/i],
        [[NAME, "BlackBerry"], VERSION],
        [
          /(blackberry)\w*\/?([\w\.]*)/i,
          /(tizen)[\/\s]([\w\.]+)/i,
          /(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|sailfish|contiki)[\/\s-]?([\w\.]*)/i,
        ],
        [NAME, VERSION],
        [/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]*)/i],
        [[NAME, "Symbian"], VERSION],
        [/\((series40);/i],
        [NAME],
        [/mozilla.+\(mobile;.+gecko.+firefox/i],
        [[NAME, "Firefox OS"], VERSION],
        [
          /(nintendo|playstation)\s([wids34portablevu]+)/i,
          /(mint)[\/\s\(]?(\w*)/i,
          /(mageia|vectorlinux)[;\s]/i,
          /(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]*)/i,
          /(hurd|linux)\s?([\w\.]*)/i,
          /(gnu)\s?([\w\.]*)/i,
        ],
        [NAME, VERSION],
        [/(cros)\s[\w]+\s([\w\.]+\w)/i],
        [[NAME, "Chromium OS"], VERSION],
        [/(sunos)\s?([\w\.\d]*)/i],
        [[NAME, "Solaris"], VERSION],
        [/\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]*)/i],
        [NAME, VERSION],
        [/(haiku)\s(\w+)/i],
        [NAME, VERSION],
        [
          /cfnetwork\/.+darwin/i,
          /ip[honead]{2,4}(?:.*os\s([\w]+)\slike\smac|;\sopera)/i,
        ],
        [
          [VERSION, /_/g, "."],
          [NAME, "iOS"],
        ],
        [/(mac\sos\sx)\s?([\w\s\.]*)/i, /(macintosh|mac(?=_powerpc)\s)/i],
        [
          [NAME, "Mac OS"],
          [VERSION, /_/g, "."],
        ],
        [
          /((?:open)?solaris)[\/\s-]?([\w\.]*)/i,
          /(aix)\s((\d)(?=\.|\)|\s)[\w\.])*/i,
          /(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms|fuchsia)/i,
          /(unix)\s?([\w\.]*)/i,
        ],
        [NAME, VERSION],
      ],
    };
    var UAParser = function (uastring, extensions) {
      if (typeof uastring === "object") {
        extensions = uastring;
        uastring = undefined;
      }
      if (!(this instanceof UAParser)) {
        return new UAParser(uastring, extensions).getResult();
      }
      var ua =
        uastring ||
        (window && window.navigator && window.navigator.userAgent
          ? window.navigator.userAgent
          : EMPTY);
      var rgxmap = extensions ? util.extend(regexes, extensions) : regexes;
      this.getBrowser = function () {
        var browser = { name: undefined, version: undefined };
        mapper.rgx.call(browser, ua, rgxmap.browser);
        browser.major = util.major(browser.version);
        return browser;
      };
      this.getCPU = function () {
        var cpu = { architecture: undefined };
        mapper.rgx.call(cpu, ua, rgxmap.cpu);
        return cpu;
      };
      this.getDevice = function () {
        var device = { vendor: undefined, model: undefined, type: undefined };
        mapper.rgx.call(device, ua, rgxmap.device);
        return device;
      };
      this.getEngine = function () {
        var engine = { name: undefined, version: undefined };
        mapper.rgx.call(engine, ua, rgxmap.engine);
        return engine;
      };
      this.getOS = function () {
        var os = { name: undefined, version: undefined };
        mapper.rgx.call(os, ua, rgxmap.os);
        return os;
      };
      this.getResult = function () {
        return {
          ua: this.getUA(),
          browser: this.getBrowser(),
          engine: this.getEngine(),
          os: this.getOS(),
          device: this.getDevice(),
          cpu: this.getCPU(),
        };
      };
      this.getUA = function () {
        return ua;
      };
      this.setUA = function (uastring) {
        ua = uastring;
        return this;
      };
      return this;
    };
    UAParser.VERSION = LIBVERSION;
    UAParser.BROWSER = { NAME: NAME, MAJOR: MAJOR, VERSION: VERSION };
    UAParser.CPU = { ARCHITECTURE: ARCHITECTURE };
    UAParser.DEVICE = {
      MODEL: MODEL,
      VENDOR: VENDOR,
      TYPE: TYPE,
      CONSOLE: CONSOLE,
      MOBILE: MOBILE,
      SMARTTV: SMARTTV,
      TABLET: TABLET,
      WEARABLE: WEARABLE,
      EMBEDDED: EMBEDDED,
    };
    UAParser.ENGINE = { NAME: NAME, VERSION: VERSION };
    UAParser.OS = { NAME: NAME, VERSION: VERSION };
    if (typeof exports !== UNDEF_TYPE) {
      if (typeof module !== UNDEF_TYPE && module.exports) {
        exports = module.exports = UAParser;
      }
      exports.UAParser = UAParser;
    } else {
      if (typeof define === "function" && define.amd) {
        define(function () {
          return UAParser;
        });
      } else if (window) {
        window.UAParser = UAParser;
      }
    }
    var $ = window && (window.jQuery || window.Zepto);
    if (typeof $ !== UNDEF_TYPE && !$.ua) {
      var parser = new UAParser();
      $.ua = parser.getResult();
      $.ua.get = function () {
        return parser.getUA();
      };
      $.ua.set = function (uastring) {
        parser.setUA(uastring);
        var result = parser.getResult();
        for (var prop in result) {
          $.ua[prop] = result[prop];
        }
      };
    }
  })(typeof window === "object" ? window : this);

  // hide cookie-based shortcode content from client-side (because of the CDN caching)
  var isShortcodePresent = !!$(".cookie-conditional").length;

  if (isShortcodePresent) {
    var cookieEnt = readCookie("ent-form-seen");
    var cookieOs = readCookie("os-form-seen");
    var cookieUUID = readCookie("uuid");
    var cookie;
    var shortcodes = ".cookie-conditional";
    $(shortcodes).each(function () {
      var cookieName = $(this).data("cookie");
      cookie = cookieName === "ent-form-seen" ? cookieEnt : cookieOs; // which cookie is used in shortcode condition
      if ($(this).data("type") === "no") {
        if (cookie) {
          // show_if_no_cookie shortcode
          $(this).remove();
        }
      } else if ($(this).data("type") === "yes") {
        if (!cookie) {
          // show_if_cookie shortcode
          $(this).remove();
        } else {
          var unreplacedUUID = $('code:contains("uuidValue")');
          if (unreplacedUUID.length && cookieUUID) {
            unreplacedUUID.each(function () {
              this.innerHTML = this.innerHTML.replace("uuidValue", cookieUUID);
            });
          }
        }
      }
    });
  }

  // Send ajax if 'uuidValue' replacement function has not been called
  if (cookieEnt || cookieOs) {
    setTimeout(function () {
      var unreplacedUUID = $('code:contains("uuidValue")');

      if (unreplacedUUID.length) {
        var uaParser = new UAParser();
        var browserData = uaParser.getResult();

        if (cookieUUID) {
          $.ajax({
            url: ajaxurl,
            type: "POST",
            data: {
              action: "send_user_data_email",
              user_data: {
                user_uuid: cookieUUID,
                user_browser:
                  browserData.browser.name +
                  ", version: " +
                  browserData.browser.version,
                user_os:
                  browserData.os.name + ", version: " + browserData.os.version,
                user_device_model: browserData.device.model,
                user_device_type: browserData.device.type,
                user_screensize: $(window).width() + "×" + $(window).height(),
              },
            },
          });
        }
      }
    }, 1000);
  }

  // open video lightbox by hashtag on page load
  function openVideoPopupByHash() {
    var hash = location.hash.substr(1);

    if (!hash) {
      return false;
    }

    var videoItem = $(
      '.elementor-custom-embed-image-overlay[data-name="' + hash + '"]'
    );

    if (videoItem.length) {
      videoItem.trigger("click");
      $("#elementor-lightbox-bbc7732 .dialog-widget-content").css({
        top: 0,
        left: 0,
      });
    }
  }

  setTimeout(function () {
    openVideoPopupByHash();
  }, 1000);
});
(function ($) {
  /* Init Slick sliders */

  // Benchamrks Carousel
  var $benchmarksCarousel = $(".benchmarks-carousel-wrap");
  if ($benchmarksCarousel.length) {
    $benchmarksCarousel.slick({
      centerMode: true,
      centerPadding: "30%",
      dots: true,
      arrows: true,
      adaptiveHeight: true,
      slidesToShow: 1,
      slidesToScroll: 1,
      infinite: true,
      responsive: [
        {
          breakpoint: 1024,
          settings: {
            centerPadding: "20%",
          },
        },
        {
          breakpoint: 768,
          settings: {
            centerPadding: "15px",
          },
        },
      ],
    });
  }

  // Additional nav gallery
  var $additionalNavGallery = $(".additional-nav .elementor-nav-menu--main ul");

  if ($additionalNavGallery.length) {
    $additionalNavGallery.slick({
      speed: 300,
      slidesToShow: 3,
      centerPadding: "140px",
      centerMode: true,
      infinite: true,
      responsive: [
        {
          breakpoint: 1024,
          settings: {
            centerPadding: "100px",
            slidesToShow: 2,
          },
        },
        {
          breakpoint: 768,
          settings: {
            centerPadding: "50px",
            slidesToShow: 1,
          },
        },
      ],
    });

    var currentSlideDataID = $additionalNavGallery
      .find(".current-menu-item:not(.slick-cloned)")
      .attr("data-slick-index");

    console.log(
      $additionalNavGallery.find(".current-menu-item:not(.slick-cloned)")
    );

    $additionalNavGallery.slick("slickGoTo", currentSlideDataID, true);
  }

  // Testimonials gallery
  var $testimonialsGallery = $(".testimonials-gallery");

  if ($testimonialsGallery.length) {
    $testimonialsGallery.slick({
      speed: 300,
      fade: true,
      cssEase: "linear",
      arrows: false,
      autoplay: true,
      autoplaySpeed: 4500,
      slidesToShow: 1,
      infinite: true,
    });
  }

  // Hero banner carousel
  var $heroBannerCarousel = $(
    ".hero-carousel > .elementor-container > .elementor-row"
  );

  if ($heroBannerCarousel.length) {
    $heroBannerCarousel.slick({
      speed: 750,
      cssEase: "linear",
      arrows: false,
      autoplay: true,
      autoplaySpeed: 7500,
      slidesToShow: 1,
    });
  }

  var PromoBanners = {
    init: function () {
      var self = PromoBanners;

      self.el = {
        promoBanners: $(
          ".custom-promo-banner-wrap, .download-page-banner-wrap"
        ),
      };

      self.initPromoBanners();
    },

    checkSectionShortcode: function () {
      var promoBanner = $(".download-page-banner-wrap");
      if (promoBanner.find(".elementor-shortcode").text().length > 0) {
        return true;
      }
      return false;
    },

    initPromoBanners: function () {
      var self = PromoBanners;

      if (self.el.promoBanners.length) {
        self.el.promoBanners.each(function () {
          var bannerType = $(this).data("banner-type");
          var bannerCookie = readCookie("hide-" + bannerType + "-banner");

          if (!bannerCookie && self.checkSectionShortcode()) {
            setTimeout(function () {
              $("body").addClass("show-banner");
            }, 1500);
          }
        });

        self.el.promoBanners
          .find(".custom-promo-banner--close, .download-page-banner--close")
          .on("click", function () {
            var bannerType = $(this)
              .closest(".custom-promo-banner-wrap, .download-page-banner-wrap")
              .data("banner-type");
            $("body").removeClass("show-banner");
            createCookie("hide-" + bannerType + "-banner", 1, 3);
          });
      }
    },
  };

  var CustomTabs = {
    init: function () {
      var self = CustomTabs;

      self.initEvents();
      self.setActiveByHash();
    },

    initEvents: function () {
      var self = CustomTabs;

      $(".custom-tab").on("click", function () {
        self.setActive($(this));
      });

      $(".custom-tabs-mobile-toggle").on("click", function () {
        $(this).toggleClass("opened");
      });
    },

    setActive: function ($this) {
      var $wrap = $this.closest(".custom-tabs-wrap");
      var id = $this.data("name");
      var isChildTab = $this.closest(".custom-tabs-container").length > 0;
      var $mobileToggle = $wrap.find(".custom-tabs-mobile-toggle");
      console.log("updated");

      // Set active tab
      $wrap.find("> .custom-tabs .active-tab").removeClass("active-tab");
      $this.addClass("active-tab");

      // Switch tab content
      $wrap.find("> .custom-tabs-container > .custom-tab-content").hide();
      $("#custom-tab-" + id).show();

      // Change state if tab is not nested
      if (!isChildTab) {
        history.pushState(null, null, "#" + id);
      }

      // Change Mobile Toggle
      if ($mobileToggle.length) {
        $mobileToggle.html($this.html());
        $mobileToggle.removeClass("opened");
      }
    },

    setActiveByHash: function () {
      var self = CustomTabs;
      var hash = window.location.hash.substr(1);

      if (hash) {
        var $tab = $('.custom-tab[data-name="' + hash + '"]');

        if ($tab.length) {
          var isChildTab = $tab.closest(".custom-tabs-container").length > 0;

          if (!isChildTab) {
            self.setActive($tab);
          }
        }
      }
    },
  };

  var $infoAccordion = $(".info-accordion");

  if ($infoAccordion.length) {
    var $tabTitle = $(".elementor-tab-title");

    $tabTitle.click(function () {
      var $accordioncontent = $(this).next(".elementor-tab-content");
      $accordioncontent.slideToggle(600);

      var target = $(this).parent();

      setTimeout(function () {
        $("html, body").animate(
          {
            scrollTop: target.offset().top - 50,
          },
          1000
        );
      }, 610); // ensure the collapse animation is done
    });
  }

  var $videoDescription = $(".about-speakers-video-desc-description-full");

  if ($videoDescription.length) {
    $(".about-speakers-video-desc-description .view-more").on(
      "click",
      function () {
        $(this).toggleClass("active");

        if ($(this).hasClass("active")) {
          $(this).find("span").text("Read Less");
        } else {
          $(this).find("span").text("Read More");
        }

        var $moreContent = $(".about-speakers-video-desc-description").find(
          ".about-speakers-video-desc-description-full"
        );

        $moreContent.toggleClass("opened");
      }
    );
  }

  var FAQList = {
    init: function () {
      var self = FAQList;

      var faq_blocks = $(".hrf-faq-list");

      faq_blocks.each(function () {
        var that = $(this);
        var items = that.find(".hrf-entry");

        items.wrapAll('<div class="hrf-faq-list__content"></div>');
      });

      self.openList();
    },

    openList: function () {
      var self = FAQList;

      $(".frq-main-title").on("click", function () {
        var that = $(this);
        var container = that.parents(".hrf-faq-list");
        var content = that.siblings(".hrf-faq-list__content");

        that.toggleClass("frq-main-title_active");
        container.toggleClass("hrf-faq-list_opened");
        content.fadeToggle("slow");
      });
    },
  };

  $(".pricing-cluster-switch .switch-slider").on("click", function () {
    var monthly = $(".cluster-price .price-monthly");
    var annually = $(".cluster-price .price-annually");

    if (!$(this).hasClass("switched")) {
      monthly.show();
      annually.hide();
      $(this).addClass("switched");
    } else {
      monthly.hide();
      annually.show();
      $(this).removeClass("switched");
    }
  });

  $(document).ready(function () {
    CustomTabs.init();
    PromoBanners.init();
    FAQList.init();
    //This is for the sticky nav on the devhub page
    if($(".sticky-sideNav").length){
      let screensize = $(window).width();
      if (screensize <= 768) {
        $(".sticky-sideNav").removeClass("open");
        $(".sticky-sideNav:not(.open)").attr("aria-expanded", "false");
      }
      if (screensize > 768) {
        $(".sticky-sideNav:not(.open)").attr("aria-expanded", "true");
      }

      let resizeTimer;
      $(window).on("resize", function (e) {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(function () {
          screensize = $(window).width();
          if (screensize <= 768) {
            $(".sticky-sideNav").removeClass("open");
            $(".sticky-sideNav:not(.open)").attr("aria-expanded", "false");
          }
          if (screensize > 768) {
            $(".sticky-sideNav").addClass('open');
            $(".sticky-sideNav.open").attr("aria-expanded", "true");
          }
        }, 250);
      });
    }

    $(".container-stickyImg").on("click", function () {
      $(".sticky-sideNav").toggleClass("open");
      if ($(".sticky-sideNav").hasClass("open")) {
        $(".sticky-sideNav").attr("aria-expanded", "true");
      } else {
        $(".sticky-sideNav").attr("aria-expanded", "false");
      }
    });
  });

  $("#pardot_form").on("load", () => {
    let iframeHead = $("#pardot_form").contents().find("head");
    let iframeCSS = "<style>form#pardot-form{overflow:hidden}</style>";
    $(iframeHead).append(iframeCSS);
  });
})(typeof jQuery === "function" ? jQuery : this);

$(document).ready(function () {
  initLightbox();
  initSpeakersPopup();
  dynamicTexts();
  initPortalMenu();
  initSearchOpen();
  initMobileMenuOpener();
  parentLinksToggle();
});

$(window).on("resize", function () {
  if ($(window).width() <= 1024) {
    $("#menu-main-menu > .menu-item-has-children").removeClass("active");
  }
  parentLinksToggle();
});

function initMobileMenuOpener() {
  $(".menu-toggle a").on( "click", function(e) {
      e.preventDefault();
      e.stopPropagation();
      e.stopImmediatePropagation();
      $("#menu-main-menu .menu").slideToggle('slow');
      $("body").toggleClass("main-menu-opened");
      $(this).toggleClass("active");
    });
}

function parentLinksToggle() {
  if ($(window).width() <= 1024) {
    $("#menu-main-menu > li").not(".portalmenu").off("mouseenter mouseleave");
    // $('#menu-main-menu > .menu-item-has-children > a').toggle(function(e) {
    //   setTimeout(() => {
    //     e.preventDefault();
    //     e.stopPropagation();
    //     $(this).parent().toggleClass('active');
    //     $(this).parent().siblings().removeClass('active');
    //   }, 100)
    // }, function(e) {
    //   setTimeout(() => {
    //     e.preventDefault();
    //     e.stopPropagation();
    //     $(this).parent().toggleClass('active');
    //     $(this).parent().siblings().removeClass('active');
    //   }, 100)
    // });
    $("#menu-main-menu > .menu-item-has-children > a").on(
      "click",
      function (e) {
        //setTimeout(() => {
        e.preventDefault();
        e.stopPropagation();
        e.stopImmediatePropagation();
        $(this).parent().toggleClass("active");
        $(this).parent().siblings().removeClass("active");
        // }, 100)
      }
    );
  } else {
    $("#menu-main-menu .menu-item-has-children:not(.portalmenu) > a").off(
      "click"
    );
  }

  if ($(window).width() < 769) {
    $(".menu-blog-menu-container .blog-menu-toggle").toggle(
      function (e) {
        e.preventDefault();
        e.stopPropagation();
        $(this).parent().addClass("active");
        $("#custom-blog-menu").slideDown();
      },
      function (e) {
        e.preventDefault();
        e.stopPropagation();
        $(this).parent().removeClass("active");
        $("#custom-blog-menu").slideUp();
      }
    );
  } else {
    $(".menu-blog-menu-container .blog-menu-toggle").off("click");
  }

  if ($(window).width() < 769) {
    $("#custom-blog-menu .menu-item-has-children > a").one(
      "click",
      function (e) {
        e.preventDefault();
        e.stopImmediatePropagation();

        const parentItem = $(this).parent();

        if (parentItem.hasClass("active")) {
          $("#custom-blog-menu .menu-item-has-children .sub-menu").slideUp();
          $("#custom-blog-menu .menu-item-has-children").removeClass("active");
        } else {
          parentItem.addClass("active");
          parentItem.find(".sub-menu").slideDown();

          $("#custom-blog-menu .menu-item-has-children")
            .not(parentItem)
            .find(".sub-menu")
            .slideUp();
          $("#custom-blog-menu .menu-item-has-children")
            .not(parentItem)
            .removeClass("active");
        }
      }
    );
  } else {
    $("#custom-blog-menu .menu-item-has-children > a").off("click");
  }
}

function initPortalMenu() {
  if ($(window).width() > 1025) {
    $(".button-login > a").click(function (e) {
      e.preventDefault();
      e.stopPropagation();
      $(".button-login > .sub-menu").slideToggle();
      $(this).toggleClass("opened");
    });

    jQuery(document).on("click", function (evt) {
      if (!$(evt.target).is(".button-login > a")) {
        jQuery("#menu-main-menu .portalmenu ul").hide();
        $(".button-login > a").removeClass("opened");
      }
    });
  }
}

function initSearchOpen() {
  if ($(window).width() > 1025) {
    $(".open-search-button > a").click(function (e) {
      e.preventDefault();
      e.stopPropagation();
      $(".search-form-drop").slideToggle();
      $(this).toggleClass("opened");
    });
    jQuery(document).on("click", function (evt) {
      if (!$(evt.target).is(".search-form-drop .search-form .search-field")) {
        jQuery(".search-form-drop").hide();
        $(".open-search-button > a").removeClass("opened");
      }
    });
  }
  if ($(window).width() < 1025) {
    $(".open-search-button a").click(function (e) {
      e.preventDefault();
      e.stopPropagation();
      $(".search-form-drop").slideToggle();
      $("ul#menu-main-menu").slideUp();
      $(".menu-toggle a").removeClass('active');
      $("body").removeClass("main-menu-opened");
      $(this).toggleClass("opened");
    });
    jQuery(document).on("click", function (evt) {
      if (!$(evt.target).is(".search-form-drop .search-form .search-field")) {
        jQuery(".search-form-drop").hide();
        $(".open-search-button a").removeClass("opened");
      }
    });
  }
}

function dynamicTexts() {
  var index = 0;
  setInterval(function () {
    var words = $(".dynamic-words").find(".word");
    if (words.length - 1 == index) {
      index = 0;
    } else {
      index += 1;
    }
    words.removeClass("active");
    $(words[index]).addClass("active");
  }, 5000);
}
$(".parent-popup-youtube a").on('click', function(e){
  e.preventDefault();
});
function initLightbox() {
  $(".popup-youtube").magnificPopup({
    type: "iframe",
    mainClass: "mfp-fade",
    removalDelay: 160,
    preloader: false,
    // callbacks: {
    //   elementParse: function(item) {
    //     window.location.hash = item.src;
    //   }
    // },
    fixedContentPos: false,
  });


  $(".parent-popup-youtube").magnificPopup({
    delegate: 'a',
    type: "iframe",
    mainClass: "mfp-fade",
    removalDelay: 160,
    preloader: false,
    // callbacks: {
    //   elementParse: function(item) {
    //     window.location.hash = item.src;
    //   }
    // },
    fixedContentPos: false,
  });

  if ($("body").hasClass("page-scylla-users")) {
    var hash = window.location.hash;
    if (hash.length) {
      var el = $('*[data-name="' + hash + '"]');
      if (el.hasClass("popup-youtube")) {
        var href = el.attr("href");
        $.magnificPopup.open({
          items: {
            src: href,
          },
          type: "iframe",
        });
      }
    }
  }
}

function initSpeakersPopup() {
  if (jQuery("body").find(".speakers-list").length) {
    var url_hash = window.location.hash;
    if (url_hash.length > 0) {
      url_hash = url_hash.substring(1);
      var speaker = $(".speakers-list-item").filter(
        '[data-hash="' + url_hash + '"]'
      );
      if (speaker.length) {
        speaker.find(".speakers-popup").fadeIn("slow");
      }
    }
  }

  $(".speakers-list-item-img, .speakers-list-item h3").on("click", function () {
    var hash = $(this).parent().data("hash");
    window.location.hash = "#" + hash;
    $(this).parent().find(".speakers-popup").fadeIn("slow");
  });

  $(".speakers-popup-close").on("click", function () {
    var hash = $(this).parent().data("hash");
    // window.location.hash = ''
    // history.replaceState("", "", window.location.pathname);
    $(this).parent().find(".speakers-popup").fadeIn("slow");
  });

  $(".speakers-popup-close").on("click", function () {
    $(this).parents(".speakers-popup").fadeOut("slow");
  });

  $(".speakers-popup").on("click", function () {
    var hash = $(this).parent().data("hash");
    // window.location.hash = '';
    // history.replaceState("", "", window.location.pathname);
    $(this).fadeOut("slow");
  });

  $(".speakers-popup-content").click(function (event) {
    event.stopPropagation();
  });
}

/*! Magnific Popup - v1.1.0 - 2016-02-20
 * http://dimsemenov.com/plugins/magnific-popup/
 * Copyright (c) 2016 Dmitry Semenov; */
!(function (a) {
  "function" == typeof define && define.amd
    ? define(["jquery"], a)
    : a(
        "object" == typeof exports
          ? require("jquery")
          : window.jQuery || window.Zepto
      );
})(function (a) {
  var b,
    c,
    d,
    e,
    f,
    g,
    h = "Close",
    i = "BeforeClose",
    j = "AfterClose",
    k = "BeforeAppend",
    l = "MarkupParse",
    m = "Open",
    n = "Change",
    o = "mfp",
    p = "." + o,
    q = "mfp-ready",
    r = "mfp-removing",
    s = "mfp-prevent-close",
    t = function () {},
    u = !!window.jQuery,
    v = a(window),
    w = function (a, c) {
      b.ev.on(o + a + p, c);
    },
    x = function (b, c, d, e) {
      var f = document.createElement("div");
      return (
        (f.className = "mfp-" + b),
        d && (f.innerHTML = d),
        e ? c && c.appendChild(f) : ((f = a(f)), c && f.appendTo(c)),
        f
      );
    },
    y = function (c, d) {
      b.ev.triggerHandler(o + c, d),
        b.st.callbacks &&
          ((c = c.charAt(0).toLowerCase() + c.slice(1)),
          b.st.callbacks[c] &&
            b.st.callbacks[c].apply(b, a.isArray(d) ? d : [d]));
    },
    z = function (c) {
      return (
        (c === g && b.currTemplate.closeBtn) ||
          ((b.currTemplate.closeBtn = a(
            b.st.closeMarkup.replace("%title%", b.st.tClose)
          )),
          (g = c)),
        b.currTemplate.closeBtn
      );
    },
    A = function () {
      a.magnificPopup.instance ||
        ((b = new t()), b.init(), (a.magnificPopup.instance = b));
    },
    B = function () {
      var a = document.createElement("p").style,
        b = ["ms", "O", "Moz", "Webkit"];
      if (void 0 !== a.transition) return !0;
      for (; b.length; ) if (b.pop() + "Transition" in a) return !0;
      return !1;
    };
  (t.prototype = {
    constructor: t,
    init: function () {
      var c = navigator.appVersion;
      (b.isLowIE = b.isIE8 = document.all && !document.addEventListener),
        (b.isAndroid = /android/gi.test(c)),
        (b.isIOS = /iphone|ipad|ipod/gi.test(c)),
        (b.supportsTransition = B()),
        (b.probablyMobile =
          b.isAndroid ||
          b.isIOS ||
          /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(
            navigator.userAgent
          )),
        (d = a(document)),
        (b.popupsCache = {});
    },
    open: function (c) {
      var e;
      if (c.isObj === !1) {
        (b.items = c.items.toArray()), (b.index = 0);
        var g,
          h = c.items;
        for (e = 0; e < h.length; e++)
          if (((g = h[e]), g.parsed && (g = g.el[0]), g === c.el[0])) {
            b.index = e;
            break;
          }
      } else
        (b.items = a.isArray(c.items) ? c.items : [c.items]),
          (b.index = c.index || 0);
      if (b.isOpen) return void b.updateItemHTML();
      (b.types = []),
        (f = ""),
        c.mainEl && c.mainEl.length ? (b.ev = c.mainEl.eq(0)) : (b.ev = d),
        c.key
          ? (b.popupsCache[c.key] || (b.popupsCache[c.key] = {}),
            (b.currTemplate = b.popupsCache[c.key]))
          : (b.currTemplate = {}),
        (b.st = a.extend(!0, {}, a.magnificPopup.defaults, c)),
        (b.fixedContentPos =
          "auto" === b.st.fixedContentPos
            ? !b.probablyMobile
            : b.st.fixedContentPos),
        b.st.modal &&
          ((b.st.closeOnContentClick = !1),
          (b.st.closeOnBgClick = !1),
          (b.st.showCloseBtn = !1),
          (b.st.enableEscapeKey = !1)),
        b.bgOverlay ||
          ((b.bgOverlay = x("bg").on("click" + p, function () {
            b.close();
          })),
          (b.wrap = x("wrap")
            .attr("tabindex", -1)
            .on("click" + p, function (a) {
              b._checkIfClose(a.target) && b.close();
            })),
          (b.container = x("container", b.wrap))),
        (b.contentContainer = x("content")),
        b.st.preloader &&
          (b.preloader = x("preloader", b.container, b.st.tLoading));
      var i = a.magnificPopup.modules;
      for (e = 0; e < i.length; e++) {
        var j = i[e];
        (j = j.charAt(0).toUpperCase() + j.slice(1)), b["init" + j].call(b);
      }
      y("BeforeOpen"),
        b.st.showCloseBtn &&
          (b.st.closeBtnInside
            ? (w(l, function (a, b, c, d) {
                c.close_replaceWith = z(d.type);
              }),
              (f += " mfp-close-btn-in"))
            : b.wrap.append(z())),
        b.st.alignTop && (f += " mfp-align-top"),
        b.fixedContentPos
          ? b.wrap.css({
              overflow: b.st.overflowY,
              overflowX: "hidden",
              overflowY: b.st.overflowY,
            })
          : b.wrap.css({ top: v.scrollTop(), position: "absolute" }),
        (b.st.fixedBgPos === !1 ||
          ("auto" === b.st.fixedBgPos && !b.fixedContentPos)) &&
          b.bgOverlay.css({ height: d.height(), position: "absolute" }),
        b.st.enableEscapeKey &&
          d.on("keyup" + p, function (a) {
            27 === a.keyCode && b.close();
          }),
        v.on("resize" + p, function () {
          b.updateSize();
        }),
        b.st.closeOnContentClick || (f += " mfp-auto-cursor"),
        f && b.wrap.addClass(f);
      var k = (b.wH = v.height()),
        n = {};
      if (b.fixedContentPos && b._hasScrollBar(k)) {
        var o = b._getScrollbarSize();
        o && (n.marginRight = o);
      }
      b.fixedContentPos &&
        (b.isIE7
          ? a("body, html").css("overflow", "hidden")
          : (n.overflow = "hidden"));
      var r = b.st.mainClass;
      return (
        b.isIE7 && (r += " mfp-ie7"),
        r && b._addClassToMFP(r),
        b.updateItemHTML(),
        y("BuildControls"),
        a("html").css(n),
        b.bgOverlay.add(b.wrap).prependTo(b.st.prependTo || a(document.body)),
        (b._lastFocusedEl = document.activeElement),
        setTimeout(function () {
          b.content
            ? (b._addClassToMFP(q), b._setFocus())
            : b.bgOverlay.addClass(q),
            d.on("focusin" + p, b._onFocusIn);
        }, 16),
        (b.isOpen = !0),
        b.updateSize(k),
        y(m),
        c
      );
    },
    close: function () {
      b.isOpen &&
        (y(i),
        (b.isOpen = !1),
        b.st.removalDelay && !b.isLowIE && b.supportsTransition
          ? (b._addClassToMFP(r),
            setTimeout(function () {
              b._close();
            }, b.st.removalDelay))
          : b._close());
    },
    _close: function () {
      y(h);
      var c = r + " " + q + " ";
      if (
        (b.bgOverlay.detach(),
        b.wrap.detach(),
        b.container.empty(),
        b.st.mainClass && (c += b.st.mainClass + " "),
        b._removeClassFromMFP(c),
        b.fixedContentPos)
      ) {
        var e = { marginRight: "" };
        b.isIE7 ? a("body, html").css("overflow", "") : (e.overflow = ""),
          a("html").css(e);
      }
      d.off("keyup" + p + " focusin" + p),
        b.ev.off(p),
        b.wrap.attr("class", "mfp-wrap").removeAttr("style"),
        b.bgOverlay.attr("class", "mfp-bg"),
        b.container.attr("class", "mfp-container"),
        !b.st.showCloseBtn ||
          (b.st.closeBtnInside && b.currTemplate[b.currItem.type] !== !0) ||
          (b.currTemplate.closeBtn && b.currTemplate.closeBtn.detach()),
        b.st.autoFocusLast && b._lastFocusedEl && a(b._lastFocusedEl).focus(),
        (b.currItem = null),
        (b.content = null),
        (b.currTemplate = null),
        (b.prevHeight = 0),
        y(j);
    },
    updateSize: function (a) {
      if (b.isIOS) {
        var c = document.documentElement.clientWidth / window.innerWidth,
          d = window.innerHeight * c;
        b.wrap.css("height", d), (b.wH = d);
      } else b.wH = a || v.height();
      b.fixedContentPos || b.wrap.css("height", b.wH), y("Resize");
    },
    updateItemHTML: function () {
      var c = b.items[b.index];
      b.contentContainer.detach(),
        b.content && b.content.detach(),
        c.parsed || (c = b.parseEl(b.index));
      var d = c.type;
      if (
        (y("BeforeChange", [b.currItem ? b.currItem.type : "", d]),
        (b.currItem = c),
        !b.currTemplate[d])
      ) {
        var f = b.st[d] ? b.st[d].markup : !1;
        y("FirstMarkupParse", f),
          f ? (b.currTemplate[d] = a(f)) : (b.currTemplate[d] = !0);
      }
      e && e !== c.type && b.container.removeClass("mfp-" + e + "-holder");
      var g = b["get" + d.charAt(0).toUpperCase() + d.slice(1)](
        c,
        b.currTemplate[d]
      );
      b.appendContent(g, d),
        (c.preloaded = !0),
        y(n, c),
        (e = c.type),
        b.container.prepend(b.contentContainer),
        y("AfterChange");
    },
    appendContent: function (a, c) {
      (b.content = a),
        a
          ? b.st.showCloseBtn && b.st.closeBtnInside && b.currTemplate[c] === !0
            ? b.content.find(".mfp-close").length || b.content.append(z())
            : (b.content = a)
          : (b.content = ""),
        y(k),
        b.container.addClass("mfp-" + c + "-holder"),
        b.contentContainer.append(b.content);
    },
    parseEl: function (c) {
      var d,
        e = b.items[c];
      if (
        (e.tagName
          ? (e = { el: a(e) })
          : ((d = e.type), (e = { data: e, src: e.src })),
        e.el)
      ) {
        for (var f = b.types, g = 0; g < f.length; g++)
          if (e.el.hasClass("mfp-" + f[g])) {
            d = f[g];
            break;
          }
        (e.src = e.el.attr("data-mfp-src")),
          e.src || (e.src = e.el.attr("href"));
      }
      return (
        (e.type = d || b.st.type || "inline"),
        (e.index = c),
        (e.parsed = !0),
        (b.items[c] = e),
        y("ElementParse", e),
        b.items[c]
      );
    },
    addGroup: function (a, c) {
      var d = function (d) {
        (d.mfpEl = this), b._openClick(d, a, c);
      };
      c || (c = {});
      var e = "click.magnificPopup";
      (c.mainEl = a),
        c.items
          ? ((c.isObj = !0), a.off(e).on(e, d))
          : ((c.isObj = !1),
            c.delegate
              ? a.off(e).on(e, c.delegate, d)
              : ((c.items = a), a.off(e).on(e, d)));
    },
    _openClick: function (c, d, e) {
      var f =
        void 0 !== e.midClick ? e.midClick : a.magnificPopup.defaults.midClick;
      if (
        f ||
        !(2 === c.which || c.ctrlKey || c.metaKey || c.altKey || c.shiftKey)
      ) {
        var g =
          void 0 !== e.disableOn
            ? e.disableOn
            : a.magnificPopup.defaults.disableOn;
        if (g)
          if (a.isFunction(g)) {
            if (!g.call(b)) return !0;
          } else if (v.width() < g) return !0;
        c.type && (c.preventDefault(), b.isOpen && c.stopPropagation()),
          (e.el = a(c.mfpEl)),
          e.delegate && (e.items = d.find(e.delegate)),
          b.open(e);
      }
    },
    updateStatus: function (a, d) {
      if (b.preloader) {
        c !== a && b.container.removeClass("mfp-s-" + c),
          d || "loading" !== a || (d = b.st.tLoading);
        var e = { status: a, text: d };
        y("UpdateStatus", e),
          (a = e.status),
          (d = e.text),
          b.preloader.html(d),
          b.preloader.find("a").on("click", function (a) {
            a.stopImmediatePropagation();
          }),
          b.container.addClass("mfp-s-" + a),
          (c = a);
      }
    },
    _checkIfClose: function (c) {
      if (!a(c).hasClass(s)) {
        var d = b.st.closeOnContentClick,
          e = b.st.closeOnBgClick;
        if (d && e) return !0;
        if (
          !b.content ||
          a(c).hasClass("mfp-close") ||
          (b.preloader && c === b.preloader[0])
        )
          return !0;
        if (c === b.content[0] || a.contains(b.content[0], c)) {
          if (d) return !0;
        } else if (e && a.contains(document, c)) return !0;
        return !1;
      }
    },
    _addClassToMFP: function (a) {
      b.bgOverlay.addClass(a), b.wrap.addClass(a);
    },
    _removeClassFromMFP: function (a) {
      this.bgOverlay.removeClass(a), b.wrap.removeClass(a);
    },
    _hasScrollBar: function (a) {
      return (
        (b.isIE7 ? d.height() : document.body.scrollHeight) > (a || v.height())
      );
    },
    _setFocus: function () {
      (b.st.focus ? b.content.find(b.st.focus).eq(0) : b.wrap).focus();
    },
    _onFocusIn: function (c) {
      return c.target === b.wrap[0] || a.contains(b.wrap[0], c.target)
        ? void 0
        : (b._setFocus(), !1);
    },
    _parseMarkup: function (b, c, d) {
      var e;
      d.data && (c = a.extend(d.data, c)),
        y(l, [b, c, d]),
        a.each(c, function (c, d) {
          if (void 0 === d || d === !1) return !0;
          if (((e = c.split("_")), e.length > 1)) {
            var f = b.find(p + "-" + e[0]);
            if (f.length > 0) {
              var g = e[1];
              "replaceWith" === g
                ? f[0] !== d[0] && f.replaceWith(d)
                : "img" === g
                ? f.is("img")
                  ? f.attr("src", d)
                  : f.replaceWith(
                      a("<img>").attr("src", d).attr("class", f.attr("class"))
                    )
                : f.attr(e[1], d);
            }
          } else b.find(p + "-" + c).html(d);
        });
    },
    _getScrollbarSize: function () {
      if (void 0 === b.scrollbarSize) {
        var a = document.createElement("div");
        (a.style.cssText =
          "width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;"),
          document.body.appendChild(a),
          (b.scrollbarSize = a.offsetWidth - a.clientWidth),
          document.body.removeChild(a);
      }
      return b.scrollbarSize;
    },
  }),
    (a.magnificPopup = {
      instance: null,
      proto: t.prototype,
      modules: [],
      open: function (b, c) {
        return (
          A(),
          (b = b ? a.extend(!0, {}, b) : {}),
          (b.isObj = !0),
          (b.index = c || 0),
          this.instance.open(b)
        );
      },
      close: function () {
        return a.magnificPopup.instance && a.magnificPopup.instance.close();
      },
      registerModule: function (b, c) {
        c.options && (a.magnificPopup.defaults[b] = c.options),
          a.extend(this.proto, c.proto),
          this.modules.push(b);
      },
      defaults: {
        disableOn: 0,
        key: null,
        midClick: !1,
        mainClass: "",
        preloader: !0,
        focus: "",
        closeOnContentClick: !1,
        closeOnBgClick: !0,
        closeBtnInside: !0,
        showCloseBtn: !0,
        enableEscapeKey: !0,
        modal: !1,
        alignTop: !1,
        removalDelay: 0,
        prependTo: null,
        fixedContentPos: "auto",
        fixedBgPos: "auto",
        overflowY: "auto",
        closeMarkup:
          '<button title="%title%" type="button" class="mfp-close">&#215;</button>',
        tClose: "Close (Esc)",
        tLoading: "Loading...",
        autoFocusLast: !0,
      },
    }),
    (a.fn.magnificPopup = function (c) {
      A();
      var d = a(this);
      if ("string" == typeof c)
        if ("open" === c) {
          var e,
            f = u ? d.data("magnificPopup") : d[0].magnificPopup,
            g = parseInt(arguments[1], 10) || 0;
          f.items
            ? (e = f.items[g])
            : ((e = d), f.delegate && (e = e.find(f.delegate)), (e = e.eq(g))),
            b._openClick({ mfpEl: e }, d, f);
        } else
          b.isOpen && b[c].apply(b, Array.prototype.slice.call(arguments, 1));
      else
        (c = a.extend(!0, {}, c)),
          u ? d.data("magnificPopup", c) : (d[0].magnificPopup = c),
          b.addGroup(d, c);
      return d;
    });
  var C,
    D,
    E,
    F = "inline",
    G = function () {
      E && (D.after(E.addClass(C)).detach(), (E = null));
    };
  a.magnificPopup.registerModule(F, {
    options: {
      hiddenClass: "hide",
      markup: "",
      tNotFound: "Content not found",
    },
    proto: {
      initInline: function () {
        b.types.push(F),
          w(h + "." + F, function () {
            G();
          });
      },
      getInline: function (c, d) {
        if ((G(), c.src)) {
          var e = b.st.inline,
            f = a(c.src);
          if (f.length) {
            var g = f[0].parentNode;
            g &&
              g.tagName &&
              (D || ((C = e.hiddenClass), (D = x(C)), (C = "mfp-" + C)),
              (E = f.after(D).detach().removeClass(C))),
              b.updateStatus("ready");
          } else b.updateStatus("error", e.tNotFound), (f = a("<div>"));
          return (c.inlineElement = f), f;
        }
        return b.updateStatus("ready"), b._parseMarkup(d, {}, c), d;
      },
    },
  });
  var H,
    I = "ajax",
    J = function () {
      H && a(document.body).removeClass(H);
    },
    K = function () {
      J(), b.req && b.req.abort();
    };
  a.magnificPopup.registerModule(I, {
    options: {
      settings: null,
      cursor: "mfp-ajax-cur",
      tError: '<a href="%url%">The content</a> could not be loaded.',
    },
    proto: {
      initAjax: function () {
        b.types.push(I),
          (H = b.st.ajax.cursor),
          w(h + "." + I, K),
          w("BeforeChange." + I, K);
      },
      getAjax: function (c) {
        H && a(document.body).addClass(H), b.updateStatus("loading");
        var d = a.extend(
          {
            url: c.src,
            success: function (d, e, f) {
              var g = { data: d, xhr: f };
              y("ParseAjax", g),
                b.appendContent(a(g.data), I),
                (c.finished = !0),
                J(),
                b._setFocus(),
                setTimeout(function () {
                  b.wrap.addClass(q);
                }, 16),
                b.updateStatus("ready"),
                y("AjaxContentAdded");
            },
            error: function () {
              J(),
                (c.finished = c.loadError = !0),
                b.updateStatus(
                  "error",
                  b.st.ajax.tError.replace("%url%", c.src)
                );
            },
          },
          b.st.ajax.settings
        );
        return (b.req = a.ajax(d)), "";
      },
    },
  });
  var L,
    M = function (c) {
      if (c.data && void 0 !== c.data.title) return c.data.title;
      var d = b.st.image.titleSrc;
      if (d) {
        if (a.isFunction(d)) return d.call(b, c);
        if (c.el) return c.el.attr(d) || "";
      }
      return "";
    };
  a.magnificPopup.registerModule("image", {
    options: {
      markup:
        '<div class="mfp-figure"><div class="mfp-close"></div><figure><div class="mfp-img"></div><figcaption><div class="mfp-bottom-bar"><div class="mfp-title"></div><div class="mfp-counter"></div></div></figcaption></figure></div>',
      cursor: "mfp-zoom-out-cur",
      titleSrc: "title",
      verticalFit: !0,
      tError: '<a href="%url%">The image</a> could not be loaded.',
    },
    proto: {
      initImage: function () {
        var c = b.st.image,
          d = ".image";
        b.types.push("image"),
          w(m + d, function () {
            "image" === b.currItem.type &&
              c.cursor &&
              a(document.body).addClass(c.cursor);
          }),
          w(h + d, function () {
            c.cursor && a(document.body).removeClass(c.cursor),
              v.off("resize" + p);
          }),
          w("Resize" + d, b.resizeImage),
          b.isLowIE && w("AfterChange", b.resizeImage);
      },
      resizeImage: function () {
        var a = b.currItem;
        if (a && a.img && b.st.image.verticalFit) {
          var c = 0;
          b.isLowIE &&
            (c =
              parseInt(a.img.css("padding-top"), 10) +
              parseInt(a.img.css("padding-bottom"), 10)),
            a.img.css("max-height", b.wH - c);
        }
      },
      _onImageHasSize: function (a) {
        a.img &&
          ((a.hasSize = !0),
          L && clearInterval(L),
          (a.isCheckingImgSize = !1),
          y("ImageHasSize", a),
          a.imgHidden &&
            (b.content && b.content.removeClass("mfp-loading"),
            (a.imgHidden = !1)));
      },
      findImageSize: function (a) {
        var c = 0,
          d = a.img[0],
          e = function (f) {
            L && clearInterval(L),
              (L = setInterval(function () {
                return d.naturalWidth > 0
                  ? void b._onImageHasSize(a)
                  : (c > 200 && clearInterval(L),
                    c++,
                    void (3 === c
                      ? e(10)
                      : 40 === c
                      ? e(50)
                      : 100 === c && e(500)));
              }, f));
          };
        e(1);
      },
      getImage: function (c, d) {
        var e = 0,
          f = function () {
            c &&
              (c.img[0].complete
                ? (c.img.off(".mfploader"),
                  c === b.currItem &&
                    (b._onImageHasSize(c), b.updateStatus("ready")),
                  (c.hasSize = !0),
                  (c.loaded = !0),
                  y("ImageLoadComplete"))
                : (e++, 200 > e ? setTimeout(f, 100) : g()));
          },
          g = function () {
            c &&
              (c.img.off(".mfploader"),
              c === b.currItem &&
                (b._onImageHasSize(c),
                b.updateStatus("error", h.tError.replace("%url%", c.src))),
              (c.hasSize = !0),
              (c.loaded = !0),
              (c.loadError = !0));
          },
          h = b.st.image,
          i = d.find(".mfp-img");
        if (i.length) {
          var j = document.createElement("img");
          (j.className = "mfp-img"),
            c.el &&
              c.el.find("img").length &&
              (j.alt = c.el.find("img").attr("alt")),
            (c.img = a(j).on("load.mfploader", f).on("error.mfploader", g)),
            (j.src = c.src),
            i.is("img") && (c.img = c.img.clone()),
            (j = c.img[0]),
            j.naturalWidth > 0 ? (c.hasSize = !0) : j.width || (c.hasSize = !1);
        }
        return (
          b._parseMarkup(d, { title: M(c), img_replaceWith: c.img }, c),
          b.resizeImage(),
          c.hasSize
            ? (L && clearInterval(L),
              c.loadError
                ? (d.addClass("mfp-loading"),
                  b.updateStatus("error", h.tError.replace("%url%", c.src)))
                : (d.removeClass("mfp-loading"), b.updateStatus("ready")),
              d)
            : (b.updateStatus("loading"),
              (c.loading = !0),
              c.hasSize ||
                ((c.imgHidden = !0),
                d.addClass("mfp-loading"),
                b.findImageSize(c)),
              d)
        );
      },
    },
  });
  var N,
    O = function () {
      return (
        void 0 === N &&
          (N = void 0 !== document.createElement("p").style.MozTransform),
        N
      );
    };
  a.magnificPopup.registerModule("zoom", {
    options: {
      enabled: !1,
      easing: "ease-in-out",
      duration: 300,
      opener: function (a) {
        return a.is("img") ? a : a.find("img");
      },
    },
    proto: {
      initZoom: function () {
        var a,
          c = b.st.zoom,
          d = ".zoom";
        if (c.enabled && b.supportsTransition) {
          var e,
            f,
            g = c.duration,
            j = function (a) {
              var b = a
                  .clone()
                  .removeAttr("style")
                  .removeAttr("class")
                  .addClass("mfp-animated-image"),
                d = "all " + c.duration / 1e3 + "s " + c.easing,
                e = {
                  position: "fixed",
                  zIndex: 9999,
                  left: 0,
                  top: 0,
                  "-webkit-backface-visibility": "hidden",
                },
                f = "transition";
              return (
                (e["-webkit-" + f] = e["-moz-" + f] = e["-o-" + f] = e[f] = d),
                b.css(e),
                b
              );
            },
            k = function () {
              b.content.css("visibility", "visible");
            };
          w("BuildControls" + d, function () {
            if (b._allowZoom()) {
              if (
                (clearTimeout(e),
                b.content.css("visibility", "hidden"),
                (a = b._getItemToZoom()),
                !a)
              )
                return void k();
              (f = j(a)),
                f.css(b._getOffset()),
                b.wrap.append(f),
                (e = setTimeout(function () {
                  f.css(b._getOffset(!0)),
                    (e = setTimeout(function () {
                      k(),
                        setTimeout(function () {
                          f.remove(), (a = f = null), y("ZoomAnimationEnded");
                        }, 16);
                    }, g));
                }, 16));
            }
          }),
            w(i + d, function () {
              if (b._allowZoom()) {
                if ((clearTimeout(e), (b.st.removalDelay = g), !a)) {
                  if (((a = b._getItemToZoom()), !a)) return;
                  f = j(a);
                }
                f.css(b._getOffset(!0)),
                  b.wrap.append(f),
                  b.content.css("visibility", "hidden"),
                  setTimeout(function () {
                    f.css(b._getOffset());
                  }, 16);
              }
            }),
            w(h + d, function () {
              b._allowZoom() && (k(), f && f.remove(), (a = null));
            });
        }
      },
      _allowZoom: function () {
        return "image" === b.currItem.type;
      },
      _getItemToZoom: function () {
        return b.currItem.hasSize ? b.currItem.img : !1;
      },
      _getOffset: function (c) {
        var d;
        d = c ? b.currItem.img : b.st.zoom.opener(b.currItem.el || b.currItem);
        var e = d.offset(),
          f = parseInt(d.css("padding-top"), 10),
          g = parseInt(d.css("padding-bottom"), 10);
        e.top -= a(window).scrollTop() - f;
        var h = {
          width: d.width(),
          height: (u ? d.innerHeight() : d[0].offsetHeight) - g - f,
        };
        return (
          O()
            ? (h["-moz-transform"] = h.transform =
                "translate(" + e.left + "px," + e.top + "px)")
            : ((h.left = e.left), (h.top = e.top)),
          h
        );
      },
    },
  });
  var P = "iframe",
    Q = "//about:blank",
    R = function (a) {
      if (b.currTemplate[P]) {
        var c = b.currTemplate[P].find("iframe");
        c.length &&
          (a || (c[0].src = Q),
          b.isIE8 && c.css("display", a ? "block" : "none"));
      }
    };
  a.magnificPopup.registerModule(P, {
    options: {
      markup:
        '<div class="mfp-iframe-scaler"><div class="mfp-close"></div><iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe></div>',
      srcAction: "iframe_src",
      patterns: {
        youtube: {
          index: "youtube.com",
          id: "v=",
          src: "//www.youtube.com/embed/%id%?autoplay=1",
        },
        vimeo: {
          index: "vimeo.com/",
          id: "/",
          src: "//player.vimeo.com/video/%id%?autoplay=1",
        },
        gmaps: { index: "//maps.google.", src: "%id%&output=embed" },
      },
    },
    proto: {
      initIframe: function () {
        b.types.push(P),
          w("BeforeChange", function (a, b, c) {
            b !== c && (b === P ? R() : c === P && R(!0));
          }),
          w(h + "." + P, function () {
            R();
          });
      },
      getIframe: function (c, d) {
        var e = c.src,
          f = b.st.iframe;
        a.each(f.patterns, function () {
          return e.indexOf(this.index) > -1
            ? (this.id &&
                (e =
                  "string" == typeof this.id
                    ? e.substr(
                        e.lastIndexOf(this.id) + this.id.length,
                        e.length
                      )
                    : this.id.call(this, e)),
              (e = this.src.replace("%id%", e)),
              !1)
            : void 0;
        });
        var g = {};
        return (
          f.srcAction && (g[f.srcAction] = e),
          b._parseMarkup(d, g, c),
          b.updateStatus("ready"),
          d
        );
      },
    },
  });
  var S = function (a) {
      var c = b.items.length;
      return a > c - 1 ? a - c : 0 > a ? c + a : a;
    },
    T = function (a, b, c) {
      return a.replace(/%curr%/gi, b + 1).replace(/%total%/gi, c);
    };
  a.magnificPopup.registerModule("gallery", {
    options: {
      enabled: !1,
      arrowMarkup:
        '<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"></button>',
      preload: [0, 2],
      navigateByImgClick: !0,
      arrows: !0,
      tPrev: "Previous (Left arrow key)",
      tNext: "Next (Right arrow key)",
      tCounter: "%curr% of %total%",
    },
    proto: {
      initGallery: function () {
        var c = b.st.gallery,
          e = ".mfp-gallery";
        return (
          (b.direction = !0),
          c && c.enabled
            ? ((f += " mfp-gallery"),
              w(m + e, function () {
                c.navigateByImgClick &&
                  b.wrap.on("click" + e, ".mfp-img", function () {
                    return b.items.length > 1 ? (b.next(), !1) : void 0;
                  }),
                  d.on("keydown" + e, function (a) {
                    37 === a.keyCode ? b.prev() : 39 === a.keyCode && b.next();
                  });
              }),
              w("UpdateStatus" + e, function (a, c) {
                c.text &&
                  (c.text = T(c.text, b.currItem.index, b.items.length));
              }),
              w(l + e, function (a, d, e, f) {
                var g = b.items.length;
                e.counter = g > 1 ? T(c.tCounter, f.index, g) : "";
              }),
              w("BuildControls" + e, function () {
                if (b.items.length > 1 && c.arrows && !b.arrowLeft) {
                  var d = c.arrowMarkup,
                    e = (b.arrowLeft = a(
                      d.replace(/%title%/gi, c.tPrev).replace(/%dir%/gi, "left")
                    ).addClass(s)),
                    f = (b.arrowRight = a(
                      d
                        .replace(/%title%/gi, c.tNext)
                        .replace(/%dir%/gi, "right")
                    ).addClass(s));
                  e.click(function () {
                    b.prev();
                  }),
                    f.click(function () {
                      b.next();
                    }),
                    b.container.append(e.add(f));
                }
              }),
              w(n + e, function () {
                b._preloadTimeout && clearTimeout(b._preloadTimeout),
                  (b._preloadTimeout = setTimeout(function () {
                    b.preloadNearbyImages(), (b._preloadTimeout = null);
                  }, 16));
              }),
              void w(h + e, function () {
                d.off(e),
                  b.wrap.off("click" + e),
                  (b.arrowRight = b.arrowLeft = null);
              }))
            : !1
        );
      },
      next: function () {
        (b.direction = !0), (b.index = S(b.index + 1)), b.updateItemHTML();
      },
      prev: function () {
        (b.direction = !1), (b.index = S(b.index - 1)), b.updateItemHTML();
      },
      goTo: function (a) {
        (b.direction = a >= b.index), (b.index = a), b.updateItemHTML();
      },
      preloadNearbyImages: function () {
        var a,
          c = b.st.gallery.preload,
          d = Math.min(c[0], b.items.length),
          e = Math.min(c[1], b.items.length);
        for (a = 1; a <= (b.direction ? e : d); a++)
          b._preloadItem(b.index + a);
        for (a = 1; a <= (b.direction ? d : e); a++)
          b._preloadItem(b.index - a);
      },
      _preloadItem: function (c) {
        if (((c = S(c)), !b.items[c].preloaded)) {
          var d = b.items[c];
          d.parsed || (d = b.parseEl(c)),
            y("LazyLoad", d),
            "image" === d.type &&
              (d.img = a('<img class="mfp-img" />')
                .on("load.mfploader", function () {
                  d.hasSize = !0;
                })
                .on("error.mfploader", function () {
                  (d.hasSize = !0), (d.loadError = !0), y("LazyLoadError", d);
                })
                .attr("src", d.src)),
            (d.preloaded = !0);
        }
      },
    },
  });
  var U = "retina";
  a.magnificPopup.registerModule(U, {
    options: {
      replaceSrc: function (a) {
        return a.src.replace(/\.\w+$/, function (a) {
          return "@2x" + a;
        });
      },
      ratio: 1,
    },
    proto: {
      initRetina: function () {
        if (window.devicePixelRatio > 1) {
          var a = b.st.retina,
            c = a.ratio;
          (c = isNaN(c) ? c() : c),
            c > 1 &&
              (w("ImageHasSize." + U, function (a, b) {
                b.img.css({
                  "max-width": b.img[0].naturalWidth / c,
                  width: "100%",
                });
              }),
              w("ElementParse." + U, function (b, d) {
                d.src = a.replaceSrc(d, c);
              }));
        }
      },
    },
  }),
    A();
});

jQuery(document).on("ready", function () {
  function showIFrameError() {
    var iFrameContents = (document.getElementById(
      "register-iframe-error"
    ).style.display = "block");
    jQuery("#myiframe").hide();
    jQuery("#summit-pres-signup-iframe").hide();
    jQuery("#contact-iframe").hide();
    jQuery("#rust-iframe").hide();
    jQuery("#pardot_form").hide();
    jQuery("#pricing-iframe").hide();
    jQuery("#consult-iframe").hide();
  }

  var iFrameLoaded = false;

  // If presentation signup form is present, handle the iframe form events
  if (jQuery("#summit-pres-signup-iframe").length) {
    window.addEventListener("message", function (event) {
      if (event.origin === "https://lp.scylladb.com" && event.data) {
        if (event.data === "loaded") {
          iFrameLoaded = true;
        } else {
          document.cookie =
            "2025_monster_scale_registration_cookie=true; max-age=31536000; path=/; SameSite=None; Secure";

          $("body").addClass("registered-scylla-summit-2025");
        }
      }
    });

    function onPresRegisterIFrameLoad() {
      if (!iFrameLoaded) {
        showIFrameError();
      }
    }

    setTimeout(onPresRegisterIFrameLoad, 5000);
  }

  // Handle for summit signup popup form
  jQuery(document).on("elementor/popup/show", (event, id, instance) => {
    if (jQuery("#myiframe").length) {
      function showIFrameError() {
        var iFrameContents = (document.getElementById(
          "register-iframe-error"
        ).style.display = "block");
        var hideIFrame = (document.getElementById("myiframe").style.display =
          "none");
      }

      window.addEventListener("message", function (event) {
        if (event.origin === "https://lp.scylladb.com" && event.data) {
          iFrameLoaded = true;
        }
      });

      function onRegisterIFrameLoad() {
        if (!iFrameLoaded) {
          showIFrameError();
        }
      }

      window.addEventListener("message", function (event) {
        if (event.origin === "https://lp.scylladb.com" && event.data) {
          scyllaRegLoaded = true;
        }
      });

      function onRegisterIFrameLoad() {
        if (!scyllaRegLoaded) {
          showIFrameError();
        }
      }

      setTimeout(onRegisterIFrameLoad, 5000);
    }

    // rust form handler
    if (jQuery("#rust-iframe").length) {
      window.addEventListener("message", function (event) {
        if (event.origin === "https://lp.scylladb.com" && event.data) {
          iFrameLoaded = true;
        }
      });

      function onRegisterIFrameLoad() {
        if (!iFrameLoaded) {
          var iFrameContents = (document.getElementById(
            "register-iframe-error"
          ).style.display = "block");
          jQuery("#rust-iframe").hide();
        }
      }

      setTimeout(onRegisterIFrameLoad, 5000);
    }

    // 2025 Registration
    if (jQuery("#register-2025").length) {
      function showIFrameError() {
        var iFrameContents = (document.getElementById(
          "register-iframe-error"
        ).style.display = "block");
        var hideIFrame = (document.getElementById(
          "register-2025"
        ).style.display = "none");
      }

      if ($("#register-iframe-error").length) {
        var queryString = window.location.search,
          $link = $("#register-iframe-error a");

        if (queryString.includes("utm_")) {
          href = $link.attr("href");

          $link.attr("href", href + queryString);
        }
      }

      window.addEventListener("message", function (event) {
        if (event.origin === "https://lp.scylladb.com" && event.data) {
          iFrameLoaded = true;

          if ( Number.isInteger( event.data ) ) {
            jQuery("#register-2025").css( 'height', event.data )
          }
        }
      });

      function onRegisterIFrameLoad() {
        if (!iFrameLoaded) {
          showIFrameError();
        }
      }

      setTimeout(onRegisterIFrameLoad, 3000);
    }
  });

  // contact form handler
  if (jQuery("#contact-iframe").length) {
    window.addEventListener("message", function (event) {
      if (event.origin === "https://lp.scylladb.com" && event.data) {
        iFrameLoaded = true;
      }
    });

    function onContactIFrameLoad() {
      if (!iFrameLoaded) {
        showIFrameError();
      }
    }

    setTimeout(onContactIFrameLoad, 5000);
  }

  // contact form handler
  if (jQuery("#pricing-iframe").length) {
    window.addEventListener("message", function (event) {
      if (event.origin === "https://lp.scylladb.com" && event.data) {
        iFrameLoaded = true;
      }
    });

    function onPricingIFrameLoad() {
      if (!iFrameLoaded) {
        showIFrameError();
      }
    }

    setTimeout(onPricingIFrameLoad, 7000);
  }

  // contact form handler
  if (jQuery("#consult-iframe").length) {
    window.addEventListener("message", function (event) {
      if (event.origin === "https://lp.scylladb.com" && event.data) {
        iFrameLoaded = true;
      }
    });

    function onConsultIFrameLoad() {
      if (!iFrameLoaded) {
        showIFrameError();
      }
    }

    setTimeout(onConsultIFrameLoad, 5000);
  }

  // trial form handler
  if (jQuery("#pardot_form").length) {
    window.addEventListener("message", function (event) {
      if (event.origin === "https://lp.scylladb.com" && event.data) {
        iFrameLoaded = true;
      }
    });

    function onRegisterIFrameLoad() {
      console.log( iFrameLoaded );
      if (!iFrameLoaded) {
        showIFrameError();
      }
    }

    setTimeout(onRegisterIFrameLoad, 5000);
  }

  // contact form handler
  if (jQuery(".button-github, .github-link").length) {
    jQuery.ajax({
      type: "GET",
      url: "https://api.github.com/repos/scylladb/scylladb",
      success: function (data) {
        if (data && data.stargazers_count) {
          jQuery(".button-github a, .github-link a").html(
            data.stargazers_count
          );
        }
      },
    });
  }

  if (jQuery("#homepage-rotation-items").length) {
    var i = 1,
      $items = jQuery(".homepage-rotation-item");

    setInterval(function () {
      var j = 0;

      $items.each(function () {
        $(this).removeClass("initial");

        if (j === i) {
          $(this).addClass("active");
        } else {
          $(this).removeClass("active");
        }

        j++;
      });

      i++;

      if (i >= $items.length) {
        i = 0;
      }
    }, 4000);
  }

  if ($(".summit-agenda")) {
    $(".summit-agenda").on("click", ".sz-session__title", function () {
      $(this)
        .toggleClass("active")
        .closest(".sz-session")
        .find(".sz-session__description")
        .toggleClass("active");
    });
  }

  // Agenda Items

  var seshInterval;

  $(".agenda-button--2023, .agenda-button--2024, .agenda-button--2025").on("click", function (e) {
    $(".agenda-button--2023, .agenda-button--2024, .agenda-button--2025").removeClass("active");
    $(this).addClass("active");

      // Prevent default anchor click behavior
      e.preventDefault();
      // Store hash
      var hash = $(this).find('a').attr('href');
      var hashTop = $(hash).offset().top - 140;
      console.log(hashTop);
      // Using jQuery's animate() method to add smooth page scroll
      // The optional number (800) specifies the number of milliseconds it takes to scroll to the specified area
      $('html, body').animate({
        scrollTop: hashTop
      }, 800, function(){

        // Add hash (#) to URL when done scrolling (default click behavior)
        window.location.hash = hash;
      });

  });

  function checkSeshDesc() {
    var sessionizeLoader = $(
      ".summit-agenda.y2025 .sessionize-loader .sz-session__description"
    );

    if (sessionizeLoader.length) {
      var agendaTitle = $(document).find(".sz-session__title");
      var agendaDesc = $(document).find(".sz-session__description");
      var sessionItem = $(document).find(".sz-session.sz-session--full");

      sessionItem.each(function () {
        var agendaQs = $(this).find(".sz-session__questions");
        var sessionTime = $(this)
          .find(".sz-session__time")
          .text()
          .replace(/\s/g, "-");
        var sessionDesc = $(this).find(".sz-session__description");
        $(this).addClass(sessionTime);
        var sessionSib = $(this).next();

        function sameTime() {
          if (
            sessionSib.hasClass(sessionTime) &&
            !sessionSib.hasClass("NOT-ANNOUNCED-YET")
          ) {
            $(this).addClass("same-time");
            sessionSib.addClass("same-time");
            sessionSib.prev().addClass("same-time-first");
          }
        }

        if (agendaQs.length) {
          $(this).find(".sz-session__speakers").append(agendaQs);
        }

        if (sessionDesc.length) {
          $(this).find(".sz-session__title").addClass("has-desc");
        }

        setTimeout(sameTime, 300);
      });

      //Append title before events without time
      $('li[class*="Wed"]')
        .first()
        .before(
          '<div id="wednesday" class="above-title-anchor"></div><h2 class="day-title">Wednesday, February 14th, 2024</h2>'
        );
      $('li[class*="Thu"]')
        .first()
        .before(
          '<div id="thursday" class="above-title-anchor"></div><h2 class="day-title">Thursday, February 15th, 2024</h2>'
        );
      $(".NOT-ANNOUNCED-YET")
        .first()
        .before(
          '<div id="instant-access" class="above-title-anchor"></div><h2 class="day-title not-announced-title">Instant Access</h2><p>These sessions will be available throughout the conference.</p>'
        );

      // agendaDesc.hide();

      // agendaTitle.click(function(){
      //   $(this).toggleClass('active').siblings('.sz-session__description').slideToggle();
      // });

      $(".sz-session__room").each(function () {
        if ($(this).text() === "Stage 1") {
          $(this).css("background", "#00EFB6");
        } else if ($(this).text() === "Stage 2") {
          $(this).css("background", "#FF2CDF");
        } else {
          $(this).css("background", "#915DFF");
        }
      });

      $(".sz-session.NOT-ANNOUNCED-YET").each(function () {
        $(this).append('<div class="sz-session__time">Instant Access</div>');
      });

      clearInterval(seshInterval); // stop the timer
    }
  }

  seshInterval = setInterval(checkSeshDesc, 100);

  function reloadSessions() {
    $.ajax({
      type: "POST",
      url: ajaxurl,
      data: {
        action: "update_presentations",
        type: $("#type-dropdown option:selected").val(),
        topic: $("#topic-dropdown option:selected").val(),
        search: $("#search-input").val(),
      },
      success: function (data) {
        $("#session-previews").html(data);
      },
    });
  }

  function reloadSessionFilters() {
    var type = $("#type-dropdown option:selected").val(),
      topic = $("#topic-dropdown option:selected").val(),
      search = $("#search-input").val();

    if (type || topic || search) {
      $(".reset_filters").removeClass("is_hidden");
      $(".current_filters").html("");

      if (type) {
        $(".current_filters").append(
          '<a class="current-filter type-filter">' +
            $("#type-dropdown option:selected").html() +
            '<i class="far fa-times" aria-hidden="true"></i></a>'
        );
      }

      if (topic) {
        $(".current_filters").append(
          '<a class="current-filter topic-filter">' +
            $("#topic-dropdown option:selected").html() +
            '<i class="far fa-times" aria-hidden="true"></i></a>'
        );
      }

      if (search) {
        $(".current_filters").append(
          '<a class="current-filter search-filter">' +
            search +
            '<i class="far fa-times" aria-hidden="true"></i></a>'
        );
      }
    } else {
      $(".current_filters").html("");
      $(".reset_filters").addClass("is_hidden");
    }
  }

  if ($(".session-filters-container").length) {
    $(".session-filter__dropdown").on("change", function () {
      reloadSessionFilters();
      reloadSessions();
    });

    // $( '.session-filter__button' )
    // 	.on( 'click', reloadSessions );

    $(".session-filters").on("submit", function (event) {
      event.preventDefault();

      reloadSessionFilters(), reloadSessions();
    });
  }

  $(".reset_filters").on("click", function () {
    // $( '#type-dropdown' ).val( '' );
    $("#type-dropdown option:selected").removeAttr("selected");
    $("#topic-dropdown option:selected").removeAttr("selected");
    $("#search-input").val("");
    // $( '.reset_filters' ).addClass( 'is_hidden' );
    // $( '.current_filters' ).html( '' );
    reloadSessionFilters();
    reloadSessions();
  });

  $(".current_filters").on("click", ".current-filter", function () {
    if ($(this).hasClass("type-filter")) {
      $("#type-dropdown option:selected").removeAttr("selected");
    }

    if ($(this).hasClass("topic-filter")) {
      $("#topic-dropdown option:selected").removeAttr("selected");
    }

    if ($(this).hasClass("search-filter")) {
      $("#search-input").val("");
    }

    reloadSessionFilters();
    reloadSessions();
  });
});

if (jQuery( ".dc__instructions" ).length ) {
  window.addEventListener( "message", function( event ) {
    if ( event.origin === "https://lp.scylladb.com" && event.data ) {
      if ( event.data === "submit" ) {

        setTimeout( function() {
          $( '.subscribe-pardot' )
            .animate( { width: 'toggle', opacity: 'toggle' }, 300 );

          // $( '.dc__item-download-link' )
          //   .animate( { width: '100%' }, 500 );
        }, 4700);
      }
    }
  });
}

jQuery(function ($){
  $('#past-sessions-filter--select').on('change', function(){
    const value = $(this).val();

    if (value !== 'year') {
      $(this).attr('disabled', true);
      window.location.href = `/resources/tech-talks/?years=${$(this).val()}`
    }
  });
});